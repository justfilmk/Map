import {
  require_react_dom
} from "./chunk-XPR23Y44.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-I4MZPW7S.js";

// node_modules/hash-sum/hash-sum.js
var require_hash_sum = __commonJS({
  "node_modules/hash-sum/hash-sum.js"(exports, module) {
    "use strict";
    function pad(hash3, len) {
      while (hash3.length < len) {
        hash3 = "0" + hash3;
      }
      return hash3;
    }
    function fold(hash3, text) {
      var i;
      var chr;
      var len;
      if (text.length === 0) {
        return hash3;
      }
      for (i = 0, len = text.length; i < len; i++) {
        chr = text.charCodeAt(i);
        hash3 = (hash3 << 5) - hash3 + chr;
        hash3 |= 0;
      }
      return hash3 < 0 ? hash3 * -2 : hash3;
    }
    function foldObject(hash3, o, seen) {
      return Object.keys(o).sort().reduce(foldKey, hash3);
      function foldKey(hash4, key) {
        return foldValue(hash4, o[key], key, seen);
      }
    }
    function foldValue(input, value, key, seen) {
      var hash3 = fold(fold(fold(input, key), toString2(value)), typeof value);
      if (value === null) {
        return fold(hash3, "null");
      }
      if (value === void 0) {
        return fold(hash3, "undefined");
      }
      if (typeof value === "object" || typeof value === "function") {
        if (seen.indexOf(value) !== -1) {
          return fold(hash3, "[Circular]" + key);
        }
        seen.push(value);
        var objHash = foldObject(hash3, value, seen);
        if (!("valueOf" in value) || typeof value.valueOf !== "function") {
          return objHash;
        }
        try {
          return fold(objHash, String(value.valueOf()));
        } catch (err) {
          return fold(objHash, "[valueOf exception]" + (err.stack || err.message));
        }
      }
      return fold(hash3, value.toString());
    }
    function toString2(o) {
      return Object.prototype.toString.call(o);
    }
    function sum(o) {
      return pad(foldValue(0, o, "", []).toString(16), 8);
    }
    module.exports = sum;
  }
});

// node_modules/node-fetch/browser.js
var require_browser = __commonJS({
  "node_modules/node-fetch/browser.js"(exports, module) {
    "use strict";
    var getGlobal = function() {
      if (typeof self !== "undefined") {
        return self;
      }
      if (typeof window !== "undefined") {
        return window;
      }
      if (typeof global !== "undefined") {
        return global;
      }
      throw new Error("unable to locate global object");
    };
    var globalObject = getGlobal();
    module.exports = exports = globalObject.fetch;
    if (globalObject.fetch) {
      exports.default = globalObject.fetch.bind(globalObject);
    }
    exports.Headers = globalObject.Headers;
    exports.Request = globalObject.Request;
    exports.Response = globalObject.Response;
  }
});

// node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js
var __assign = function() {
  __assign = Object.assign || function __assign3(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};

// node_modules/@builder.io/sdk/dist/index.esm.js
var import_hash_sum = __toESM(require_hash_sum());
(function() {
  if (typeof window === "undefined" || typeof window.CustomEvent === "function") return false;
  function CustomEvent2(event2, params) {
    params = params || { bubbles: false, cancelable: false, detail: null };
    var evt = document.createEvent("CustomEvent");
    evt.initCustomEvent(event2, params.bubbles, params.cancelable, params.detail);
    return evt;
  }
  window.CustomEvent = CustomEvent2;
})();
var isSafari = typeof window !== "undefined" && /^((?!chrome|android).)*safari/i.test(window.navigator.userAgent);
function nextTick(fn) {
  if (typeof setImmediate === "function" && typeof window === "undefined") {
    return setImmediate(fn);
  }
  if (isSafari || typeof MutationObserver === "undefined") {
    setTimeout(fn);
    return;
  }
  var called = 0;
  var observer = new MutationObserver(function() {
    return fn();
  });
  var element = document.createTextNode("");
  observer.observe(element, {
    characterData: true
  });
  element.data = String(called = ++called);
}
var PROPERTY_NAME_DENY_LIST = Object.freeze(["__proto__", "prototype", "constructor"]);
var QueryString = (
  /** @class */
  function() {
    function QueryString2() {
    }
    QueryString2.parseDeep = function(queryString) {
      var obj = this.parse(queryString);
      return this.deepen(obj);
    };
    QueryString2.stringifyDeep = function(obj) {
      var map = this.flatten(obj);
      return this.stringify(map);
    };
    QueryString2.parse = function(queryString) {
      var query = {};
      var pairs = (queryString[0] === "?" ? queryString.substr(1) : queryString).split("&");
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i].split("=");
        try {
          query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || "");
        } catch (error) {
        }
      }
      return query;
    };
    QueryString2.stringify = function(map) {
      var str = "";
      for (var key in map) {
        if (map.hasOwnProperty(key)) {
          var value = map[key];
          if (str) {
            str += "&";
          }
          str += encodeURIComponent(key) + "=" + encodeURIComponent(value);
        }
      }
      return str;
    };
    QueryString2.deepen = function(map) {
      var output = {};
      for (var k in map) {
        var t = output;
        var parts = k.split(".");
        var key = parts.pop();
        for (var _i2 = 0, parts_1 = parts; _i2 < parts_1.length; _i2++) {
          var part = parts_1[_i2];
          assertAllowedPropertyName(part);
          t = t[part] = t[part] || {};
        }
        t[key] = map[k];
      }
      return output;
    };
    QueryString2.flatten = function(obj, _current, _res) {
      if (_res === void 0) {
        _res = {};
      }
      for (var key in obj) {
        var value = obj[key];
        var newKey = _current ? _current + "." + key : key;
        if (value && typeof value === "object") {
          this.flatten(value, newKey, _res);
        } else {
          _res[newKey] = value;
        }
      }
      return _res;
    };
    return QueryString2;
  }()
);
function assertAllowedPropertyName(name) {
  if (PROPERTY_NAME_DENY_LIST.indexOf(name) >= 0)
    throw new Error('Property name "'.concat(name, '" is not allowed'));
}
var version = "1.3.1";
var Subscription = (
  /** @class */
  function() {
    function Subscription2(listeners, listener) {
      this.listeners = listeners;
      this.listener = listener;
      this.unsubscribed = false;
      this.otherSubscriptions = [];
    }
    Object.defineProperty(Subscription2.prototype, "closed", {
      get: function() {
        return this.unsubscribed;
      },
      enumerable: false,
      configurable: true
    });
    Subscription2.prototype.add = function(subscription) {
      this.otherSubscriptions.push(subscription);
    };
    Subscription2.prototype.unsubscribe = function() {
      if (this.unsubscribed) {
        return;
      }
      if (this.listener && this.listeners) {
        var index = this.listeners.indexOf(this.listener);
        if (index > -1) {
          this.listeners.splice(index, 1);
        }
      }
      this.otherSubscriptions.forEach(function(sub) {
        return sub.unsubscribe();
      });
      this.unsubscribed = true;
    };
    return Subscription2;
  }()
);
var BehaviorSubject = (
  /** @class */
  function() {
    function BehaviorSubject2(value) {
      this.value = value;
      this.listeners = [];
      this.errorListeners = [];
    }
    BehaviorSubject2.prototype.next = function(value) {
      this.value = value;
      for (var _i2 = 0, _a3 = this.listeners; _i2 < _a3.length; _i2++) {
        var listener = _a3[_i2];
        listener(value);
      }
    };
    BehaviorSubject2.prototype.map = function(fn) {
      var newSubject = new BehaviorSubject2(fn(this.value));
      this.subscribe(function(val) {
        newSubject.next(fn(val));
      });
      this.catch(function(err) {
        newSubject.error(err);
      });
      return newSubject;
    };
    BehaviorSubject2.prototype.catch = function(errorListener) {
      this.errorListeners.push(errorListener);
      return new Subscription(this.errorListeners, errorListener);
    };
    BehaviorSubject2.prototype.error = function(error) {
      for (var _i2 = 0, _a3 = this.errorListeners; _i2 < _a3.length; _i2++) {
        var listener = _a3[_i2];
        listener(error);
      }
    };
    BehaviorSubject2.prototype.subscribe = function(listener, errorListener) {
      this.listeners.push(listener);
      if (errorListener) {
        this.errorListeners.push(errorListener);
      }
      return new Subscription(this.listeners, listener);
    };
    BehaviorSubject2.prototype.toPromise = function() {
      var _this2 = this;
      return new Promise(function(resolve, reject) {
        var subscription = _this2.subscribe(function(value) {
          resolve(value);
          subscription.unsubscribe();
        }, function(err) {
          reject(err);
          subscription.unsubscribe();
        });
      });
    };
    BehaviorSubject2.prototype.promise = function() {
      return this.toPromise();
    };
    return BehaviorSubject2;
  }()
);
var State = {
  Pending: "Pending",
  Fulfilled: "Fulfilled",
  Rejected: "Rejected"
};
function isFunction(val) {
  return val && typeof val === "function";
}
function isObject(val) {
  return val && typeof val === "object";
}
var TinyPromise = (
  /** @class */
  function() {
    function TinyPromise2(executor) {
      this._state = State.Pending;
      this._handlers = [];
      this._value = null;
      executor(this._resolve.bind(this), this._reject.bind(this));
    }
    TinyPromise2.prototype._resolve = function(x) {
      var _this2 = this;
      if (x instanceof TinyPromise2) {
        x.then(this._resolve.bind(this), this._reject.bind(this));
      } else if (isObject(x) || isFunction(x)) {
        var called_1 = false;
        try {
          var thenable = x.then;
          if (isFunction(thenable)) {
            thenable.call(x, function(result) {
              if (!called_1)
                _this2._resolve(result);
              called_1 = true;
              return void 0;
            }, function(error) {
              if (!called_1)
                _this2._reject(error);
              called_1 = true;
              return void 0;
            });
          } else {
            this._fulfill(x);
          }
        } catch (ex) {
          if (!called_1) {
            this._reject(ex);
          }
        }
      } else {
        this._fulfill(x);
      }
    };
    TinyPromise2.prototype._fulfill = function(result) {
      var _this2 = this;
      this._state = State.Fulfilled;
      this._value = result;
      this._handlers.forEach(function(handler) {
        return _this2._callHandler(handler);
      });
    };
    TinyPromise2.prototype._reject = function(error) {
      var _this2 = this;
      this._state = State.Rejected;
      this._value = error;
      this._handlers.forEach(function(handler) {
        return _this2._callHandler(handler);
      });
    };
    TinyPromise2.prototype._isPending = function() {
      return this._state === State.Pending;
    };
    TinyPromise2.prototype._isFulfilled = function() {
      return this._state === State.Fulfilled;
    };
    TinyPromise2.prototype._isRejected = function() {
      return this._state === State.Rejected;
    };
    TinyPromise2.prototype._addHandler = function(onFulfilled, onRejected) {
      this._handlers.push({
        onFulfilled,
        onRejected
      });
    };
    TinyPromise2.prototype._callHandler = function(handler) {
      if (this._isFulfilled() && isFunction(handler.onFulfilled)) {
        handler.onFulfilled(this._value);
      } else if (this._isRejected() && isFunction(handler.onRejected)) {
        handler.onRejected(this._value);
      }
    };
    TinyPromise2.prototype.then = function(onFulfilled, onRejected) {
      var _this2 = this;
      switch (this._state) {
        case State.Pending: {
          return new TinyPromise2(function(resolve, reject) {
            _this2._addHandler(function(value) {
              nextTick(function() {
                try {
                  if (isFunction(onFulfilled)) {
                    resolve(onFulfilled(value));
                  } else {
                    resolve(value);
                  }
                } catch (ex) {
                  reject(ex);
                }
              });
            }, function(error) {
              nextTick(function() {
                try {
                  if (isFunction(onRejected)) {
                    resolve(onRejected(error));
                  } else {
                    reject(error);
                  }
                } catch (ex) {
                  reject(ex);
                }
              });
            });
          });
        }
        case State.Fulfilled: {
          return new TinyPromise2(function(resolve, reject) {
            nextTick(function() {
              try {
                if (isFunction(onFulfilled)) {
                  resolve(onFulfilled(_this2._value));
                } else {
                  resolve(_this2._value);
                }
              } catch (ex) {
                reject(ex);
              }
            });
          });
        }
        case State.Rejected: {
          return new TinyPromise2(function(resolve, reject) {
            nextTick(function() {
              try {
                if (isFunction(onRejected)) {
                  resolve(onRejected(_this2._value));
                } else {
                  reject(_this2._value);
                }
              } catch (ex) {
                reject(ex);
              }
            });
          });
        }
      }
    };
    return TinyPromise2;
  }()
);
var Promise$1 = typeof Promise !== "undefined" ? Promise : TinyPromise;
var serverOnlyRequire;
try {
  serverOnlyRequire = eval("require");
} catch (err) {
  serverOnlyRequire = function() {
    return null;
  };
}
var serverOnlyRequire$1 = serverOnlyRequire;
function promiseResolve(value) {
  return new Promise$1(function(resolve) {
    return resolve(value);
  });
}
function tinyFetch(url, options) {
  if (options === void 0) {
    options = {};
  }
  return new Promise$1(function(resolve, reject) {
    var request = new XMLHttpRequest();
    request.open(options.method || "get", url, true);
    if (options.headers) {
      for (var i in options.headers) {
        request.setRequestHeader(i, options.headers[i]);
      }
    }
    request.withCredentials = options.credentials === "include";
    request.onload = function() {
      resolve(response());
    };
    request.onerror = reject;
    request.send(options.body);
    function response() {
      var keys = [];
      var all = [];
      var headers = {};
      var header = void 0;
      request.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function(_match, _key, value) {
        var key = _key;
        keys.push(key = key.toLowerCase());
        all.push([key, value]);
        header = headers[key];
        headers[key] = header ? "".concat(header, ",").concat(value) : value;
        return "";
      });
      return {
        ok: (request.status / 100 | 0) === 2,
        status: request.status,
        statusText: request.statusText,
        url: request.responseURL,
        clone: response,
        text: function() {
          return promiseResolve(request.responseText);
        },
        json: function() {
          return promiseResolve(request.responseText).then(JSON.parse);
        },
        blob: function() {
          return promiseResolve(new Blob([request.response]));
        },
        headers: {
          keys: function() {
            return keys;
          },
          entries: function() {
            return all;
          },
          get: function(n) {
            return headers[n.toLowerCase()];
          },
          has: function(n) {
            return n.toLowerCase() in headers;
          }
        }
      };
    }
  });
}
function getFetch() {
  var _fetch = void 0;
  if (globalThis.fetch) {
    _fetch !== null && _fetch !== void 0 ? _fetch : _fetch = globalThis.fetch;
  } else if (typeof window === "undefined") {
    try {
      _fetch !== null && _fetch !== void 0 ? _fetch : _fetch = serverOnlyRequire$1("node-fetch");
    } catch (e) {
      console.warn("node-fetch is not installed. consider polyfilling fetch or installing node-fetch.");
      console.warn(e);
    }
  }
  return _fetch !== null && _fetch !== void 0 ? _fetch : tinyFetch;
}
function assign(target) {
  var args = [];
  for (var _i2 = 1; _i2 < arguments.length; _i2++) {
    args[_i2 - 1] = arguments[_i2];
  }
  var to = Object(target);
  for (var index = 1; index < arguments.length; index++) {
    var nextSource = arguments[index];
    if (nextSource != null) {
      for (var nextKey in nextSource) {
        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
          to[nextKey] = nextSource[nextKey];
        }
      }
    }
  }
  return to;
}
function throttle(func, wait, options) {
  if (options === void 0) {
    options = {};
  }
  var context;
  var args;
  var result;
  var timeout = null;
  var previous = 0;
  var later = function() {
    previous = options.leading === false ? 0 : Date.now();
    timeout = null;
    result = func.apply(context, args);
    if (!timeout)
      context = args = null;
  };
  return function() {
    var now = Date.now();
    if (!previous && options.leading === false)
      previous = now;
    var remaining = wait - (now - previous);
    context = this;
    args = arguments;
    if (remaining <= 0 || remaining > wait) {
      if (timeout) {
        clearTimeout(timeout);
        timeout = null;
      }
      previous = now;
      result = func.apply(context, args);
      if (!timeout)
        context = args = null;
    } else if (!timeout && options.trailing !== false) {
      timeout = setTimeout(later, remaining);
    }
    return result;
  };
}
var camelCaseToKebabCase = function(str) {
  return str ? str.replace(/([A-Z])/g, function(g) {
    return "-".concat(g[0].toLowerCase());
  }) : "";
};
var Animator = (
  /** @class */
  function() {
    function Animator2() {
    }
    Animator2.prototype.bindAnimations = function(animations) {
      for (var _i2 = 0, animations_1 = animations; _i2 < animations_1.length; _i2++) {
        var animation = animations_1[_i2];
        switch (animation.trigger) {
          case "pageLoad":
            this.triggerAnimation(animation);
            break;
          case "hover":
            this.bindHoverAnimation(animation);
            break;
          case "scrollInView":
            this.bindScrollInViewAnimation(animation);
            break;
        }
      }
    };
    Animator2.prototype.warnElementNotPresent = function(id) {
      console.warn("Cannot animate element: element with ID ".concat(id, " not found!"));
    };
    Animator2.prototype.augmentAnimation = function(animation, element) {
      var stylesUsed = this.getAllStylesUsed(animation);
      var computedStyle = getComputedStyle(element);
      var firstStyles = animation.steps[0].styles;
      var lastStyles = animation.steps[animation.steps.length - 1].styles;
      var bothStyles = [firstStyles, lastStyles];
      for (var _i2 = 0, bothStyles_1 = bothStyles; _i2 < bothStyles_1.length; _i2++) {
        var styles = bothStyles_1[_i2];
        for (var _a3 = 0, stylesUsed_1 = stylesUsed; _a3 < stylesUsed_1.length; _a3++) {
          var style = stylesUsed_1[_a3];
          if (!(style in styles)) {
            styles[style] = computedStyle[style];
          }
        }
      }
    };
    Animator2.prototype.getAllStylesUsed = function(animation) {
      var properties = [];
      for (var _i2 = 0, _a3 = animation.steps; _i2 < _a3.length; _i2++) {
        var step = _a3[_i2];
        for (var key in step.styles) {
          if (properties.indexOf(key) === -1) {
            properties.push(key);
          }
        }
      }
      return properties;
    };
    Animator2.prototype.triggerAnimation = function(animation) {
      var _this2 = this;
      var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ""));
      if (!elements.length) {
        this.warnElementNotPresent(animation.elementId || animation.id || "");
        return;
      }
      Array.from(elements).forEach(function(element) {
        _this2.augmentAnimation(animation, element);
        element.style.transition = "none";
        element.style.transitionDelay = "0";
        assign(element.style, animation.steps[0].styles);
        setTimeout(function() {
          element.style.transition = "all ".concat(animation.duration, "s ").concat(camelCaseToKebabCase(animation.easing));
          if (animation.delay) {
            element.style.transitionDelay = animation.delay + "s";
          }
          assign(element.style, animation.steps[1].styles);
          setTimeout(function() {
            element.style.transition = "";
            element.style.transitionDelay = "";
          }, (animation.delay || 0) * 1e3 + animation.duration * 1e3 + 100);
        });
      });
    };
    Animator2.prototype.bindHoverAnimation = function(animation) {
      var _this2 = this;
      var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ""));
      if (!elements.length) {
        this.warnElementNotPresent(animation.elementId || animation.id || "");
        return;
      }
      Array.from(elements).forEach(function(element) {
        _this2.augmentAnimation(animation, element);
        var defaultState = animation.steps[0].styles;
        var hoverState = animation.steps[1].styles;
        function attachDefaultState() {
          assign(element.style, defaultState);
        }
        function attachHoverState() {
          assign(element.style, hoverState);
        }
        attachDefaultState();
        element.addEventListener("mouseenter", attachHoverState);
        element.addEventListener("mouseleave", attachDefaultState);
        setTimeout(function() {
          element.style.transition = "all ".concat(animation.duration, "s ").concat(camelCaseToKebabCase(animation.easing));
          if (animation.delay) {
            element.style.transitionDelay = animation.delay + "s";
          }
        });
      });
    };
    Animator2.prototype.bindScrollInViewAnimation = function(animation) {
      var _this2 = this;
      var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ""));
      if (!elements.length) {
        this.warnElementNotPresent(animation.elementId || animation.id || "");
        return;
      }
      Array.from(elements).forEach(function(element) {
        _this2.augmentAnimation(animation, element);
        var triggered = false;
        var pendingAnimation = false;
        function immediateOnScroll() {
          if (!triggered && isScrolledIntoView(element)) {
            triggered = true;
            pendingAnimation = true;
            setTimeout(function() {
              assign(element.style, animation.steps[1].styles);
              if (!animation.repeat) {
                document.removeEventListener("scroll", onScroll);
              }
              setTimeout(function() {
                pendingAnimation = false;
                if (!animation.repeat) {
                  element.style.transition = "";
                  element.style.transitionDelay = "";
                }
              }, (animation.duration + (animation.delay || 0)) * 1e3 + 100);
            });
          } else if (animation.repeat && triggered && !pendingAnimation && !isScrolledIntoView(element)) {
            triggered = false;
            assign(element.style, animation.steps[0].styles);
          }
        }
        var onScroll = throttle(immediateOnScroll, 200, { leading: false });
        function isScrolledIntoView(elem) {
          var rect = elem.getBoundingClientRect();
          var windowHeight = window.innerHeight;
          var thresholdPercent = (animation.thresholdPercent || 0) / 100;
          var threshold = thresholdPercent * windowHeight;
          return rect.bottom > threshold && rect.top < windowHeight - threshold;
        }
        var defaultState = animation.steps[0].styles;
        function attachDefaultState() {
          assign(element.style, defaultState);
        }
        attachDefaultState();
        setTimeout(function() {
          element.style.transition = "all ".concat(animation.duration, "s ").concat(camelCaseToKebabCase(animation.easing));
          if (animation.delay) {
            element.style.transitionDelay = animation.delay + "s";
          }
        });
        document.addEventListener("scroll", onScroll, { capture: true, passive: true });
        immediateOnScroll();
      });
    };
    return Animator2;
  }()
);
function getTopLevelDomain(host) {
  var parts = host.split(".");
  if (parts.length > 2) {
    return parts.slice(1).join(".");
  }
  return host;
}
var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
var Cookies = (
  /** @class */
  function() {
    function Cookies2(request, response) {
      this.request = request;
      this.response = response;
    }
    Cookies2.prototype.get = function(name) {
      var header = this.request.headers["cookie"];
      if (!header) {
        return;
      }
      var match = header.match(getPattern(name));
      if (!match) {
        return;
      }
      var value = match[1];
      return value;
    };
    Cookies2.prototype.set = function(name, value, opts) {
      var res = this.response;
      var req = this.request;
      var headers = res.getHeader("Set-Cookie") || [];
      var secure = this.secure !== void 0 ? !!this.secure : req.protocol === "https" || req.connection.encrypted;
      var cookie = new Cookie(name, value, opts);
      if (typeof headers === "string") {
        headers = [headers];
      }
      if (!secure && opts && opts.secure) {
        throw new Error("Cannot send secure cookie over unencrypted connection");
      }
      cookie.secure = secure;
      if (opts && "secure" in opts) {
        cookie.secure = !!opts.secure;
      }
      cookie.domain = req.headers.host && getTopLevelDomain(req.headers.host);
      pushCookie(headers, cookie);
      var setHeader = res.setHeader;
      setHeader.call(res, "Set-Cookie", headers);
      return this;
    };
    return Cookies2;
  }()
);
var Cookie = (
  /** @class */
  function() {
    function Cookie2(name, value, attrs) {
      this.path = "/";
      this.domain = void 0;
      this.httpOnly = true;
      this.sameSite = false;
      this.secure = false;
      this.overwrite = false;
      this.name = "";
      this.value = "";
      if (!fieldContentRegExp.test(name)) {
        throw new TypeError("argument name is invalid");
      }
      if (value && !fieldContentRegExp.test(value)) {
        throw new TypeError("argument value is invalid");
      }
      if (!value) {
        this.expires = /* @__PURE__ */ new Date(0);
      }
      this.name = name;
      this.value = value || "";
      if (attrs.expires) {
        this.expires = attrs.expires;
      }
      if (attrs.secure) {
        this.secure = attrs.secure;
      }
    }
    Cookie2.prototype.toString = function() {
      return "".concat(this.name, "=").concat(this.value);
    };
    Cookie2.prototype.toHeader = function() {
      var header = this.toString();
      if (this.maxAge) {
        this.expires = new Date(Date.now() + this.maxAge);
      }
      if (this.path) {
        header += "; path=".concat(this.path);
      }
      if (this.expires) {
        header += "; expires=".concat(this.expires.toUTCString());
      }
      if (this.domain) {
        header += "; domain=".concat(this.domain);
      }
      header += "; SameSite=".concat(this.sameSite === true ? "strict" : "None");
      if (this.secure) {
        header += "; secure";
      }
      if (this.httpOnly) {
        header += "; httponly";
      }
      return header;
    };
    return Cookie2;
  }()
);
function getPattern(name) {
  return new RegExp("(?:^|;) *".concat(name.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), "=([^;]*)"));
}
function pushCookie(headers, cookie) {
  if (cookie.overwrite) {
    for (var i = headers.length - 1; i >= 0; i--) {
      if (headers[i].indexOf("".concat(cookie.name, "=")) === 0) {
        headers.splice(i, 1);
      }
    }
  }
  headers.push(cookie.toHeader());
}
function omit(obj) {
  var values = [];
  for (var _i2 = 1; _i2 < arguments.length; _i2++) {
    values[_i2 - 1] = arguments[_i2];
  }
  var newObject = Object.assign({}, obj);
  for (var _a3 = 0, values_1 = values; _a3 < values_1.length; _a3++) {
    var key = values_1[_a3];
    delete newObject[key];
  }
  return newObject;
}
function uuidv4() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
    var r = Math.random() * 16 | 0, v = c == "x" ? r : r & 3 | 8;
    return v.toString(16);
  });
}
function uuid() {
  return uuidv4().replace(/-/g, "");
}
function emptyUrl() {
  return {
    query: null,
    port: null,
    auth: null,
    hash: null,
    host: null,
    hostname: null,
    href: null,
    path: null,
    pathname: null,
    protocol: null,
    search: null,
    slashes: null
  };
}
function parse(url) {
  var out = emptyUrl();
  var u;
  var pathOnly = url === "" || url[0] === "/";
  if (pathOnly) {
    u = new URL(url, "http://0.0.0.0/");
    out.href = u.href;
    out.href = out.href.slice(14);
  } else {
    u = new URL(url);
    out.href = u.href;
    out.port = u.port === "" ? null : u.port;
    out.hash = u.hash === "" ? null : u.hash;
    out.host = u.host;
    out.hostname = u.hostname;
    out.href = u.href;
    out.pathname = u.pathname;
    out.protocol = u.protocol;
    out.slashes = url[u.protocol.length] === "/";
  }
  out.search = u.search;
  out.query = u.search.slice(1);
  out.path = "".concat(u.pathname).concat(u.search);
  out.pathname = u.pathname;
  return out;
}
function toError(err) {
  if (err instanceof Error)
    return err;
  return new Error(String(err));
}
var DEFAULT_API_VERSION = "v1";
function datePlusMinutes(minutes) {
  if (minutes === void 0) {
    minutes = 30;
  }
  return new Date(Date.now() + minutes * 6e4);
}
var isPositiveNumber = function(thing) {
  return typeof thing === "number" && !isNaN(thing) && thing >= 0;
};
var isReactNative = typeof navigator === "object" && navigator.product === "ReactNative";
var validEnvList = [
  "production",
  "qa",
  "test",
  "development",
  "dev",
  "cdn-qa",
  "cloud",
  "fast",
  "cdn2",
  "cdn-prod"
];
function getQueryParam(url, variable) {
  var query = url.split("?")[1] || "";
  var vars = query.split("&");
  for (var i = 0; i < vars.length; i++) {
    var pair = vars[i].split("=");
    if (decodeURIComponent(pair[0]) === variable) {
      return decodeURIComponent(pair[1]);
    }
  }
  return null;
}
var urlParser = {
  parse: function(url) {
    var el = document.createElement("a");
    el.href = url;
    var out = {};
    var props = [
      "username",
      "password",
      "host",
      "hostname",
      "port",
      "protocol",
      "origin",
      "pathname",
      "search",
      "hash"
    ];
    for (var _i2 = 0, props_1 = props; _i2 < props_1.length; _i2++) {
      var prop = props_1[_i2];
      out[prop] = el[prop];
    }
    if ((out.pathname || out.pathname === "") && typeof out.pathname === "string" && out.pathname.indexOf("/") !== 0) {
      out.pathname = "/" + out.pathname;
    }
    return out;
  }
};
var parse$1 = isReactNative ? function() {
  return emptyUrl();
} : typeof window === "object" ? urlParser.parse : parse;
function setCookie(name$$1, value, expires) {
  try {
    var expiresString = "";
    if (expires) {
      expiresString = "; expires=" + expires.toUTCString();
    }
    var secure = isBrowser ? location.protocol === "https:" : true;
    document.cookie = name$$1 + "=" + (value || "") + expiresString + "; path=/" + "; domain=".concat(getTopLevelDomain(location.hostname)) + (secure ? ";secure ; SameSite=None" : "");
  } catch (err) {
    console.warn("Could not set cookie", err);
  }
}
function getCookie(name$$1) {
  try {
    return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*" + encodeURIComponent(name$$1).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*([^;]*).*$)|^.*$"), "$1")) || null;
  } catch (err) {
    console.warn("Could not get cookie", err);
  }
}
function size(object) {
  return Object.keys(object).length;
}
function find(target, callback) {
  var list = target;
  var length = list.length >>> 0;
  var thisArg = arguments[1];
  for (var i = 0; i < length; i++) {
    var element = list[i];
    if (callback.call(thisArg, element, i, list)) {
      return element;
    }
  }
}
var sessionStorageKey = "builderSessionId";
var localStorageKey = "builderVisitorId";
var isBrowser = typeof window !== "undefined" && !isReactNative;
var isIframe = isBrowser && window.top !== window.self;
function BuilderComponent(info) {
  if (info === void 0) {
    info = {};
  }
  return Builder.Component(info);
}
var Builder = (
  /** @class */
  function() {
    function Builder2(apiKey, request, response, forceNewInstance, authToken, apiVersion) {
      if (apiKey === void 0) {
        apiKey = null;
      }
      if (forceNewInstance === void 0) {
        forceNewInstance = false;
      }
      if (authToken === void 0) {
        authToken = null;
      }
      var _this2 = this;
      this.request = request;
      this.response = response;
      this.eventsQueue = [];
      this.throttledClearEventsQueue = throttle(function() {
        _this2.processEventsQueue();
        _this2.setCookie(sessionStorageKey, _this2.sessionId, datePlusMinutes(30));
      }, 5);
      this.env = "production";
      this.sessionId = this.getSessionId();
      this.targetContent = true;
      this.contentPerRequest = 1;
      this.allowCustomFonts = true;
      this.cookies = null;
      this.cachebust = false;
      this.overrideParams = "";
      this.noCache = false;
      this.preview = false;
      this.apiVersion$ = new BehaviorSubject(void 0);
      this.canTrack$ = new BehaviorSubject(!this.browserTrackingDisabled);
      this.apiKey$ = new BehaviorSubject(null);
      this.authToken$ = new BehaviorSubject(null);
      this.userAttributesChanged = new BehaviorSubject(null);
      this.editingMode$ = new BehaviorSubject(isIframe);
      this.editingModel$ = new BehaviorSubject(null);
      this.userAgent = typeof navigator === "object" && navigator.userAgent || "";
      this.trackingHooks = [];
      this.visitorId = this.getVisitorId();
      this.autoTrack = !Builder2.isBrowser ? false : !this.isDevelopmentEnv && !(Builder2.isBrowser && location.search.indexOf("builder.preview=") !== -1);
      this.trackingUserAttributes = {};
      this.blockContentLoading = "";
      this.observersByKey = {};
      this.noEditorUpdates = {};
      this.overrides = {};
      this.queryOptions = {};
      this.getContentQueue = null;
      this.priorContentQueue = null;
      this.testCookiePrefix = "builder.tests";
      this.cookieQueue = [];
      if (Builder2.isBrowser && !forceNewInstance && Builder2.singletonInstance) {
        return Builder2.singletonInstance;
      }
      if (this.request && this.response) {
        this.setUserAgent(this.request.headers["user-agent"] || "");
        this.cookies = new Cookies(this.request, this.response);
      }
      if (apiKey) {
        this.apiKey = apiKey;
      }
      if (apiVersion) {
        this.apiVersion = apiVersion;
      }
      if (authToken) {
        this.authToken = authToken;
      }
      if (isBrowser) {
        this.bindMessageListeners();
        if (Builder2.isEditing) {
          parent.postMessage({
            type: "builder.animatorOptions",
            data: {
              options: {
                version: 2
              }
            }
          }, "*");
        }
      }
      if (isIframe) {
        this.messageFrameLoaded();
      }
      this.canTrack$.subscribe(function(value) {
        if (value) {
          if (typeof sessionStorage !== "undefined") {
            try {
              if (!sessionStorage.getItem(sessionStorageKey)) {
                sessionStorage.setItem(sessionStorageKey, _this2.sessionId);
              }
            } catch (err) {
              console.debug("Session storage error", err);
            }
          }
          if (_this2.eventsQueue.length) {
            _this2.throttledClearEventsQueue();
          }
          if (_this2.cookieQueue.length) {
            _this2.cookieQueue.forEach(function(item) {
              _this2.setCookie(item[0], item[1]);
            });
            _this2.cookieQueue.length = 0;
          }
        }
      });
      if (isBrowser) {
        this.setTestsFromUrl();
        this.getOverridesFromQueryString();
      }
    }
    Builder2.register = function(type, info) {
      var typeList = this.registry[type];
      if (!typeList) {
        typeList = this.registry[type] = [];
      }
      typeList.push(info);
      if (Builder2.isBrowser) {
        var message2 = {
          type: "builder.register",
          data: {
            type,
            info
          }
        };
        try {
          parent.postMessage(message2, "*");
          if (parent !== window) {
            window.postMessage(message2, "*");
          }
        } catch (err) {
          console.debug("Could not postmessage", err);
        }
      }
      this.registryChange.next(this.registry);
    };
    Builder2.registerEditor = function(info) {
      if (Builder2.isBrowser) {
        window.postMessage({
          type: "builder.registerEditor",
          data: omit(info, "component")
        }, "*");
        var hostname = location.hostname;
        if (!Builder2.isTrustedHost(hostname)) {
          console.error("Builder.registerEditor() called in the wrong environment! You cannot load custom editors from your app, they must be loaded through the Builder.io app itself. Follow the readme here for more details: https://github.com/builderio/builder/tree/master/plugins/cloudinary or contact chat us in our Spectrum community for help: https://spectrum.chat/builder");
        }
      }
      this.editors.push(info);
    };
    Builder2.registerPlugin = function(info) {
      this.plugins.push(info);
    };
    Builder2.registerAction = function(action) {
      this.actions.push(action);
    };
    Builder2.registerTrustedHost = function(host) {
      this.trustedHosts.push(host);
    };
    Builder2.isTrustedHost = function(hostname) {
      return this.trustedHosts.findIndex(function(trustedHost) {
        return trustedHost.startsWith("*.") ? hostname.endsWith(trustedHost.slice(1)) : trustedHost === hostname;
      }) > -1;
    };
    Builder2.runAction = function(action) {
      var actionObject = typeof action === "string" ? find(this.actions, function(item) {
        return item.name === action;
      }) : action;
      if (!actionObject) {
        throw new Error("Action not found: ".concat(action));
      }
    };
    Builder2.fields = function(name$$1, fields) {
      var _a3;
      (_a3 = window.parent) === null || _a3 === void 0 ? void 0 : _a3.postMessage({
        type: "builder.fields",
        data: { name: name$$1, fields }
      }, "*");
    };
    Builder2.set = function(settings) {
      Builder2.register("editor.settings", settings);
    };
    Builder2.import = function(packageName) {
      if (!Builder2.isBrowser) {
        console.warn("Builder.import used on the server - this should only be used in the browser");
        return;
      }
      var System = window.System;
      if (!System) {
        console.warn("System.js not available. Please include System.js when using Builder.import");
        return;
      }
      return System.import("https://cdn.builder.io/systemjs/".concat(packageName));
    };
    Object.defineProperty(Builder2, "editingPage", {
      // useCdnApi = false;
      get: function() {
        return this._editingPage;
      },
      set: function(editingPage) {
        this._editingPage = editingPage;
        if (isBrowser && isIframe) {
          if (editingPage) {
            document.body.classList.add("builder-editing-page");
          } else {
            document.body.classList.remove("builder-editing-page");
          }
        }
      },
      enumerable: false,
      configurable: true
    });
    Builder2.prepareComponentSpecToSend = function(spec) {
      return __assign(__assign(__assign({}, spec), spec.inputs && {
        inputs: spec.inputs.map(function(input) {
          var _a3;
          var keysToConvertFnToString = ["onChange", "showIf"];
          for (var _i2 = 0, keysToConvertFnToString_1 = keysToConvertFnToString; _i2 < keysToConvertFnToString_1.length; _i2++) {
            var key = keysToConvertFnToString_1[_i2];
            if (input[key] && typeof input[key] === "function") {
              var fn = input[key];
              input = __assign(__assign({}, input), (_a3 = {}, _a3[key] = "return (".concat(fn.toString(), ").apply(this, arguments)"), _a3));
            }
          }
          return input;
        })
      }), { hooks: Object.keys(spec.hooks || {}).reduce(function(memo, key) {
        var value = spec.hooks && spec.hooks[key];
        if (!value) {
          return memo;
        }
        if (typeof value === "string") {
          memo[key] = value;
        } else {
          memo[key] = "return (".concat(value.toString(), ").apply(this, arguments)");
        }
        return memo;
      }, {}), class: void 0 });
    };
    Builder2.registerBlock = function(component, options) {
      this.registerComponent(component, options);
    };
    Builder2.registerComponent = function(component, options) {
      var _a3;
      var spec = __assign(__assign({ class: component }, component.builderOptions), options);
      this.addComponent(spec);
      var editable = options.models && this.singletonInstance.editingModel ? isBrowser && options.models.includes(this.singletonInstance.editingModel) : isBrowser;
      if (editable) {
        var sendSpec = this.prepareComponentSpecToSend(spec);
        (_a3 = window.parent) === null || _a3 === void 0 ? void 0 : _a3.postMessage({
          type: "builder.registerComponent",
          data: sendSpec
        }, "*");
      }
    };
    Builder2.addComponent = function(component) {
      var current = find(this.components, function(item) {
        return item.name === component.name;
      });
      if (current) {
        if (current.class && !component.class) {
          return;
        }
        this.components.splice(this.components.indexOf(current), 1, component);
      } else {
        this.components.push(component);
      }
    };
    Builder2.component = function(info) {
      var _this2 = this;
      if (info === void 0) {
        info = {};
      }
      return function(component) {
        var _a3;
        var spec = __assign(__assign({}, info), { class: component });
        if (!spec.name) {
          spec.name = component.name;
        }
        _this2.addComponent(spec);
        var sendSpec = _this2.prepareComponentSpecToSend(spec);
        if (isBrowser) {
          (_a3 = window.parent) === null || _a3 === void 0 ? void 0 : _a3.postMessage({
            type: "builder.registerComponent",
            data: sendSpec
          }, "*");
        }
        return component;
      };
    };
    Object.defineProperty(Builder2, "Component", {
      get: function() {
        return this.component;
      },
      enumerable: false,
      configurable: true
    });
    Builder2.prototype.processEventsQueue = function() {
      if (!this.eventsQueue.length) {
        return;
      }
      var events = this.eventsQueue;
      this.eventsQueue = [];
      var fullUserAttributes = __assign(__assign({}, Builder2.overrideUserAttributes), this.trackingUserAttributes);
      for (var _i2 = 0, events_1 = events; _i2 < events_1.length; _i2++) {
        var event_1 = events_1[_i2];
        if (!event_1.data.metadata) {
          event_1.data.metadata = {};
        }
        if (!event_1.data.metadata.user) {
          event_1.data.metadata.user = {};
        }
        Object.assign(event_1.data.metadata.user, fullUserAttributes, event_1.data.metadata.user);
      }
      var host = this.host;
      getFetch()("".concat(host, "/api/v1/track"), {
        method: "POST",
        body: JSON.stringify({ events }),
        headers: {
          "content-type": "application/json"
        },
        mode: "cors"
      }).catch(function() {
      });
    };
    Object.defineProperty(Builder2.prototype, "browserTrackingDisabled", {
      get: function() {
        return Builder2.isBrowser && Boolean(window.builderNoTrack || !navigator.cookieEnabled);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Builder2.prototype, "canTrack", {
      get: function() {
        return this.canTrack$.value;
      },
      set: function(canTrack) {
        if (this.canTrack !== canTrack) {
          this.canTrack$.next(canTrack);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Builder2.prototype, "apiVersion", {
      get: function() {
        return this.apiVersion$.value;
      },
      set: function(apiVersion) {
        if (this.apiVersion !== apiVersion) {
          this.apiVersion$.next(apiVersion);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Builder2.prototype, "editingMode", {
      get: function() {
        return this.editingMode$.value;
      },
      set: function(value) {
        if (value !== this.editingMode) {
          this.editingMode$.next(value);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Builder2.prototype, "editingModel", {
      get: function() {
        return this.editingModel$.value;
      },
      set: function(value) {
        if (value !== this.editingModel) {
          this.editingModel$.next(value);
        }
      },
      enumerable: false,
      configurable: true
    });
    Builder2.prototype.findParentElement = function(target, callback, checkElement) {
      if (checkElement === void 0) {
        checkElement = true;
      }
      if (!(target instanceof HTMLElement)) {
        return null;
      }
      var parent2 = checkElement ? target : target.parentElement;
      do {
        if (!parent2) {
          return null;
        }
        var matches = callback(parent2);
        if (matches) {
          return parent2;
        }
      } while (parent2 = parent2.parentElement);
      return null;
    };
    Builder2.prototype.findBuilderParent = function(target) {
      return this.findParentElement(target, function(el) {
        var id = el.getAttribute("builder-id") || el.id;
        return Boolean(id && id.indexOf("builder-") === 0);
      });
    };
    Builder2.prototype.setUserAgent = function(userAgent) {
      this.userAgent = userAgent || "";
    };
    Builder2.prototype.setTrackingHook = function(hook) {
      this.trackingHooks.push(hook);
    };
    Builder2.prototype.track = function(eventName, properties, context) {
      if (properties === void 0) {
        properties = {};
      }
      if (isIframe || !isBrowser || Builder2.isPreviewing) {
        return;
      }
      var apiKey = this.apiKey;
      if (!apiKey) {
        console.error('Builder integration error: Looks like the Builder SDK has not been initialized properly (your API key has not been set). Make sure you are calling `builder.init("«YOUR-API-KEY»");` as early as possible in your application\'s code.');
        return;
      }
      var eventData = JSON.parse(JSON.stringify({
        type: eventName,
        data: __assign(__assign({}, omit(properties, "meta")), { metadata: __assign(__assign({ sdkVersion: Builder2.VERSION, url: location.href }, properties.meta), properties.metadata), ownerId: apiKey, userAttributes: this.getUserAttributes(), sessionId: this.sessionId, visitorId: this.visitorId })
      }));
      for (var _i2 = 0, _a3 = this.trackingHooks; _i2 < _a3.length; _i2++) {
        var hook = _a3[_i2];
        var returnValue = hook(eventData, context || {});
        if (returnValue) {
          eventData = returnValue;
        }
      }
      this.eventsQueue.push(eventData);
      if (this.canTrack) {
        this.throttledClearEventsQueue();
      }
    };
    Builder2.prototype.getSessionId = function() {
      var _this2 = this;
      var sessionId = null;
      try {
        if (Builder2.isBrowser && typeof sessionStorage !== "undefined") {
          sessionId = this.getCookie(sessionStorageKey);
        }
      } catch (err) {
        console.debug("Session storage error", err);
      }
      if (!sessionId) {
        sessionId = uuid();
      }
      if (Builder2.isBrowser) {
        setTimeout(function() {
          try {
            if (_this2.canTrack) {
              _this2.setCookie(sessionStorageKey, sessionId, datePlusMinutes(30));
            }
          } catch (err) {
            console.debug("Cookie setting error", err);
          }
        });
      }
      return sessionId;
    };
    Builder2.prototype.getVisitorId = function() {
      var _this2 = this;
      if (this.visitorId) {
        return this.visitorId;
      }
      var visitorId = null;
      try {
        if (Builder2.isBrowser && typeof localStorage !== "undefined") {
          visitorId = localStorage.getItem(localStorageKey);
        }
      } catch (err) {
        console.debug("Local storage error", err);
      }
      if (!visitorId) {
        visitorId = uuid();
      }
      this.visitorId = visitorId;
      if (Builder2.isBrowser) {
        setTimeout(function() {
          try {
            if (_this2.canTrack && typeof localStorage !== "undefined" && visitorId) {
              localStorage.setItem(localStorageKey, visitorId);
            }
          } catch (err) {
            console.debug("Session storage error", err);
          }
        });
      }
      return visitorId;
    };
    Builder2.prototype.trackImpression = function(contentId, variationId, properties, context) {
      if (isIframe || !isBrowser || Builder2.isPreviewing) {
        return;
      }
      this.track("impression", {
        contentId,
        variationId: variationId !== contentId ? variationId : void 0,
        metadata: properties
      }, context);
    };
    Builder2.prototype.trackConversion = function(amount, contentId, variationId, customProperties, context) {
      if (isIframe || !isBrowser || Builder2.isPreviewing) {
        return;
      }
      var meta = typeof contentId === "object" ? contentId : customProperties;
      var useContentId = typeof contentId === "string" ? contentId : void 0;
      this.track("conversion", { amount, variationId, meta, contentId: useContentId }, context);
    };
    Object.defineProperty(Builder2.prototype, "isDevelopmentEnv", {
      // TODO: set this for QA
      get: function() {
        return Builder2.isIframe || Builder2.isBrowser && (location.hostname === "localhost" || location.port !== "") || this.env !== "production";
      },
      enumerable: false,
      configurable: true
    });
    Builder2.prototype.trackInteraction = function(contentId, variationId, alreadyTrackedOne, event2, context) {
      if (alreadyTrackedOne === void 0) {
        alreadyTrackedOne = false;
      }
      if (isIframe || !isBrowser || Builder2.isPreviewing) {
        return;
      }
      var target = event2 && event2.target;
      var targetBuilderElement = target && this.findBuilderParent(target);
      function round(num) {
        return Math.round(num * 1e3) / 1e3;
      }
      var metadata = {};
      if (event2) {
        var clientX = event2.clientX, clientY = event2.clientY;
        if (target) {
          var targetRect = target.getBoundingClientRect();
          var xOffset = clientX - targetRect.left;
          var yOffset = clientY - targetRect.top;
          var xRatio = round(xOffset / targetRect.width);
          var yRatio = round(yOffset / targetRect.height);
          metadata.targetOffset = {
            x: xRatio,
            y: yRatio
          };
        }
        if (targetBuilderElement) {
          var targetRect = targetBuilderElement.getBoundingClientRect();
          var xOffset = clientX - targetRect.left;
          var yOffset = clientY - targetRect.top;
          var xRatio = round(xOffset / targetRect.width);
          var yRatio = round(yOffset / targetRect.height);
          metadata.builderTargetOffset = {
            x: xRatio,
            y: yRatio
          };
        }
      }
      var builderId = targetBuilderElement && (targetBuilderElement.getAttribute("builder-id") || targetBuilderElement.id);
      if (builderId && targetBuilderElement) {
        metadata.builderElementIndex = [].slice.call(document.getElementsByClassName(builderId)).indexOf(targetBuilderElement);
      }
      this.track("click", {
        contentId,
        metadata,
        variationId: variationId !== contentId ? variationId : void 0,
        unique: !alreadyTrackedOne,
        targetBuilderElement: builderId || void 0
      }, context);
    };
    Builder2.prototype.component = function(info) {
      if (info === void 0) {
        info = {};
      }
      return Builder2.component(info);
    };
    Object.defineProperty(Builder2.prototype, "apiKey", {
      get: function() {
        return this.apiKey$.value;
      },
      set: function(key) {
        this.apiKey$.next(key);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Builder2.prototype, "authToken", {
      get: function() {
        return this.authToken$.value;
      },
      set: function(token) {
        this.authToken$.next(token);
      },
      enumerable: false,
      configurable: true
    });
    Builder2.prototype.modifySearch = function(search) {
      return search.replace(/(^|&|\?)(builder_.*?)=/gi, function(_match, group1, group2) {
        return group1 + group2.replace(/_/g, ".") + "=";
      });
    };
    Builder2.prototype.setTestsFromUrl = function() {
      var search = this.getLocation().search;
      var params = QueryString.parseDeep(this.modifySearch(search || "").substr(1));
      var tests = params.builder && params.builder.tests;
      if (tests && typeof tests === "object") {
        for (var key in tests) {
          if (tests.hasOwnProperty(key)) {
            this.setTestCookie(key, tests[key]);
          }
        }
      }
    };
    Builder2.prototype.resetOverrides = function() {
      Builder2.overrideUserAttributes = {};
      this.cachebust = false;
      this.noCache = false;
      this.preview = false;
      this.editingModel = null;
      this.overrides = {};
      this.env = "production";
      this.userAgent = "";
      this.request = void 0;
      this.response = void 0;
    };
    Builder2.prototype.getOverridesFromQueryString = function() {
      var location2 = this.getLocation();
      var params = QueryString.parseDeep(this.modifySearch(location2.search || "").substr(1));
      var builder2 = params.builder;
      if (builder2) {
        var userAttributes = builder2.userAttributes, overrides = builder2.overrides, env = builder2.env, host = builder2.host, api2 = builder2.api, cachebust = builder2.cachebust, noCache = builder2.noCache, preview = builder2.preview, editing = builder2.editing, frameEditing = builder2.frameEditing, options = builder2.options, overrideParams = builder2.params;
        if (userAttributes) {
          this.setUserAttributes(userAttributes);
        }
        if (options) {
          this.queryOptions = __assign(__assign({}, options.locale && { locale: options.locale }), options.includeRefs && { includeRefs: options.includeRefs });
        }
        if (overrides) {
          this.overrides = overrides;
        }
        if (validEnvList.indexOf(env || api2) > -1) {
          this.env = env || api2;
        }
        if (Builder2.isEditing) {
          var editingModel = frameEditing || editing || preview;
          if (editingModel && editingModel !== "true") {
            this.editingModel = editingModel;
          }
        }
        if (cachebust) {
          this.cachebust = true;
        }
        if (noCache) {
          this.noCache = true;
        }
        if (preview) {
          this.preview = true;
        }
        if (params) {
          this.overrideParams = overrideParams;
        }
      }
    };
    Builder2.prototype.messageFrameLoaded = function() {
      var _a3;
      (_a3 = window.parent) === null || _a3 === void 0 ? void 0 : _a3.postMessage({
        type: "builder.loaded",
        data: {
          value: true
        }
      }, "*");
    };
    Builder2.prototype.bindMessageListeners = function() {
      var _this2 = this;
      if (isBrowser) {
        addEventListener("message", function(event2) {
          var _a3, _b2, _c2, _d, _e;
          var url = parse$1(event2.origin);
          var isRestricted = ["builder.register", "builder.registerComponent"].indexOf((_a3 = event2.data) === null || _a3 === void 0 ? void 0 : _a3.type) === -1;
          var isTrusted = url.hostname && Builder2.isTrustedHost(url.hostname);
          if (isRestricted && !isTrusted) {
            return;
          }
          var data2 = event2.data;
          if (data2) {
            switch (data2.type) {
              case "builder.ping": {
                (_b2 = window.parent) === null || _b2 === void 0 ? void 0 : _b2.postMessage({
                  type: "builder.pong",
                  data: {}
                }, "*");
                break;
              }
              case "builder.register": {
                if (event2.source === window) {
                  break;
                }
                var options = data2.data;
                if (!options) {
                  break;
                }
                var type = options.type, info = options.info;
                var typeList = Builder2.registry[type];
                if (!typeList) {
                  typeList = Builder2.registry[type] = [];
                }
                typeList.push(info);
                Builder2.registryChange.next(Builder2.registry);
                break;
              }
              case "builder.settingsChange": {
                if (event2.source === window) {
                  break;
                }
                var settings = data2.data;
                if (!settings) {
                  break;
                }
                Object.assign(Builder2.settings, settings);
                Builder2.settingsChange.next(Builder2.settings);
                break;
              }
              case "builder.registerEditor": {
                if (event2.source === window) {
                  break;
                }
                var info_1 = data2.data;
                if (!info_1) {
                  break;
                }
                var hasComponent_1 = !!info_1.component;
                Builder2.editors.every(function(thisInfo, index) {
                  if (info_1.name === thisInfo.name) {
                    if (thisInfo.component && !hasComponent_1) {
                      return false;
                    } else {
                      Builder2.editors[index] = thisInfo;
                    }
                    return false;
                  }
                  return true;
                });
                break;
              }
              case "builder.triggerAnimation": {
                Builder2.animator.triggerAnimation(data2.data);
                break;
              }
              case "builder.contentUpdate":
                var key = data2.data.key || data2.data.alias || data2.data.entry || data2.data.modelName;
                var contentData = data2.data.data;
                var observer = _this2.observersByKey[key];
                if (observer && !_this2.noEditorUpdates[key]) {
                  observer.next([contentData]);
                }
                break;
              case "builder.getComponents":
                (_c2 = window.parent) === null || _c2 === void 0 ? void 0 : _c2.postMessage({
                  type: "builder.components",
                  data: Builder2.components.map(function(item) {
                    return Builder2.prepareComponentSpecToSend(item);
                  })
                }, "*");
                break;
              case "builder.editingModel":
                _this2.editingModel = data2.data.model;
                break;
              case "builder.registerComponent":
                var componentData = data2.data;
                Builder2.addComponent(componentData);
                break;
              case "builder.blockContentLoading":
                if (typeof data2.data.model === "string") {
                  _this2.blockContentLoading = data2.data.model;
                }
                break;
              case "builder.editingMode":
                var editingMode = data2.data;
                if (editingMode) {
                  _this2.editingMode = true;
                  document.body.classList.add("builder-editing");
                } else {
                  _this2.editingMode = false;
                  document.body.classList.remove("builder-editing");
                }
                break;
              case "builder.editingPageMode":
                var editingPageMode = data2.data;
                Builder2.editingPage = editingPageMode;
                break;
              case "builder.overrideUserAttributes":
                var userAttributes = data2.data;
                assign(Builder2.overrideUserAttributes, userAttributes);
                _this2.flushGetContentQueue(true);
                break;
              case "builder.overrideTestGroup":
                var _f = data2.data, variationId = _f.variationId, contentId = _f.contentId;
                if (variationId && contentId) {
                  _this2.setTestCookie(contentId, variationId);
                  _this2.flushGetContentQueue(true);
                }
                break;
              case "builder.evaluate": {
                var text = data2.data.text;
                var args = data2.data.arguments || [];
                var id_1 = data2.data.id;
                var fn = new Function(text);
                var result = void 0;
                var error = null;
                try {
                  result = fn.apply(_this2, args);
                } catch (err) {
                  error = toError(err);
                }
                if (error) {
                  (_d = window.parent) === null || _d === void 0 ? void 0 : _d.postMessage({
                    type: "builder.evaluateError",
                    data: { id: id_1, error: error.message }
                  }, "*");
                } else {
                  if (result && typeof result.then === "function") {
                    result.then(function(finalResult) {
                      var _a4;
                      (_a4 = window.parent) === null || _a4 === void 0 ? void 0 : _a4.postMessage({
                        type: "builder.evaluateResult",
                        data: { id: id_1, result: finalResult }
                      }, "*");
                    }).catch(console.error);
                  } else {
                    (_e = window.parent) === null || _e === void 0 ? void 0 : _e.postMessage({
                      type: "builder.evaluateResult",
                      data: { result, id: id_1 }
                    }, "*");
                  }
                }
                break;
              }
            }
          }
        });
      }
    };
    Object.defineProperty(Builder2.prototype, "defaultCanTrack", {
      get: function() {
        return Boolean(Builder2.isBrowser && navigator.userAgent.trim() && !navigator.userAgent.match(/bot|crawler|spider|robot|crawling|prerender|google|baidu|bing|msn|duckduckbot|teoma|slurp|yandex|phantom|headless|selenium|puppeteer/i) && !this.browserTrackingDisabled);
      },
      enumerable: false,
      configurable: true
    });
    Builder2.prototype.init = function(apiKey, canTrack, req, res, authToken, apiVersion) {
      if (canTrack === void 0) {
        canTrack = this.defaultCanTrack;
      }
      if (req) {
        this.request = req;
      }
      if (res) {
        this.response = res;
      }
      this.canTrack = canTrack;
      this.apiKey = apiKey;
      if (authToken) {
        this.authToken = authToken;
      }
      if (apiVersion) {
        this.apiVersion = apiVersion;
      }
      return this;
    };
    Object.defineProperty(Builder2.prototype, "previewingModel", {
      get: function() {
        var search = this.getLocation().search;
        var params = QueryString.parse((search || "").substr(1));
        return params["builder.preview"];
      },
      enumerable: false,
      configurable: true
    });
    Builder2.prototype.getLocation = function() {
      var _a3;
      var parsedLocation = {};
      if (this.request) {
        parsedLocation = parse$1((_a3 = this.request.url) !== null && _a3 !== void 0 ? _a3 : "");
      } else if (typeof location === "object") {
        parsedLocation = parse$1(location.href);
      }
      if (parsedLocation.pathname === "") {
        parsedLocation.pathname = "/";
      }
      return parsedLocation;
    };
    Builder2.prototype.getUserAttributes = function(userAgent) {
      if (userAgent === void 0) {
        userAgent = this.userAgent || "";
      }
      var isMobile = {
        Android: function() {
          return userAgent.match(/Android/i);
        },
        BlackBerry: function() {
          return userAgent.match(/BlackBerry/i);
        },
        iOS: function() {
          return userAgent.match(/iPhone|iPod/i);
        },
        Opera: function() {
          return userAgent.match(/Opera Mini/i);
        },
        Windows: function() {
          return userAgent.match(/IEMobile/i) || userAgent.match(/WPDesktop/i);
        },
        any: function() {
          return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows();
        }
      };
      var isTablet = userAgent.match(/Tablet|iPad/i);
      var url = this.getLocation();
      return __assign({
        urlPath: url.pathname,
        host: url.host || url.hostname,
        // TODO: maybe an option to choose to target off of mobile/tablet/desktop or just mobile/desktop
        device: isTablet ? "tablet" : isMobile.any() ? "mobile" : "desktop"
      }, Builder2.overrideUserAttributes);
    };
    Builder2.prototype.setUserAttributes = function(options) {
      assign(Builder2.overrideUserAttributes, options);
      this.userAttributesChanged.next(options);
    };
    Builder2.prototype.setTrackingUserAttributes = function(attributes) {
      assign(this.trackingUserAttributes, attributes);
    };
    Builder2.prototype.get = function(modelName, options) {
      if (options === void 0) {
        options = {};
      }
      var instance = this;
      if (!Builder2.isBrowser) {
        instance = new Builder2(options.apiKey || this.apiKey, options.req, options.res, void 0, options.authToken || this.authToken, options.apiVersion || this.apiVersion);
        instance.setUserAttributes(this.getUserAttributes());
      } else {
        if (options.apiKey && !this.apiKey) {
          this.apiKey = options.apiKey;
        }
        if (options.authToken && !this.authToken) {
          this.authToken = options.authToken;
        }
        if (options.apiVersion && !this.apiVersion) {
          this.apiVersion = options.apiVersion;
        }
      }
      return instance.queueGetContent(modelName, options).map(
        /* map( */
        function(matches) {
          var match = matches && matches[0];
          if (Builder2.isStatic) {
            return match;
          }
          var matchData = match && match.data;
          if (!matchData) {
            return null;
          }
          if (typeof matchData.blocksString !== "undefined") {
            matchData.blocks = JSON.parse(matchData.blocksString);
            delete matchData.blocksString;
          }
          return {
            // TODO: add ab test info here and other high level stuff
            data: matchData,
            id: match.id,
            variationId: match.testVariationId || match.variationId || null,
            testVariationId: match.testVariationId || match.variationId || null,
            testVariationName: match.testVariationName || null,
            lastUpdated: match.lastUpdated || null
          };
        }
      );
    };
    Builder2.prototype.queueGetContent = function(modelName, options) {
      var _this2 = this;
      if (options === void 0) {
        options = {};
      }
      var key = options.key || options.alias || // TODO: SDKs only pass entry key when given to them, and never when editing...
      // options.entry ||
      // TODO: this is ugly - instead of multiple of same model with different options are sent
      // say requires key/alias. Or if not perhaps make a reliable hash of the options and use that.
      // TODO: store last user state on last request and if user attributes different now
      // give a warning that need to use keys to request new contente
      // (options &&
      //   Object.keys(options).filter(key => key !== 'model').length &&
      //   JSON.stringify({ model: modelName, ...options, initialContent: undefined })) ||
      modelName;
      var isEditingThisModel = this.editingModel === modelName;
      var currentObservable = this.observersByKey[key];
      if (this.apiKey === "DEMO" && !this.overrides[key] && !options.initialContent) {
        options.initialContent = [];
      }
      var initialContent = options.initialContent;
      if (currentObservable && (!currentObservable.value || options.cache)) {
        if (currentObservable.value) {
          nextTick(function() {
            currentObservable.next(currentObservable.value);
          });
        }
        return currentObservable;
      }
      if (isEditingThisModel) {
        if (Builder2.isBrowser) {
          parent.postMessage({ type: "builder.updateContent", data: { options } }, "*");
        }
      }
      if (!initialContent) {
        if (!this.getContentQueue) {
          this.getContentQueue = [];
        }
        this.getContentQueue.push(__assign(__assign({}, options), { model: modelName, key }));
        if (this.getContentQueue && this.getContentQueue.length >= this.contentPerRequest) {
          var queue_1 = this.getContentQueue.slice();
          this.getContentQueue = [];
          nextTick(function() {
            _this2.flushGetContentQueue(false, queue_1);
          });
        } else {
          nextTick(function() {
            _this2.flushGetContentQueue();
          });
        }
      }
      var observable = new BehaviorSubject(null);
      this.observersByKey[key] = observable;
      if (options.noEditorUpdates) {
        this.noEditorUpdates[key] = true;
      }
      if (initialContent) {
        nextTick(function() {
          observable.next(initialContent);
        });
      }
      return observable;
    };
    Builder2.prototype.requestUrl = function(url, options) {
      return getFetch()(url, options).then(function(res) {
        return res.json();
      });
    };
    Object.defineProperty(Builder2.prototype, "host", {
      get: function() {
        switch (this.env) {
          case "qa":
            return "https://qa.builder.io";
          case "test":
            return "https://builder-io-test.web.app";
          case "fast":
            return "https://fast.builder.io";
          case "cloud":
            return "https://cloud.builder.io";
          case "cdn2":
            return "https://cdn2.builder.io";
          case "cdn-qa":
            return "https://cdn-qa.builder.io";
          case "development":
          case "dev":
            return "http://localhost:5000";
          case "cdn-prod":
            return "https://cdn.builder.io";
          default:
            return Builder2.overrideHost || "https://cdn.builder.io";
        }
      },
      enumerable: false,
      configurable: true
    });
    Builder2.prototype.flushGetContentQueue = function(usePastQueue, useQueue) {
      var _this2 = this;
      if (usePastQueue === void 0) {
        usePastQueue = false;
      }
      if (!this.apiKey) {
        throw new Error("Fetching content failed, expected apiKey to be defined instead got: ".concat(this.apiKey));
      }
      if (this.apiVersion) {
        if (!["v1", "v3"].includes(this.apiVersion)) {
          throw new Error("Invalid apiVersion: expected 'v1' or 'v3', received '".concat(this.apiVersion, "'"));
        }
      } else {
        this.apiVersion = DEFAULT_API_VERSION;
      }
      if (!usePastQueue && !this.getContentQueue) {
        return;
      }
      var queue = useQueue || (usePastQueue ? this.priorContentQueue : this.getContentQueue) || [];
      this.getOverridesFromQueryString();
      var queryParams = __assign(__assign({
        // TODO: way to force a request to be in a separate queue. or just lower queue limit to be 1 by default
        omit: queue[0].omit || "meta.componentsUsed",
        apiKey: this.apiKey
      }, queue[0].options), this.queryOptions);
      if (queue[0].fields) {
        queryParams.fields = queue[0].fields;
      }
      if (queue[0].format) {
        queryParams.format = queue[0].format;
      }
      var pageQueryParams = typeof location !== "undefined" ? QueryString.parseDeep(location.search.substr(1)) : {};
      var userAttributes = (
        // FIXME: HACK: only checks first in queue for user attributes overrides, should check all
        // TODO: merge user attributes provided here with defaults and current user attiributes (?)
        queue && queue[0].userAttributes ? queue[0].userAttributes : this.targetContent ? this.getUserAttributes() : {
          urlPath: this.getLocation().pathname
        }
      );
      var fullUrlQueueItem = queue.find(function(item) {
        return !!item.includeUrl;
      });
      if (fullUrlQueueItem) {
        var location_1 = this.getLocation();
        if (location_1.origin) {
          queryParams.url = "".concat(location_1.origin).concat(location_1.pathname).concat(location_1.search);
        }
      }
      var urlQueueItem = useQueue === null || useQueue === void 0 ? void 0 : useQueue.find(function(item) {
        return item.url;
      });
      if (urlQueueItem === null || urlQueueItem === void 0 ? void 0 : urlQueueItem.url) {
        userAttributes.urlPath = urlQueueItem.url.split("?")[0];
      }
      queryParams.userAttributes = userAttributes;
      if (!usePastQueue && !useQueue) {
        this.priorContentQueue = queue;
        this.getContentQueue = null;
      }
      var cachebust = this.cachebust || isIframe || pageQueryParams.cachebust || pageQueryParams["builder.cachebust"];
      if (cachebust || this.env !== "production") {
        queryParams.cachebust = true;
      }
      if (Builder2.isEditing) {
        queryParams.isEditing = true;
      }
      if (this.noCache || this.env !== "production") {
        queryParams.noCache = true;
      }
      if (size(this.overrides)) {
        for (var key in this.overrides) {
          if (this.overrides.hasOwnProperty(key)) {
            queryParams["overrides.".concat(key)] = this.overrides[key];
          }
        }
      }
      if (!Builder2.isReact) {
        queryParams.prerender = true;
      }
      for (var _i2 = 0, queue_2 = queue; _i2 < queue_2.length; _i2++) {
        var options = queue_2[_i2];
        if (options.format) {
          queryParams.format = options.format;
        }
        if (options.static) {
          queryParams.static = options.static;
        }
        if (options.cachebust) {
          queryParams.cachebust = options.cachebust;
        }
        if (isPositiveNumber(options.cacheSeconds)) {
          queryParams.cacheSeconds = options.cacheSeconds;
        }
        if (isPositiveNumber(options.staleCacheSeconds)) {
          queryParams.staleCacheSeconds = options.staleCacheSeconds;
        }
        var properties = [
          "prerender",
          "extractCss",
          "limit",
          "offset",
          "query",
          "preview",
          "model",
          "entry",
          "rev",
          "static"
        ];
        for (var _a3 = 0, properties_1 = properties; _a3 < properties_1.length; _a3++) {
          var key = properties_1[_a3];
          var value = options[key];
          if (value !== void 0) {
            queryParams.options = queryParams.options || {};
            queryParams.options[options.key] = queryParams.options[options.key] || {};
            queryParams.options[options.key][key] = JSON.stringify(value);
          }
        }
      }
      if (this.preview) {
        queryParams.preview = "true";
      }
      var hasParams = Object.keys(queryParams).length > 0;
      var host = this.host;
      var keyNames = queue.map(function(item) {
        return encodeURIComponent(item.key);
      }).join(",");
      if (this.overrideParams) {
        var params = omit(QueryString.parse(this.overrideParams), "apiKey");
        assign(queryParams, params);
      }
      var queryStr = QueryString.stringifyDeep(queryParams);
      var format = queryParams.format;
      var requestOptions = { headers: {} };
      if (this.authToken) {
        requestOptions.headers = __assign(__assign({}, requestOptions.headers), { Authorization: "Bearer ".concat(this.authToken) });
      }
      var fn = format === "solid" || format === "react" ? "codegen" : "query";
      var apiVersionBasedOnFn = fn === "query" ? this.apiVersion : "v1";
      var url = "".concat(host, "/api/").concat(apiVersionBasedOnFn, "/").concat(fn, "/").concat(this.apiKey, "/").concat(keyNames) + (queryParams && hasParams ? "?".concat(queryStr) : "");
      var promise = getFetch()(url, requestOptions).then(function(res) {
        return res.json();
      }).then(function(result) {
        for (var _i3 = 0, queue_3 = queue; _i3 < queue_3.length; _i3++) {
          var options2 = queue_3[_i3];
          var keyName = options2.key;
          if (options2.model === _this2.blockContentLoading && !options2.noEditorUpdates) {
            continue;
          }
          var isEditingThisModel = _this2.editingModel === options2.model;
          if (isEditingThisModel && Builder2.isEditing) {
            parent.postMessage({ type: "builder.updateContent", data: { options: options2 } }, "*");
          }
          var observer = _this2.observersByKey[keyName];
          if (!observer) {
            return;
          }
          var data2 = result[keyName];
          var sorted = data2;
          if (data2) {
            var testModifiedResults = Builder2.isServer ? sorted : _this2.processResultsForTests(sorted);
            observer.next(testModifiedResults);
          } else {
            var search = _this2.getLocation().search;
            if ((search || "").includes("builder.preview=" + options2.model)) {
              var previewData = {
                id: "preview",
                name: "Preview",
                data: {}
              };
              observer.next([previewData]);
            }
            observer.next([]);
          }
        }
      }, function(err) {
        for (var _i3 = 0, queue_4 = queue; _i3 < queue_4.length; _i3++) {
          var options2 = queue_4[_i3];
          var observer = _this2.observersByKey[options2.key];
          if (!observer) {
            return;
          }
          observer.error(err);
        }
      });
      return promise;
    };
    Builder2.prototype.processResultsForTests = function(results) {
      var _this2 = this;
      var _a3;
      var mappedResults = results.map(function(item) {
        if (!item.variations) {
          return item;
        }
        var cookieValue = _this2.getTestCookie(item.id);
        var cookieVariation = cookieValue === item.id ? item : item.variations[cookieValue];
        if (cookieVariation) {
          return __assign(__assign({}, item), { data: cookieVariation.data, variationId: cookieValue, testVariationId: cookieValue, testVariationName: cookieVariation.name });
        }
        if (_this2.canTrack && item.variations && size(item.variations)) {
          var n = 0;
          var random = Math.random();
          for (var id in item.variations) {
            var variation = item.variations[id];
            var testRatio = variation.testRatio;
            n += testRatio;
            if (random < n) {
              _this2.setTestCookie(item.id, variation.id);
              var variationName = variation.name || (variation.id === item.id ? "Default variation" : "");
              return __assign(__assign({}, item), { data: variation.data, variationId: variation.id, testVariationId: variation.id, variationName, testVariationName: variationName });
            }
          }
          _this2.setTestCookie(item.id, item.id);
        }
        return __assign(__assign(__assign({}, item), { variationId: item.id }), item.variations && size(item.variations) && {
          testVariationId: item.id,
          testVariationName: "Default variation"
        });
      });
      if (isIframe) {
        (_a3 = window.parent) === null || _a3 === void 0 ? void 0 : _a3.postMessage({ type: "builder.contentResults", data: { results: mappedResults } }, "*");
      }
      return mappedResults;
    };
    Builder2.prototype.getTestCookie = function(contentId) {
      return this.getCookie("".concat(this.testCookiePrefix, ".").concat(contentId));
    };
    Builder2.prototype.setTestCookie = function(contentId, variationId) {
      if (!this.canTrack) {
        this.cookieQueue.push([contentId, variationId]);
        return;
      }
      var future = /* @__PURE__ */ new Date();
      future.setDate(future.getDate() + 30);
      return this.setCookie("".concat(this.testCookiePrefix, ".").concat(contentId), variationId, future);
    };
    Builder2.prototype.getCookie = function(name$$1) {
      if (this.cookies) {
        return this.cookies.get(name$$1);
      }
      return Builder2.isBrowser && getCookie(name$$1);
    };
    Builder2.prototype.setCookie = function(name$$1, value, expires) {
      if (this.cookies && !(Builder2.isServer && Builder2.isStatic)) {
        return this.cookies.set(name$$1, value, {
          expires,
          secure: this.getLocation().protocol === "https:"
        });
      }
      return Builder2.isBrowser && setCookie(name$$1, value, expires);
    };
    Builder2.prototype.getContent = function(modelName, options) {
      if (options === void 0) {
        options = {};
      }
      if (!this.apiKey) {
        throw new Error("Fetching content from model ".concat(modelName, " failed, expected apiKey to be defined instead got: ").concat(this.apiKey));
      }
      return this.queueGetContent(modelName, options);
    };
    Builder2.prototype.getAll = function(modelName, options) {
      if (options === void 0) {
        options = {};
      }
      var instance = this;
      if (!Builder2.isBrowser) {
        instance = new Builder2(options.apiKey || this.apiKey, options.req, options.res, false, null, options.apiVersion || this.apiVersion);
        instance.setUserAttributes(this.getUserAttributes());
      } else {
        if (options.apiKey && !this.apiKey) {
          this.apiKey = options.apiKey;
        }
        if (options.apiVersion && !this.apiVersion) {
          this.apiVersion = options.apiVersion;
        }
      }
      return instance.getContent(modelName, __assign(__assign({ limit: 30 }, options), { key: options.key || // Make the key include all options, so we don't reuse cache for the same content fetched
      // with different options
      Builder2.isBrowser ? "".concat(modelName, ":").concat((0, import_hash_sum.default)(omit(options, "initialContent", "req", "res"))) : void 0 })).promise();
    };
    Builder2.VERSION = version;
    Builder2.components = [];
    Builder2.isStatic = true;
    Builder2.animator = new Animator();
    Builder2.nextTick = nextTick;
    Builder2.throttle = throttle;
    Builder2.editors = [];
    Builder2.trustedHosts = [
      "*.beta.builder.io",
      "beta.builder.io",
      "builder.io",
      "localhost",
      "qa.builder.io"
    ];
    Builder2.plugins = [];
    Builder2.actions = [];
    Builder2.registry = {};
    Builder2.registryChange = new BehaviorSubject({});
    Builder2._editingPage = false;
    Builder2.isIframe = isIframe;
    Builder2.isBrowser = isBrowser;
    Builder2.isReactNative = isReactNative;
    Builder2.isServer = !isBrowser && !isReactNative;
    Builder2.previewingModel = Builder2.isBrowser && getQueryParam(location.href, "builder.preview");
    Builder2.settings = {};
    Builder2.settingsChange = new BehaviorSubject({});
    Builder2.isEditing = Boolean(isIframe && (document.referrer && document.referrer.match(/builder\.io|localhost:1234/) || location.search.indexOf("builder.frameEditing=") !== -1));
    Builder2.isPreviewing = Boolean(isBrowser && (location.search.indexOf("builder.preview=") !== -1 || location.search.indexOf("builder.frameEditing=") !== -1));
    Builder2.isReact = false;
    Builder2.overrideUserAttributes = {};
    return Builder2;
  }()
);
var builder = new Builder(null, void 0, void 0, true);
Builder.singletonInstance = builder;

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}

// node_modules/@emotion/core/dist/core.browser.esm.js
var import_react2 = __toESM(require_react());

// node_modules/@emotion/sheet/dist/sheet.browser.esm.js
function sheetForTag(tag) {
  if (tag.sheet) {
    return tag.sheet;
  }
  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      return document.styleSheets[i];
    }
  }
}
function createStyleElement(options) {
  var tag = document.createElement("style");
  tag.setAttribute("data-emotion", options.key);
  if (options.nonce !== void 0) {
    tag.setAttribute("nonce", options.nonce);
  }
  tag.appendChild(document.createTextNode(""));
  return tag;
}
var StyleSheet = function() {
  function StyleSheet2(options) {
    this.isSpeedy = options.speedy === void 0 ? false : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce;
    this.key = options.key;
    this.container = options.container;
    this.before = null;
  }
  var _proto = StyleSheet2.prototype;
  _proto.insert = function insert(rule) {
    if (this.ctr % (this.isSpeedy ? 65e3 : 1) === 0) {
      var _tag = createStyleElement(this);
      var before;
      if (this.tags.length === 0) {
        before = this.before;
      } else {
        before = this.tags[this.tags.length - 1].nextSibling;
      }
      this.container.insertBefore(_tag, before);
      this.tags.push(_tag);
    }
    var tag = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);
      try {
        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64;
        sheet.insertRule(
          rule,
          // we need to insert @import rules before anything else
          // otherwise there will be an error
          // technically this means that the @import rules will
          // _usually_(not always since there could be multiple style tags)
          // be the first ones in prod and generally later in dev
          // this shouldn't really matter in the real world though
          // @import is generally only used for font faces from google fonts and etc.
          // so while this could be technically correct then it would be slower and larger
          // for a tiny bit of correctness that won't matter in the real world
          isImportRule ? 0 : sheet.cssRules.length
        );
      } catch (e) {
        if (true) {
          console.warn('There was a problem inserting the following rule: "' + rule + '"', e);
        }
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }
    this.ctr++;
  };
  _proto.flush = function flush() {
    this.tags.forEach(function(tag) {
      return tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;
  };
  return StyleSheet2;
}();

// node_modules/@emotion/stylis/dist/stylis.browser.esm.js
function stylis_min(W) {
  function M(d, c, e, h, a) {
    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B2 = e.length, J = B2 - 1, y, f = "", p = "", F2 = "", G2 = "", C; l < B2; ) {
      g = e.charCodeAt(l);
      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B2++, J++);
      if (0 === b + n + v + m) {
        if (l === J && (0 < r && (f = f.replace(N, "")), 0 < f.trim().length)) {
          switch (g) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              f += e.charAt(l);
          }
          g = 59;
        }
        switch (g) {
          case 123:
            f = f.trim();
            q = f.charCodeAt(0);
            k = 1;
            for (t = ++l; l < B2; ) {
              switch (g = e.charCodeAt(l)) {
                case 123:
                  k++;
                  break;
                case 125:
                  k--;
                  break;
                case 47:
                  switch (g = e.charCodeAt(l + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u = l + 1; u < J; ++u) {
                          switch (e.charCodeAt(u)) {
                            case 47:
                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                l = u + 1;
                                break a;
                              }
                              break;
                            case 10:
                              if (47 === g) {
                                l = u + 1;
                                break a;
                              }
                          }
                        }
                        l = u;
                      }
                  }
                  break;
                case 91:
                  g++;
                case 40:
                  g++;
                case 34:
                case 39:
                  for (; l++ < J && e.charCodeAt(l) !== g; ) {
                  }
              }
              if (0 === k) break;
              l++;
            }
            k = e.substring(t, l);
            0 === q && (q = (f = f.replace(ca, "").trim()).charCodeAt(0));
            switch (q) {
              case 64:
                0 < r && (f = f.replace(N, ""));
                g = f.charCodeAt(1);
                switch (g) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r = c;
                    break;
                  default:
                    r = O;
                }
                k = M(c, r, k, g, a + 1);
                t = k.length;
                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(""), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ""));
                if (0 < t) switch (g) {
                  case 115:
                    f = f.replace(da, ea);
                  case 100:
                  case 109:
                  case 45:
                    k = f + "{" + k + "}";
                    break;
                  case 107:
                    f = f.replace(fa, "$1 $2");
                    k = f + "{" + k + "}";
                    k = 1 === w || 2 === w && L("@" + k, 3) ? "@-webkit-" + k + "@" + k : "@" + k;
                    break;
                  default:
                    k = f + k, 112 === h && (k = (p += k, ""));
                }
                else k = "";
                break;
              default:
                k = M(c, X(c, f, I), k, h, a + 1);
            }
            F2 += k;
            k = I = r = u = q = 0;
            f = "";
            g = e.charCodeAt(++l);
            break;
          case 125:
          case 59:
            f = (0 < r ? f.replace(N, "") : f).trim();
            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(" ", ":")).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = "\0\0"), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {
              case 0:
                break;
              case 64:
                if (105 === g || 99 === g) {
                  G2 += f + e.charAt(l);
                  break;
                }
              default:
                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
            }
            I = r = u = q = 0;
            f = "";
            g = e.charCodeAt(++l);
        }
      }
      switch (g) {
        case 13:
        case 10:
          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += "\0");
          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);
          z = 1;
          D++;
          break;
        case 59:
        case 125:
          if (0 === b + n + v + m) {
            z++;
            break;
          }
        default:
          z++;
          y = e.charAt(l);
          switch (g) {
            case 9:
            case 32:
              if (0 === n + m + b) switch (x) {
                case 44:
                case 58:
                case 9:
                case 32:
                  y = "";
                  break;
                default:
                  32 !== g && (y = " ");
              }
              break;
            case 0:
              y = "\\0";
              break;
            case 12:
              y = "\\f";
              break;
            case 11:
              y = "\\v";
              break;
            case 38:
              0 === n + b + m && (r = I = 1, y = "\f" + y);
              break;
            case 108:
              if (0 === n + b + m + E && 0 < u) switch (l - u) {
                case 2:
                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);
                case 8:
                  111 === K && (E = K);
              }
              break;
            case 58:
              0 === n + b + m && (u = l);
              break;
            case 44:
              0 === b + v + n + m && (r = 1, y += "\r");
              break;
            case 34:
            case 39:
              0 === b && (n = n === g ? 0 : 0 === n ? g : n);
              break;
            case 91:
              0 === n + b + v && m++;
              break;
            case 93:
              0 === n + b + v && m--;
              break;
            case 41:
              0 === n + b + m && v--;
              break;
            case 40:
              if (0 === n + b + m) {
                if (0 === q) switch (2 * x + 3 * K) {
                  case 533:
                    break;
                  default:
                    q = 1;
                }
                v++;
              }
              break;
            case 64:
              0 === b + v + n + m + u + k && (k = 1);
              break;
            case 42:
            case 47:
              if (!(0 < n + m + v)) switch (b) {
                case 0:
                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                    case 235:
                      b = 47;
                      break;
                    case 220:
                      t = l, b = 42;
                  }
                  break;
                case 42:
                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = "", b = 0);
              }
          }
          0 === b && (f += y);
      }
      K = x;
      x = g;
      l++;
    }
    t = p.length;
    if (0 < t) {
      r = c;
      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G2 + p + F2;
      p = r.join(",") + "{" + p + "}";
      if (0 !== w * E) {
        2 !== w || L(p, 2) || (E = 0);
        switch (E) {
          case 111:
            p = p.replace(ha, ":-moz-$1") + p;
            break;
          case 112:
            p = p.replace(Q, "::-webkit-input-$1") + p.replace(Q, "::-moz-$1") + p.replace(Q, ":-ms-input-$1") + p;
        }
        E = 0;
      }
    }
    return G2 + p + F2;
  }
  function X(d, c, e) {
    var h = c.trim().split(ia);
    c = h;
    var a = h.length, m = d.length;
    switch (m) {
      case 0:
      case 1:
        var b = 0;
        for (d = 0 === m ? "" : d[0] + " "; b < a; ++b) {
          c[b] = Z(d, c[b], e).trim();
        }
        break;
      default:
        var v = b = 0;
        for (c = []; b < a; ++b) {
          for (var n = 0; n < m; ++n) {
            c[v++] = Z(d[n] + " ", h[b], e).trim();
          }
        }
    }
    return c;
  }
  function Z(d, c, e) {
    var h = c.charCodeAt(0);
    33 > h && (h = (c = c.trim()).charCodeAt(0));
    switch (h) {
      case 38:
        return c.replace(F, "$1" + d.trim());
      case 58:
        return d.trim() + c.replace(F, "$1" + d.trim());
      default:
        if (0 < 1 * e && 0 < c.indexOf("\f")) return c.replace(F, (58 === d.charCodeAt(0) ? "" : "$1") + d.trim());
    }
    return d + c;
  }
  function P(d, c, e, h) {
    var a = d + ";", m = 2 * c + 3 * e + 4 * h;
    if (944 === m) {
      d = a.indexOf(":", 9) + 1;
      var b = a.substring(d, a.length - 1).trim();
      b = a.substring(0, d).trim() + b + ";";
      return 1 === w || 2 === w && L(b, 1) ? "-webkit-" + b + b : b;
    }
    if (0 === w || 2 === w && !L(a, 1)) return a;
    switch (m) {
      case 1015:
        return 97 === a.charCodeAt(10) ? "-webkit-" + a + a : a;
      case 951:
        return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;
      case 963:
        return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;
      case 1009:
        if (100 !== a.charCodeAt(4)) break;
      case 969:
      case 942:
        return "-webkit-" + a + a;
      case 978:
        return "-webkit-" + a + "-moz-" + a + a;
      case 1019:
      case 983:
        return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;
      case 883:
        if (45 === a.charCodeAt(8)) return "-webkit-" + a + a;
        if (0 < a.indexOf("image-set(", 11)) return a.replace(ja, "$1-webkit-$2") + a;
        break;
      case 932:
        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {
          case 103:
            return "-webkit-box-" + a.replace("-grow", "") + "-webkit-" + a + "-ms-" + a.replace("grow", "positive") + a;
          case 115:
            return "-webkit-" + a + "-ms-" + a.replace("shrink", "negative") + a;
          case 98:
            return "-webkit-" + a + "-ms-" + a.replace("basis", "preferred-size") + a;
        }
        return "-webkit-" + a + "-ms-" + a + a;
      case 964:
        return "-webkit-" + a + "-ms-flex-" + a + a;
      case 1023:
        if (99 !== a.charCodeAt(8)) break;
        b = a.substring(a.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
        return "-webkit-box-pack" + b + "-webkit-" + a + "-ms-flex-pack" + b + a;
      case 1005:
        return ka.test(a) ? a.replace(aa, ":-webkit-") + a.replace(aa, ":-moz-") + a : a;
      case 1e3:
        b = a.substring(13).trim();
        c = b.indexOf("-") + 1;
        switch (b.charCodeAt(0) + b.charCodeAt(c)) {
          case 226:
            b = a.replace(G, "tb");
            break;
          case 232:
            b = a.replace(G, "tb-rl");
            break;
          case 220:
            b = a.replace(G, "lr");
            break;
          default:
            return a;
        }
        return "-webkit-" + a + "-ms-" + b + a;
      case 1017:
        if (-1 === a.indexOf("sticky", 9)) break;
      case 975:
        c = (a = d).length - 10;
        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(":", 7) + 1).trim();
        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b.charCodeAt(8)) break;
          case 115:
            a = a.replace(b, "-webkit-" + b) + ";" + a;
            break;
          case 207:
          case 102:
            a = a.replace(b, "-webkit-" + (102 < m ? "inline-" : "") + "box") + ";" + a.replace(b, "-webkit-" + b) + ";" + a.replace(b, "-ms-" + b + "box") + ";" + a;
        }
        return a + ";";
      case 938:
        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {
          case 105:
            return b = a.replace("-items", ""), "-webkit-" + a + "-webkit-box-" + b + "-ms-flex-" + b + a;
          case 115:
            return "-webkit-" + a + "-ms-flex-item-" + a.replace(ba, "") + a;
          default:
            return "-webkit-" + a + "-ms-flex-line-pack" + a.replace("align-content", "").replace(ba, "") + a;
        }
        break;
      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;
      case 931:
      case 953:
        if (true === la.test(d)) return 115 === (b = d.substring(d.indexOf(":") + 1)).charCodeAt(0) ? P(d.replace("stretch", "fill-available"), c, e, h).replace(":fill-available", ":stretch") : a.replace(b, "-webkit-" + b) + a.replace(b, "-moz-" + b.replace("fill-", "")) + a;
        break;
      case 962:
        if (a = "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf("transform", 10)) return a.substring(0, a.indexOf(";", 27) + 1).replace(ma, "$1-webkit-$2") + a;
    }
    return a;
  }
  function L(d, c) {
    var e = d.indexOf(1 === c ? ":" : "{"), h = d.substring(0, 3 !== c ? e : 10);
    e = d.substring(e + 1, d.length - 1);
    return R(2 !== c ? h : h.replace(na, "$1"), e, c);
  }
  function ea(d, c) {
    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
    return e !== c + ";" ? e.replace(oa, " or ($1)").substring(4) : "(" + c + ")";
  }
  function H(d, c, e, h, a, m, b, v, n, q) {
    for (var g = 0, x = c, w2; g < A; ++g) {
      switch (w2 = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {
        case void 0:
        case false:
        case true:
        case null:
          break;
        default:
          x = w2;
      }
    }
    if (x !== c) return x;
  }
  function T(d) {
    switch (d) {
      case void 0:
      case null:
        A = S.length = 0;
        break;
      default:
        if ("function" === typeof d) S[A++] = d;
        else if ("object" === typeof d) for (var c = 0, e = d.length; c < e; ++c) {
          T(d[c]);
        }
        else Y = !!d | 0;
    }
    return T;
  }
  function U(d) {
    d = d.prefix;
    void 0 !== d && (R = null, d ? "function" !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);
    return U;
  }
  function B(d, c) {
    var e = d;
    33 > e.charCodeAt(0) && (e = e.trim());
    V = e;
    e = [V];
    if (0 < A) {
      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
      void 0 !== h && "string" === typeof h && (c = h);
    }
    var a = M(O, e, c, 0, 0);
    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));
    V = "";
    E = 0;
    z = D = 1;
    return a;
  }
  var ca = /^\0+/g, N = /[\0\r\f]/g, aa = /: */g, ka = /zoo|gra/, ma = /([,: ])(transform)/g, ia = /,\r+?/g, F = /([\t\r\n ])*\f?&/g, fa = /@(k\w+)\s*(\S*)\s*/, Q = /::(place)/g, ha = /:(read-only)/g, G = /[svh]\w+-[tblr]{2}/, da = /\(\s*(.*)\s*\)/g, oa = /([\s\S]*?);/g, ba = /-self|flex-/g, na = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la = /stretch|:\s*\w+\-(?:conte|avail)/, ja = /([^-])(image-set\()/, z = 1, D = 1, E = 0, w = 1, O = [], S = [], A = 0, R = null, Y = 0, V = "";
  B.use = T;
  B.set = U;
  void 0 !== W && U(W);
  return B;
}
var stylis_browser_esm_default = stylis_min;

// node_modules/@emotion/cache/dist/cache.browser.esm.js
var delimiter = "/*|*/";
var needle = delimiter + "}";
function toSheet(block) {
  if (block) {
    Sheet.current.insert(block + "}");
  }
}
var Sheet = {
  current: null
};
var ruleSheet = function ruleSheet2(context, content, selectors, parents, line, column, length, ns, depth, at) {
  switch (context) {
    case 1: {
      switch (content.charCodeAt(0)) {
        case 64: {
          Sheet.current.insert(content + ";");
          return "";
        }
        case 108: {
          if (content.charCodeAt(2) === 98) {
            return "";
          }
        }
      }
      break;
    }
    case 2: {
      if (ns === 0) return content + delimiter;
      break;
    }
    case 3: {
      switch (ns) {
        case 102:
        case 112: {
          Sheet.current.insert(selectors[0] + content);
          return "";
        }
        default: {
          return content + (at === 0 ? delimiter : "");
        }
      }
    }
    case -2: {
      content.split(needle).forEach(toSheet);
    }
  }
};
var createCache = function createCache2(options) {
  if (options === void 0) options = {};
  var key = options.key || "css";
  var stylisOptions;
  if (options.prefix !== void 0) {
    stylisOptions = {
      prefix: options.prefix
    };
  }
  var stylis = new stylis_browser_esm_default(stylisOptions);
  if (true) {
    if (/[^a-z-]/.test(key)) {
      throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + key + '" was passed');
    }
  }
  var inserted = {};
  var container;
  {
    container = options.container || document.head;
    var nodes = document.querySelectorAll("style[data-emotion-" + key + "]");
    Array.prototype.forEach.call(nodes, function(node) {
      var attrib = node.getAttribute("data-emotion-" + key);
      attrib.split(" ").forEach(function(id) {
        inserted[id] = true;
      });
      if (node.parentNode !== container) {
        container.appendChild(node);
      }
    });
  }
  var _insert;
  {
    stylis.use(options.stylisPlugins)(ruleSheet);
    _insert = function insert(selector, serialized, sheet, shouldCache) {
      var name = serialized.name;
      Sheet.current = sheet;
      if (serialized.map !== void 0) {
        var map = serialized.map;
        Sheet.current = {
          insert: function insert2(rule) {
            sheet.insert(rule + map);
          }
        };
      }
      stylis(selector, serialized.styles);
      if (shouldCache) {
        cache.inserted[name] = true;
      }
    };
  }
  if (true) {
    var commentStart = /\/\*/g;
    var commentEnd = /\*\//g;
    stylis.use(function(context, content) {
      switch (context) {
        case -1: {
          while (commentStart.test(content)) {
            commentEnd.lastIndex = commentStart.lastIndex;
            if (commentEnd.test(content)) {
              commentStart.lastIndex = commentEnd.lastIndex;
              continue;
            }
            throw new Error('Your styles have an unterminated comment ("/*" without corresponding "*/").');
          }
          commentStart.lastIndex = 0;
          break;
        }
      }
    });
    stylis.use(function(context, content, selectors) {
      switch (context) {
        case -1: {
          var flag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason";
          var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);
          if (unsafePseudoClasses && cache.compat !== true) {
            unsafePseudoClasses.forEach(function(unsafePseudoClass) {
              var ignoreRegExp = new RegExp(unsafePseudoClass + ".*\\/\\* " + flag + " \\*\\/");
              var ignore = ignoreRegExp.test(content);
              if (unsafePseudoClass && !ignore) {
                console.error('The pseudo class "' + unsafePseudoClass + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + unsafePseudoClass.split("-child")[0] + '-of-type".');
              }
            });
          }
          break;
        }
      }
    });
  }
  var cache = {
    key,
    sheet: new StyleSheet({
      key,
      container,
      nonce: options.nonce,
      speedy: options.speedy
    }),
    nonce: options.nonce,
    inserted,
    registered: {},
    insert: _insert
  };
  return cache;
};
var cache_browser_esm_default = createCache;

// node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js
var import_react = __toESM(require_react());

// node_modules/@emotion/utils/dist/utils.browser.esm.js
var isBrowser2 = true;
function getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = "";
  classNames.split(" ").forEach(function(className) {
    if (registered[className] !== void 0) {
      registeredStyles.push(registered[className]);
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var insertStyles = function insertStyles2(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;
  if (
    // we only need to add the styles to the registered cache if the
    // class name could be used further down
    // the tree but if it's a string tag, we know it won't
    // so we don't have to add it to registered cache.
    // this improves memory usage since we can avoid storing the whole style string
    (isStringTag === false || // we need to always store it if we're in compat mode and
    // in node since emotion-server relies on whether a style is in
    // the registered cache to know whether a style is global or not
    // also, note that this check will be dead code eliminated in the browser
    isBrowser2 === false && cache.compat !== void 0) && cache.registered[className] === void 0
  ) {
    cache.registered[className] = serialized.styles;
  }
  if (cache.inserted[serialized.name] === void 0) {
    var current = serialized;
    do {
      var maybeStyles = cache.insert("." + className, current, cache.sheet, true);
      current = current.next;
    } while (current !== void 0);
  }
};

// node_modules/@emotion/hash/dist/hash.browser.esm.js
function murmur2(str) {
  var h = 0;
  var k, i = 0, len = str.length;
  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 255 | (str.charCodeAt(++i) & 255) << 8 | (str.charCodeAt(++i) & 255) << 16 | (str.charCodeAt(++i) & 255) << 24;
    k = /* Math.imul(k, m): */
    (k & 65535) * 1540483477 + ((k >>> 16) * 59797 << 16);
    k ^= /* k >>> r: */
    k >>> 24;
    h = /* Math.imul(k, m): */
    (k & 65535) * 1540483477 + ((k >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  }
  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 255) << 16;
    case 2:
      h ^= (str.charCodeAt(i + 1) & 255) << 8;
    case 1:
      h ^= str.charCodeAt(i) & 255;
      h = /* Math.imul(h, m): */
      (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  }
  h ^= h >>> 13;
  h = /* Math.imul(h, m): */
  (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}
var hash_browser_esm_default = murmur2;

// node_modules/@emotion/unitless/dist/unitless.browser.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
var unitless_browser_esm_default = unitlessKeys;

// node_modules/@emotion/memoize/dist/memoize.browser.esm.js
function memoize(fn) {
  var cache = {};
  return function(arg) {
    if (cache[arg] === void 0) cache[arg] = fn(arg);
    return cache[arg];
  };
}
var memoize_browser_esm_default = memoize;

// node_modules/@emotion/serialize/dist/serialize.browser.esm.js
var ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty2(property) {
  return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue2(value) {
  return value != null && typeof value !== "boolean";
};
var processStyleName = memoize_browser_esm_default(function(styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, "-$&").toLowerCase();
});
var processStyleValue = function processStyleValue2(key, value) {
  switch (key) {
    case "animation":
    case "animationName": {
      if (typeof value === "string") {
        return value.replace(animationRegex, function(match, p1, p2) {
          cursor = {
            name: p1,
            styles: p2,
            next: cursor
          };
          return p1;
        });
      }
    }
  }
  if (unitless_browser_esm_default[key] !== 1 && !isCustomProperty(key) && typeof value === "number" && value !== 0) {
    return value + "px";
  }
  return value;
};
if (true) {
  contentValuePattern = /(attr|calc|counters?|url)\(/;
  contentValues = ["normal", "none", "counter", "open-quote", "close-quote", "no-open-quote", "no-close-quote", "initial", "inherit", "unset"];
  oldProcessStyleValue = processStyleValue;
  msPattern = /^-ms-/;
  hyphenPattern = /-(.)/g;
  hyphenatedCache = {};
  processStyleValue = function processStyleValue3(key, value) {
    if (key === "content") {
      if (typeof value !== "string" || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
        console.error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
      }
    }
    var processed = oldProcessStyleValue(key, value);
    if (processed !== "" && !isCustomProperty(key) && key.indexOf("-") !== -1 && hyphenatedCache[key] === void 0) {
      hyphenatedCache[key] = true;
      console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, "ms-").replace(hyphenPattern, function(str, _char) {
        return _char.toUpperCase();
      }) + "?");
    }
    return processed;
  };
}
var contentValuePattern;
var contentValues;
var oldProcessStyleValue;
var msPattern;
var hyphenPattern;
var hyphenatedCache;
var shouldWarnAboutInterpolatingClassNameFromCss = true;
function handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {
  if (interpolation == null) {
    return "";
  }
  if (interpolation.__emotion_styles !== void 0) {
    if (interpolation.toString() === "NO_COMPONENT_SELECTOR") {
      throw new Error("Component selectors can only be used in conjunction with babel-plugin-emotion.");
    }
    return interpolation;
  }
  switch (typeof interpolation) {
    case "boolean": {
      return "";
    }
    case "object": {
      if (interpolation.anim === 1) {
        cursor = {
          name: interpolation.name,
          styles: interpolation.styles,
          next: cursor
        };
        return interpolation.name;
      }
      if (interpolation.styles !== void 0) {
        var next = interpolation.next;
        if (next !== void 0) {
          while (next !== void 0) {
            cursor = {
              name: next.name,
              styles: next.styles,
              next: cursor
            };
            next = next.next;
          }
        }
        var styles = interpolation.styles + ";";
        if (interpolation.map !== void 0) {
          styles += interpolation.map;
        }
        return styles;
      }
      return createStringFromObject(mergedProps, registered, interpolation);
    }
    case "function": {
      if (mergedProps !== void 0) {
        var previousCursor = cursor;
        var result = interpolation(mergedProps);
        cursor = previousCursor;
        return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);
      } else if (true) {
        console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
      }
      break;
    }
    case "string":
      if (true) {
        var matched = [];
        var replaced = interpolation.replace(animationRegex, function(match, p1, p2) {
          var fakeVarName = "animation" + matched.length;
          matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, "") + "`");
          return "${" + fakeVarName + "}";
        });
        if (matched.length) {
          console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(matched, ["`" + replaced + "`"]).join("\n") + "\n\nYou should wrap it with `css` like this:\n\n" + ("css`" + replaced + "`"));
        }
      }
      break;
  }
  if (registered == null) {
    return interpolation;
  }
  var cached = registered[interpolation];
  if (couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== void 0) {
    console.error("Interpolating a className from css`` is not recommended and will cause problems with composition.\nInterpolating a className from css`` will be completely unsupported in a future major version of Emotion");
    shouldWarnAboutInterpolatingClassNameFromCss = false;
  }
  return cached !== void 0 && !couldBeSelectorInterpolation ? cached : interpolation;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string = "";
  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i], false);
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];
      if (typeof value !== "object") {
        if (registered != null && registered[value] !== void 0) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === "NO_COMPONENT_SELECTOR" && true) {
          throw new Error("Component selectors can only be used in conjunction with babel-plugin-emotion.");
        }
        if (Array.isArray(value) && typeof value[0] === "string" && (registered == null || registered[value[0]] === void 0)) {
          for (var _i2 = 0; _i2 < value.length; _i2++) {
            if (isProcessableValue(value[_i2])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i2]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value, false);
          switch (_key) {
            case "animation":
            case "animationName": {
              string += processStyleName(_key) + ":" + interpolated + ";";
              break;
            }
            default: {
              if (_key === "undefined") {
                console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
              }
              string += _key + "{" + interpolated + "}";
            }
          }
        }
      }
    }
  }
  return string;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*;/g;
var sourceMapPattern;
if (true) {
  sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//;
}
var cursor;
var serializeStyles = function serializeStyles2(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === "object" && args[0] !== null && args[0].styles !== void 0) {
    return args[0];
  }
  var stringMode = true;
  var styles = "";
  cursor = void 0;
  var strings = args[0];
  if (strings == null || strings.raw === void 0) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings, false);
  } else {
    if (strings[0] === void 0) {
      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
    }
    styles += strings[0];
  }
  for (var i = 1; i < args.length; i++) {
    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);
    if (stringMode) {
      if (strings[i] === void 0) {
        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
      }
      styles += strings[i];
    }
  }
  var sourceMap;
  if (true) {
    styles = styles.replace(sourceMapPattern, function(match2) {
      sourceMap = match2;
      return "";
    });
  }
  labelPattern.lastIndex = 0;
  var identifierName = "";
  var match;
  while ((match = labelPattern.exec(styles)) !== null) {
    identifierName += "-" + // $FlowFixMe we know it's not null
    match[1];
  }
  var name = hash_browser_esm_default(styles) + identifierName;
  if (true) {
    return {
      name,
      styles,
      map: sourceMap,
      next: cursor,
      toString: function toString2() {
        return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
      }
    };
  }
  return {
    name,
    styles,
    next: cursor
  };
};

// node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js
var hasOwnProperty = Object.prototype.hasOwnProperty;
var EmotionCacheContext = (0, import_react.createContext)(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement !== "undefined" ? cache_browser_esm_default() : null
);
var ThemeContext = (0, import_react.createContext)({});
var CacheProvider = EmotionCacheContext.Provider;
var withEmotionCache = function withEmotionCache2(func) {
  var render3 = function render4(props, ref) {
    return (0, import_react.createElement)(EmotionCacheContext.Consumer, null, function(cache) {
      return func(props, cache, ref);
    });
  };
  return (0, import_react.forwardRef)(render3);
};
var sanitizeIdentifier = function sanitizeIdentifier2(identifier) {
  return identifier.replace(/\$/g, "-");
};
var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__";
var labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__";
var createEmotionProps = function createEmotionProps2(type, props) {
  if (typeof props.css === "string" && // check if there is a css declaration
  props.css.indexOf(":") !== -1) {
    throw new Error("Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`" + props.css + "`");
  }
  var newProps = {};
  for (var key in props) {
    if (hasOwnProperty.call(props, key)) {
      newProps[key] = props[key];
    }
  }
  newProps[typePropName] = type;
  if (true) {
    var error = new Error();
    if (error.stack) {
      var match = error.stack.match(/at (?:Object\.|Module\.|)(?:jsx|createEmotionProps).*\n\s+at (?:Object\.|)([A-Z][A-Za-z$]+) /);
      if (!match) {
        match = error.stack.match(/.*\n([A-Z][A-Za-z$]+)@/);
      }
      if (match) {
        newProps[labelPropName] = sanitizeIdentifier(match[1]);
      }
    }
  }
  return newProps;
};
var Noop = function Noop2() {
  return null;
};
var render = function render2(cache, props, theme, ref) {
  var cssProp = theme === null ? props.css : props.css(theme);
  if (typeof cssProp === "string" && cache.registered[cssProp] !== void 0) {
    cssProp = cache.registered[cssProp];
  }
  var type = props[typePropName];
  var registeredStyles = [cssProp];
  var className = "";
  if (typeof props.className === "string") {
    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);
  } else if (props.className != null) {
    className = props.className + " ";
  }
  var serialized = serializeStyles(registeredStyles);
  if (serialized.name.indexOf("-") === -1) {
    var labelFromStack = props[labelPropName];
    if (labelFromStack) {
      serialized = serializeStyles([serialized, "label:" + labelFromStack + ";"]);
    }
  }
  var rules = insertStyles(cache, serialized, typeof type === "string");
  className += cache.key + "-" + serialized.name;
  var newProps = {};
  for (var key in props) {
    if (hasOwnProperty.call(props, key) && key !== "css" && key !== typePropName && key !== labelPropName) {
      newProps[key] = props[key];
    }
  }
  newProps.ref = ref;
  newProps.className = className;
  var ele = (0, import_react.createElement)(type, newProps);
  var possiblyStyleElement = (0, import_react.createElement)(Noop, null);
  return (0, import_react.createElement)(import_react.Fragment, null, possiblyStyleElement, ele);
};
var Emotion = withEmotionCache(function(props, cache, ref) {
  if (typeof props.css === "function") {
    return (0, import_react.createElement)(ThemeContext.Consumer, null, function(theme) {
      return render(cache, props, theme, ref);
    });
  }
  return render(cache, props, null, ref);
});
if (true) {
  Emotion.displayName = "EmotionCssPropInternal";
}

// node_modules/@emotion/css/dist/css.browser.esm.js
function css() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return serializeStyles(args);
}
var css_browser_esm_default = css;

// node_modules/@emotion/core/dist/core.browser.esm.js
var jsx = function jsx2(type, props) {
  var args = arguments;
  if (props == null || !hasOwnProperty.call(props, "css")) {
    return import_react2.createElement.apply(void 0, args);
  }
  var argsLength = args.length;
  var createElementArgArray = new Array(argsLength);
  createElementArgArray[0] = Emotion;
  createElementArgArray[1] = createEmotionProps(type, props);
  for (var i = 2; i < argsLength; i++) {
    createElementArgArray[i] = args[i];
  }
  return import_react2.createElement.apply(null, createElementArgArray);
};
var warnedAboutCssPropForGlobal = false;
var Global = withEmotionCache(function(props, cache) {
  if (!warnedAboutCssPropForGlobal && // check for className as well since the user is
  // probably using the custom createElement which
  // means it will be turned into a className prop
  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used
  (props.className || props.css)) {
    console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?");
    warnedAboutCssPropForGlobal = true;
  }
  var styles = props.styles;
  if (typeof styles === "function") {
    return (0, import_react2.createElement)(ThemeContext.Consumer, null, function(theme) {
      var serialized2 = serializeStyles([styles(theme)]);
      return (0, import_react2.createElement)(InnerGlobal, {
        serialized: serialized2,
        cache
      });
    });
  }
  var serialized = serializeStyles([styles]);
  return (0, import_react2.createElement)(InnerGlobal, {
    serialized,
    cache
  });
});
var InnerGlobal = function(_React$Component) {
  _inheritsLoose(InnerGlobal2, _React$Component);
  function InnerGlobal2(props, context, updater) {
    return _React$Component.call(this, props, context, updater) || this;
  }
  var _proto = InnerGlobal2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.sheet = new StyleSheet({
      key: this.props.cache.key + "-global",
      nonce: this.props.cache.sheet.nonce,
      container: this.props.cache.sheet.container
    });
    var node = document.querySelector("style[data-emotion-" + this.props.cache.key + '="' + this.props.serialized.name + '"]');
    if (node !== null) {
      this.sheet.tags.push(node);
    }
    if (this.props.cache.sheet.tags.length) {
      this.sheet.before = this.props.cache.sheet.tags[0];
    }
    this.insertStyles();
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (prevProps.serialized.name !== this.props.serialized.name) {
      this.insertStyles();
    }
  };
  _proto.insertStyles = function insertStyles$1() {
    if (this.props.serialized.next !== void 0) {
      insertStyles(this.props.cache, this.props.serialized.next, true);
    }
    if (this.sheet.tags.length) {
      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;
      this.sheet.before = element;
      this.sheet.flush();
    }
    this.props.cache.insert("", this.props.serialized, this.sheet, false);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.sheet.flush();
  };
  _proto.render = function render3() {
    return null;
  };
  return InnerGlobal2;
}(import_react2.Component);
var classnames = function classnames2(args) {
  var len = args.length;
  var i = 0;
  var cls = "";
  for (; i < len; i++) {
    var arg = args[i];
    if (arg == null) continue;
    var toAdd = void 0;
    switch (typeof arg) {
      case "boolean":
        break;
      case "object": {
        if (Array.isArray(arg)) {
          toAdd = classnames2(arg);
        } else {
          toAdd = "";
          for (var k in arg) {
            if (arg[k] && k) {
              toAdd && (toAdd += " ");
              toAdd += k;
            }
          }
        }
        break;
      }
      default: {
        toAdd = arg;
      }
    }
    if (toAdd) {
      cls && (cls += " ");
      cls += toAdd;
    }
  }
  return cls;
};
function merge(registered, css2, className) {
  var registeredStyles = [];
  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);
  if (registeredStyles.length < 2) {
    return className;
  }
  return rawClassName + css2(registeredStyles);
}
var Noop3 = function Noop4() {
  return null;
};
var ClassNames = withEmotionCache(function(props, context) {
  return (0, import_react2.createElement)(ThemeContext.Consumer, null, function(theme) {
    var hasRendered = false;
    var css2 = function css3() {
      if (hasRendered && true) {
        throw new Error("css can only be used during render");
      }
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      var serialized = serializeStyles(args, context.registered);
      {
        insertStyles(context, serialized, false);
      }
      return context.key + "-" + serialized.name;
    };
    var cx = function cx2() {
      if (hasRendered && true) {
        throw new Error("cx can only be used during render");
      }
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return merge(context.registered, css2, classnames(args));
    };
    var content = {
      css: css2,
      cx,
      theme
    };
    var ele = props.children(content);
    hasRendered = true;
    var possiblyStyleElement = (0, import_react2.createElement)(Noop3, null);
    return (0, import_react2.createElement)(import_react2.Fragment, null, possiblyStyleElement, ele);
  });
});

// node_modules/@builder.io/react/dist/builder-react.es5.js
var React = __toESM(require_react());
var import_react3 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
var import_hash_sum2 = __toESM(require_hash_sum());
var version2 = "1.1.53-0";
var _a2;
"undefined" != typeof window && (null === (_a2 = window.parent) || void 0 === _a2 || _a2.postMessage({ type: "builder.isReactSdk", data: { value: true, supportsPatchUpdates: "v3", priorVersion: version2 } }, "*"));
var extendStatics = function(e, t) {
  return (extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e2, t2) {
    e2.__proto__ = t2;
  } || function(e2, t2) {
    for (var n in t2) Object.prototype.hasOwnProperty.call(t2, n) && (e2[n] = t2[n]);
  })(e, t);
};
function __extends(e, t) {
  if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
  function n() {
    this.constructor = e;
  }
  extendStatics(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n());
}
var __assign2 = function() {
  return (__assign2 = Object.assign || function(e) {
    for (var t, n = 1, i = arguments.length; n < i; n++) for (var r in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    return e;
  }).apply(this, arguments);
};
function __decorate(e, t, n, i) {
  var r, o = arguments.length, a = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, i);
  else for (var s = e.length - 1; s >= 0; s--) (r = e[s]) && (a = (o < 3 ? r(a) : o > 3 ? r(t, n, a) : r(t, n)) || a);
  return o > 3 && a && Object.defineProperty(t, n, a), a;
}
function __metadata(e, t) {
  if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
}
function __awaiter(e, t, n, i) {
  return new (n || (n = Promise))(function(r, o) {
    function a(e2) {
      try {
        l(i.next(e2));
      } catch (e3) {
        o(e3);
      }
    }
    function s(e2) {
      try {
        l(i.throw(e2));
      } catch (e3) {
        o(e3);
      }
    }
    function l(e2) {
      var t2;
      e2.done ? r(e2.value) : (t2 = e2.value, t2 instanceof n ? t2 : new n(function(e3) {
        e3(t2);
      })).then(a, s);
    }
    l((i = i.apply(e, t || [])).next());
  });
}
function __generator(e, t) {
  var n, i, r, o, a = { label: 0, sent: function() {
    if (1 & r[0]) throw r[1];
    return r[1];
  }, trys: [], ops: [] };
  return o = { next: s(0), throw: s(1), return: s(2) }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function s(o2) {
    return function(s2) {
      return function(o3) {
        if (n) throw new TypeError("Generator is already executing.");
        for (; a; ) try {
          if (n = 1, i && (r = 2 & o3[0] ? i.return : o3[0] ? i.throw || ((r = i.return) && r.call(i), 0) : i.next) && !(r = r.call(i, o3[1])).done) return r;
          switch (i = 0, r && (o3 = [2 & o3[0], r.value]), o3[0]) {
            case 0:
            case 1:
              r = o3;
              break;
            case 4:
              return a.label++, { value: o3[1], done: false };
            case 5:
              a.label++, i = o3[1], o3 = [0];
              continue;
            case 7:
              o3 = a.ops.pop(), a.trys.pop();
              continue;
            default:
              if (!(r = a.trys, (r = r.length > 0 && r[r.length - 1]) || 6 !== o3[0] && 2 !== o3[0])) {
                a = 0;
                continue;
              }
              if (3 === o3[0] && (!r || o3[1] > r[0] && o3[1] < r[3])) {
                a.label = o3[1];
                break;
              }
              if (6 === o3[0] && a.label < r[1]) {
                a.label = r[1], r = o3;
                break;
              }
              if (r && a.label < r[2]) {
                a.label = r[2], a.ops.push(o3);
                break;
              }
              r[2] && a.ops.pop(), a.trys.pop();
              continue;
          }
          o3 = t.call(e, a);
        } catch (e2) {
          o3 = [6, e2], i = 0;
        } finally {
          n = r = 0;
        }
        if (5 & o3[0]) throw o3[1];
        return { value: o3[0] ? o3[1] : void 0, done: true };
      }([o2, s2]);
    };
  }
}
function __spreadArray(e, t) {
  for (var n = 0, i = t.length, r = e.length; n < i; n++, r++) e[r] = t[n];
  return e;
}
var sizeNames = ["xsmall", "small", "medium", "large"];
var sizes = { xsmall: { min: 0, default: 0, max: 0 }, small: { min: 320, default: 321, max: 640 }, medium: { min: 641, default: 642, max: 991 }, large: { min: 990, default: 991, max: 1200 }, getWidthForSize: function(e) {
  return this[e].default;
}, getSizeForWidth: function(e) {
  for (var t = 0, n = sizeNames; t < n.length; t++) {
    var i = n[t];
    if (e <= this[i].max) return i;
  }
  return "large";
} };
var set = function(e, t, n) {
  if (Object(e) !== e) return e;
  var i = Array.isArray(t) ? t : t.toString().match(/[^.[\]]+/g);
  return i.slice(0, -1).reduce(function(e2, t2, n2) {
    return Object(e2[t2]) === e2[t2] ? e2[t2] : e2[t2] = Math.abs(Number(i[n2 + 1])) >> 0 == +i[n2 + 1] ? [] : {};
  }, e)[i[i.length - 1]] = n, e;
};
var safeDynamicRequire = Builder.isServer ? eval("require") : function() {
  return null;
};
var fnCache = {};
var api = function(e) {
  return builder;
};
function stringToFunction(e, t, n, i) {
  if (void 0 === t && (t = true), !e || !e.trim()) return function() {
  };
  var r = e + ":" + t;
  if (fnCache[r]) return fnCache[r];
  var o = t && !(e.includes(";") || e.includes(" return ") || e.trim().startsWith("return ")) || e.trim().startsWith("builder.run"), a = function() {
  };
  try {
    Builder.isBrowser && (a = new Function("state", "event", "block", "builder", "Device", "update", "Builder", "context", "\n          var names = [\n            'state',\n            'event',\n            'block',\n            'builder',\n            'Device',\n            'update',\n            'Builder',\n            'context'\n          ];\n          var rootState = state;\n          if (typeof Proxy !== 'undefined') {\n            rootState = new Proxy(rootState, {\n              set: function () {\n                return false;\n              },\n              get: function (target, key) {\n                if (names.includes(key)) {\n                  return undefined;\n                }\n                return target[key];\n              }\n            });\n          }\n          /* Alias */\n          var ctx = context;\n          with (rootState) {\n            ".concat(o ? "return (".concat(e, ");") : e, ";\n          }\n        ")));
  } catch (t2) {
    n && n.push(t2);
    var s = t2 && t2.message;
    s && "string" == typeof s && i && -1 === i.indexOf(s) && i.push(s), Builder.isBrowser && console.warn("Function compile error in ".concat(e), t2);
  }
  var l = function() {
    for (var t2 = [], i2 = 0; i2 < arguments.length; i2++) t2[i2] = arguments[i2];
    try {
      if (Builder.isBrowser) return a.apply(void 0, t2);
      var r2 = safeDynamicRequire("vm2").VM, o2 = t2[0], s2 = t2[1];
      return new r2({ timeout: 100, sandbox: __assign2(__assign2(__assign2(__assign2({}, o2), { state: o2 }), { builder: api }), { event: s2 }) }).run(e.replace(/(^|;)return /, "$1"));
    } catch (t3) {
      Builder.isBrowser ? console.warn("Builder custom code error:", t3.message || t3, "in", e, t3.stack || t3) : process.env.DEBUG && console.debug("Builder custom code error:", t3.message || t3, "in", e, t3.stack || t3), n && n.push(t3);
    }
  };
  return Builder.isBrowser && (fnCache[r] = l), l;
}
var isPromise = function(e) {
  return "function" == typeof e.then;
};
var isRequestInfo = function(e) {
  return !isPromise(e);
};
var BuilderAsyncRequestsContext = import_react3.default.createContext({ requests: [], errors: [], logs: [] });
var BuilderStoreContext = import_react3.default.createContext({ state: {}, rootState: {}, content: {}, context: {}, update: function(e) {
  return null;
} });
var applyPatchWithMinimalMutationChain = function(e, t, n) {
  if (void 0 === n && (n = true), Object(e) !== e) return e;
  var i = t.path, r = t.op, o = t.value, a = i.split(/\//);
  "" === a[0] && a.shift();
  for (var s = n ? e : __assign2({}, e), l = s, u = 0; u < a.length; u++) {
    var d = u === a.length - 1, c = a[u];
    if (d) {
      if ("replace" === r) l[c] = o;
      else if ("add" === r) {
        var p = Number(c);
        Array.isArray(l) ? "-" === c ? l.push(o) : l.splice(p, 0, o) : l[c] = o;
      } else if ("remove" === r) {
        p = Number(c);
        Array.isArray(l) ? l.splice(p, 1) : delete l[c];
      }
    } else {
      var f = a[u + 1], m = Object(l[c]) === l[c] ? l[c] : String(Number(f)) === f ? [] : {};
      l = l[c] = Array.isArray(m) ? __spreadArray([], m) : __assign2({}, m);
    }
  }
  return s;
};
var htmlEscape = function(e) {
  return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
};
var blockToHtmlString = function(e) {
  var t;
  return "<".concat(htmlEscape(e.tagName || "div"), ' \n    class="builder-block ').concat(e.id, " ").concat(e.class || "", '"\n    builder-id="').concat(e.id, '"\n  ').concat(Object.keys(e.properties || {}).map(function(t2) {
    return "".concat(htmlEscape(t2), '="').concat(htmlEscape(e.properties[t2]), '"');
  }).join(" "), "\n  >").concat("Text" === (null === (t = null == e ? void 0 : e.component) || void 0 === t ? void 0 : t.name) ? e.component.options.text : e.children ? e.children.map(function(e2) {
    return blockToHtmlString(e2);
  }).join("") : "", "</").concat(e.tagName || "div", ">").replace(/\s+/g, " ");
};
var Link = function(e) {
  return import_react3.default.createElement(BuilderStoreContext.Consumer, null, function(t) {
    return t.renderLink ? t.renderLink(e) : import_react3.default.createElement("a", __assign2({}, e));
  });
};
var camelCaseToKebabCase2 = function(e) {
  return e ? e.replace(/([A-Z])/g, function(e2) {
    return "-".concat(e2[0].toLowerCase());
  }) : "";
};
var kebabCaseToCamelCase = function(e) {
  return void 0 === e && (e = ""), e.replace(/-([a-z])/g, function(e2) {
    return e2[1].toUpperCase();
  });
};
var Device = { desktop: 0, tablet: 1, mobile: 2 };
var blocksMap = {};
var voidElements = /* @__PURE__ */ new Set(["area", "base", "br", "col", "embed", "hr", "img", "input", "link", "meta", "param", "source", "track", "wbr", "textarea"]);
var last = function(e) {
  return e[e.length - 1];
};
function omit$1(e, t) {
  for (var n = Object.assign({}, e), i = 0, r = t; i < r.length; i++) {
    delete n[r[i]];
  }
  return n;
}
var cssCase = function(e) {
  if (!e) return e;
  var t = camelCaseToKebabCase2(e);
  return e[0] === e[0].toUpperCase() && (t = "-" + t), t;
};
var fastClone = function(e) {
  return JSON.parse(JSON.stringify(e));
};
function capitalize(e) {
  if (e) return e[0].toUpperCase() + e.slice(1);
}
var BuilderBlock$1 = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.state = { hasError: false, updates: 0 }, t2.privateState = { state: {}, rootState: {}, context: {}, update: function() {
    } }, t2.onWindowMessage = function(e2) {
      var n = e2.data;
      if (n) switch (n.type) {
        case "builder.selectionChange":
          if (!(o = n.data)) break;
          var i = o.selection, r = t2.block && t2.block.id;
          r && Array.isArray(i) && i.indexOf(r) > -1 && setTimeout(function() {
            window.$block = t2, window.$blocks || (window.$blocks = []), window.$blocks.push(t2);
          });
          break;
        case "builder.patchUpdates":
          var o;
          if (!(o = n.data) || !o.data) break;
          var a = o.data[t2.block.id];
          if (!a) return;
          location.href.includes("builder.debug=true") && t2.eval("debugger");
          for (var s = __assign2({}, t2.block), l = 0, u = a; l < u.length; l++) {
            var d = u[l];
            applyPatchWithMinimalMutationChain(s, d);
          }
          blocksMap[t2.props.block.id] = s, t2.setState({ updates: t2.state.updates + 1 });
      }
    }, t2;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "store", { get: function() {
    return this.privateState;
  }, enumerable: false, configurable: true }), t.getDerivedStateFromError = function(e2) {
    return { hasError: true };
  }, t.prototype.componentDidCatch = function(e2, t2) {
    console.error("Builder block error:", e2, t2);
  }, t.prototype.stringToFunction = function(e2, t2) {
    return void 0 === t2 && (t2 = true), stringToFunction(e2, t2, this._errors, this._logs);
  }, Object.defineProperty(t.prototype, "block", { get: function() {
    return blocksMap[this.props.block.id] || this.props.block;
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "emotionCss", { get: function() {
    var e2, t2, n, i = this.block;
    if (Builder.isServer) {
      var r = i.animations && i.animations[0];
      if (r && "hover" !== r.trigger) {
        var o = r && r.steps && r.steps[0], a = o && o.styles;
        a && (n = a);
      }
    }
    var s = sizeNames.slice().reverse(), l = this.block, u = {};
    if (l.responsiveStyles) for (var d = 0, c = s; d < c.length; d++) {
      var p = c[d];
      "large" === p ? this.props.emailMode || (u["&.builder-block"] = Object.assign({}, l.responsiveStyles[p], n)) : u["@media only screen and (max-width: ".concat(sizes[p].max, "px)")] = { "&.builder-block": l.responsiveStyles[p] };
    }
    var f = i.animations && i.animations.find(function(e3) {
      return "hover" === e3.trigger;
    });
    return f && (u[":hover"] = (null === (t2 = null === (e2 = f.steps) || void 0 === e2 ? void 0 : e2[1]) || void 0 === t2 ? void 0 : t2.styles) || {}, u.transition = "all ".concat(f.duration, "s ").concat(camelCaseToKebabCase2(f.easing)), f.delay && (u.transitionDelay = f.delay + "s")), u;
  }, enumerable: false, configurable: true }), t.prototype.eval = function(e2) {
    return this.stringToFunction(e2)(this.privateState.state, void 0, this.block, builder, Device, this.privateState.update, Builder, this.privateState.context);
  }, t.prototype.componentWillUnmount = function() {
    Builder.isEditing && removeEventListener("message", this.onWindowMessage);
  }, t.prototype.componentDidMount = function() {
    var e2, t2 = this, n = this.block, i = n && n.animations;
    if (Builder.isEditing && addEventListener("message", this.onWindowMessage), i) {
      var r = { animations: fastClone(i) };
      if (n.bindings) {
        for (var o in n.bindings) if ((null === (e2 = o.trim) || void 0 === e2 ? void 0 : e2.call(o)) && o.startsWith("animations.")) {
          var a = this.stringToFunction(n.bindings[o]);
          void 0 !== a && set(r, o, a(this.privateState.state, null, n, builder, null, null, Builder, this.privateState.context));
        }
      }
      Builder.animator.bindAnimations(r.animations.filter(function(e3) {
        return "hover" !== e3.trigger;
      }).map(function(e3) {
        return __assign2(__assign2({}, e3), { elementId: t2.block.id });
      }));
    }
  }, t.prototype.getElement = function(e2, n) {
    var i, r, o, a, s, l = this;
    void 0 === e2 && (e2 = 0), void 0 === n && (n = this.privateState.state);
    var u = this.props;
    u.child, u.fieldName;
    var d, c = this.block, p = (c.tagName || "div").toLowerCase();
    if ("template" === p) {
      var f = c.children ? c.children.map(function(e3) {
        return blockToHtmlString(e3);
      }).join(" ") : "";
      return console.debug("template html", f), jsx("template", __assign2({}, c.properties, { dangerouslySetInnerHTML: { __html: f } }));
    }
    var m = c.component && (c.component.name || c.component.component), h = null;
    c.component && !c.component.class && (c.component && c.component.tag ? d = c.component.tag : (h = Builder.components.find(function(e3) {
      return e3.name === m;
    }) || null) && h.class ? d = h.class : h && h.tag ? d = h.tag : (null == m ? void 0 : m.startsWith("Builder:")) ? console.warn("Missing @builder.io/widgets installation, please install and import @builder.io/widgets to use ".concat(m.split(":")[1], " in your content, more info here: https://github.com/BuilderIO/builder/tree/main/packages/widgets")) : m && console.warn("Missing registration for ".concat(m, ", have you included the registration in your bundle?")));
    var g = __assign2(__assign2({}, c.properties), { style: {} });
    if (g = __assign2(__assign2({}, g.properties), g), c.component && (g.component = fastClone(c.component)), c.bindings) {
      for (var v in c.bindings) if (null === (r = v.trim) || void 0 === r ? void 0 : r.call(v)) {
        var b = this.stringToFunction(c.bindings[v]);
        set(g, v, b(n, null, c, api(), Device, null, Builder, this.privateState.context));
      }
    }
    if (g.hide) return null;
    if (delete g.hide, ("show" in g || c.bindings && c.bindings.show) && !g.show) return null;
    if (delete g.show, c.actions) {
      var y = function(e3) {
        if (!(null === (o = e3.trim) || void 0 === o ? void 0 : o.call(e3))) return "continue";
        var t2 = c.actions[e3];
        g["on" + capitalize(e3)] = function(e4) {
          var i2 = n;
          return "undefined" != typeof Proxy && (i2 = new Proxy(n, { set: function(e5, t3, n2) {
            return e5[t3] = n2, l.privateState.rootState[t3] = n2, true;
          } })), l.stringToFunction(t2, false)(i2, e4, l.block, builder, Device, l.privateState.update, Builder, l.privateState.context);
        };
      };
      for (var v in c.actions) y(v);
    }
    var _ = (g.component || g.options) && __assign2(__assign2({}, g.options), g.component.options || g.component.data), x = voidElements.has(p), S = h && (h.fragment || h.noWrap), w = (null === (a = g.attr) || void 0 === a ? void 0 : a.style) || ("string" == typeof g.style ? g.style : "") || "";
    if ("string" == typeof w) {
      "object" != typeof g.style && (g.style = {});
      for (var k = 0, C = w.split(";"); k < C.length; k++) {
        var B = C[k].split(":");
        if (!B.length) return;
        v = B[0], b = B[1];
        B.length > 2 && (b = B.slice(1).join(":")), g.style[kebabCaseToCamelCase(v)] = b;
      }
    }
    var R = __assign2(__assign2(__assign2({}, omit$1(g, ["class", "component", "attr"])), ((i = {})["string" != typeof p || p.includes("-") ? "class" : "className"] = "builder-block ".concat(this.id).concat(c.class ? " ".concat(c.class) : "").concat(!c.component || ["Image", "Video", "Banner"].indexOf(m) > -1 ? "" : " builder-has-component") + (g.class ? " " + g.class : "") + (Builder.isEditing && (null === (s = this.privateState.state._spacer) || void 0 === s ? void 0 : s.parent) === c.id ? " builder-spacer-parent" : ""), i.key = this.id + e2, i["builder-id"] = this.id, i)), 0 !== e2 && { "builder-index": e2 });
    Builder.isEditing && (R["builder-inline-styles"] = g.attr && g.attr.style ? Object.keys(g.style).reduce(function(e3, t2) {
      return (e3 ? "".concat(e3, ";") : "") + "".concat(cssCase(t2), ":").concat(g.style[t2], ";");
    }, "") : ""), (R.properties && R.properties.href || R.href) && "div" === p && (p = "a"), "a" === p && (p = Link);
    var E = c.children || R.children || [];
    return jsx(import_react3.default.Fragment, null, jsx(ClassNames, null, function(e3) {
      var n2 = e3.css;
      if (e3.cx, !l.props.emailMode) {
        var i2 = " " + n2(l.emotionCss);
        R.class && (R.class += i2), R.className && (R.className += i2);
      }
      return jsx(BuilderAsyncRequestsContext.Consumer, null, function(e4) {
        return l._asyncRequests = e4 && e4.requests, l._errors = e4 && e4.errors, l._logs = e4 && e4.logs, x ? jsx(p, __assign2({}, R)) : d && (S || l.props.emailMode) ? jsx(d, __assign2({}, _, { attributes: R, builderBlock: c, builderState: l.privateState })) : jsx(p, __assign2({}, R), d && jsx(d, __assign2({ builderState: l.privateState, builderBlock: c }, _)), c.text || g.text ? g.text : !d && E && Array.isArray(E) && E.length ? E.map(function(e5, n3) {
          return jsx(t, { key: (l.id || "") + n3, block: e5, index: n3, size: l.props.size, fieldName: l.props.fieldName, child: l.props.child, emailMode: l.props.emailMode });
        }) : null);
      });
    }));
  }, Object.defineProperty(t.prototype, "id", { get: function() {
    var e2 = this.block;
    return e2.id.startsWith("builder") ? e2.id : "builder-" + e2.id;
  }, enumerable: false, configurable: true }), t.prototype.contents = function(e2) {
    var t2 = this, n = this.block;
    if (this.privateState = e2, n.repeat && n.repeat.collection) {
      var i = n.repeat.collection, r = last((i || "").trim().split("(")[0].trim().split(".")), o = n.repeat.itemName || (r ? r + "Item" : "item"), a = this.stringToFunction(i)(e2.state, null, n, api(), Device, null, Builder, this.privateState.context);
      return Array.isArray(a) ? a.map(function(n2, i2) {
        var r2, a2 = __assign2(__assign2({}, e2.state), ((r2 = { $index: i2, $item: n2 })[o] = n2, r2["$".concat(o, "Index")] = i2, r2));
        return jsx(BuilderStoreContext.Provider, { key: i2, value: __assign2(__assign2({}, e2), { state: a2 }) }, t2.getElement(i2, a2));
      }) : null;
    }
    return this.getElement();
  }, t.prototype.render = function() {
    var e2 = this;
    return this.state.hasError ? jsx("span", { css: { display: "inline-block", padding: 5, color: "#999", fontSize: 11, fontStyle: "italic" } }, "Builder block error :( Check console for details") : jsx(BuilderStoreContext.Consumer, null, function(t2) {
      return e2.contents(t2);
    });
  }, t;
}(import_react3.default.Component);
var BuilderBlocks = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.onClickEmptyBlocks = function() {
      var e2;
      Builder.isIframe && t2.noBlocks && (null === (e2 = window.parent) || void 0 === e2 || e2.postMessage({ type: "builder.clickEmptyBlocks", data: { parentElementId: t2.parentId, dataPath: t2.path } }, "*"));
    }, t2.onHoverEmptyBlocks = function() {
      var e2;
      Builder.isEditing && t2.noBlocks && (null === (e2 = window.parent) || void 0 === e2 || e2.postMessage({ type: "builder.hoverEmptyBlocks", data: { parentElementId: t2.parentId, dataPath: t2.path } }, "*"));
    }, t2;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "isRoot", { get: function() {
    return !this.props.child;
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "noBlocks", { get: function() {
    var e2 = this.props.blocks;
    return !(e2 && e2.length);
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "path", { get: function() {
    var e2 = this.props.dataPath || "";
    return e2.trim() && (e2.startsWith("this.") ? e2 = e2.replace("this.", "") : e2.startsWith("component.options.") || (e2 = "component.options." + e2)), e2;
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "parentId", { get: function() {
    return this.props.parentElementId ? this.props.parentElementId : this.props.parent && this.props.parent.id;
  }, enumerable: false, configurable: true }), t.prototype.render = function() {
    var e2 = this, t2 = this.props.blocks, n = this.props.emailMode ? "span" : "div";
    return jsx(n, __assign2({ className: "builder-blocks" + (this.noBlocks ? " no-blocks" : "") + (this.props.child ? " builder-blocks-child" : "") + (this.props.className ? " " + this.props.className : ""), "builder-type": "blocks", "builder-path": Builder.isIframe ? this.path : void 0, "builder-parent-id": this.parentId, css: __assign2(__assign2({}, !this.props.emailMode && { display: "flex", flexDirection: "column", alignItems: "stretch" }), this.props.style), onClick: function() {
      e2.noBlocks && e2.onClickEmptyBlocks();
    } }, Builder.isEditing && { onMouseEnter: function() {
      return e2.onHoverEmptyBlocks();
    } }), t2 && Array.isArray(t2) && t2.map(function(t3, n2) {
      return t3 && "@builder.io/sdk:Element" === t3["@type"] ? jsx(BuilderBlock$1, { key: t3.id, block: t3, index: n2, fieldName: e2.props.fieldName, child: e2.props.child, emailMode: e2.props.emailMode }) : t3;
    }) || t2);
  }, t.renderInto = function(e2, n, i) {
    if (void 0 === n && (n = {}), e2) {
      var r = null;
      return "string" == typeof e2 ? r = document.querySelector(e2) : e2 instanceof Element && (r = e2), import_react_dom.default.render(jsx(BuilderStoreContext.Provider, { value: i }, jsx(t, __assign2({}, n))), r);
    }
  }, t;
}(import_react3.default.Component);
var NoWrap = function(e) {
  return e.children;
};
function getData(e) {
  if (void 0 !== (null == e ? void 0 : e.data)) {
    var t = e.data, n = t.blocks, i = t.blocksString, r = Array.isArray(n) || "string" == typeof i, o = __assign2(__assign2({}, e.data), r && { blocks: n || JSON.parse(i) });
    return delete o.blocksString, o;
  }
}
var variantsScript = function(e, t) {
  return "\n(function() {\n  if (window.builderNoTrack) {\n    return;\n  }\n\n  var variants = ".concat(e, `;
  function removeVariants() {
    variants.forEach(function (template) {
      document.querySelector('template[data-template-variant-id="' + template.id + '"]').remove();
    });
  }

  if (typeof document.createElement("template").content === 'undefined') {
    removeVariants();
    return ;
  }

  function setCookie(name,value,days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days*24*60*60*1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "")  + expires + "; path=/" + "; Secure; SameSite=None";
  }

  function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
  }
  var cookieName = 'builder.tests.`).concat(t, "';\n  var variantInCookie = getCookie(cookieName);\n  var availableIDs = variants.map(function(vr) { return vr.id }).concat('").concat(t, `');
  var variantId;
  if (availableIDs.indexOf(variantInCookie) > -1) {
    variantId = variantInCookie;
  }
  if (!variantId) {
    var n = 0;
    var random = Math.random();
    for (var i = 0; i < variants.length; i++) {
      var variant = variants[i];
      var testRatio = variant.testRatio;
      n += testRatio;
      if (random < n) {
        setCookie(cookieName, variant.id);
        variantId = variant.id;
        break;
      }
    }
    if (!variantId) {
      variantId = "`).concat(t, '";\n      setCookie(cookieName, "').concat(t, '");\n    }\n  }\n  if (variantId && variantId !== "').concat(t, `") {
    var winningTemplate = document.querySelector('template[data-template-variant-id="' + variantId + '"]');
    if (winningTemplate) {
      var parentNode = winningTemplate.parentNode;
      var newParent = parentNode.cloneNode(false);
      newParent.appendChild(winningTemplate.content.firstChild);
      parentNode.parentNode.replaceChild(newParent, parentNode);
    }
  } else if (variants.length > 0) {
    removeVariants();
  }
})()`).replace(/\s+/g, " ");
};
var VariantsProvider = function(e) {
  var t = e.initialContent, n = e.children;
  if (Builder.isBrowser && !builder.canTrack) return n([t]);
  if (!Boolean(Object.keys((null == t ? void 0 : t.variations) || {}).length)) return n([t]);
  var i = Object.keys(t.variations).map(function(e2) {
    return __assign2(__assign2({ id: e2 }, t.variations[e2]), { data: getData(t.variations[e2]) });
  }), r = __spreadArray(__spreadArray([], i, true), [t]);
  if (Builder.isServer) {
    var o = JSON.stringify(Object.keys(t.variations || {}).map(function(e2) {
      return { id: e2, testRatio: t.variations[e2].testRatio };
    }));
    return React.createElement(React.Fragment, null, n(r, function() {
      return React.createElement("script", { dangerouslySetInnerHTML: { __html: variantsScript(o, t.id) } });
    }));
  }
  var a = "builder.tests.".concat(t.id), s = builder.getCookie(a);
  if (!s && Builder.isBrowser) for (var l = 0, u = Math.random(), d = 0; d < i.length; d++) {
    var c = i[d];
    if (u < (l += c.testRatio)) {
      builder.setCookie(a, c.id), s = c.id;
      break;
    }
  }
  return s || (s = t.id, builder.setCookie(a, s)), n([r.find(function(e2) {
    return e2.id === s;
  })]);
};
var BuilderContent2 = function(_super) {
  function BuilderContent() {
    var _this = null !== _super && _super.apply(this, arguments) || this;
    return _this.ref = null, _this.state = { loading: !_this.props.content, data: getContentWithInfo(_this.props.content), updates: 1 }, _this.onWindowMessage = function(event) {
      var _a, _b, _c, message = event.data;
      if (message) switch (message.type) {
        case "builder.patchUpdates":
          if (null === (_a = _this.props.options) || void 0 === _a ? void 0 : _a.noEditorUpdates) return;
          var data = message.data;
          if (!data || !data.data) break;
          var patches = data.data[null === (_b = _this.state.data) || void 0 === _b ? void 0 : _b.id];
          if (!patches || !patches.length) return;
          location.href.includes("builder.debug=true") && eval("debugger");
          for (var _i = 0, patches_1 = patches; _i < patches_1.length; _i++) {
            var patch = patches_1[_i];
            applyPatchWithMinimalMutationChain(_this.state.data, patch);
          }
          _this.setState({ updates: _this.state.updates + 1, data: _this.state.data ? __assign2({}, _this.state.data) : _this.state.data }), _this.props.contentLoaded && _this.props.contentLoaded(null === (_c = _this.state.data) || void 0 === _c ? void 0 : _c.data, _this.state.data);
      }
    }, _this.subscriptions = new Subscription(), _this.firstLoad = true, _this.clicked = false, _this.trackedImpression = false, _this.intersectionObserver = null, _this.onClick = function(e) {
      var t = e.nativeEvent, n = _this.data;
      n && (builder.autoTrack && _this.builder.trackInteraction(n.id, _this.renderedVariantId, _this.clicked, t, { content: n }), _this.clicked || (_this.clicked = true));
    }, _this;
  }
  return __extends(BuilderContent, _super), Object.defineProperty(BuilderContent.prototype, "builder", { get: function() {
    return this.props.builder || builder;
  }, enumerable: false, configurable: true }), Object.defineProperty(BuilderContent.prototype, "name", { get: function() {
    var e = this.props;
    return "model" in e ? e.model : e.modelName;
  }, enumerable: false, configurable: true }), Object.defineProperty(BuilderContent.prototype, "renderedVariantId", { get: function() {
    var e, t, n = this.props.isStatic ? this.builder.getCookie("builder.tests.".concat(null === (e = this.data) || void 0 === e ? void 0 : e.id)) : null === (t = this.data) || void 0 === t ? void 0 : t.variationId;
    if (null !== n) return n;
  }, enumerable: false, configurable: true }), Object.defineProperty(BuilderContent.prototype, "options", { get: function() {
    var e, t, n = __assign2({}, this.props.options || {});
    return !n.key && (null === (e = this.props.content) || void 0 === e ? void 0 : e.id) && (n.key = this.props.content.id), this.props.content && !(null === (t = n.initialContent) || void 0 === t ? void 0 : t.length) && (n.initialContent = [this.props.content]), n;
  }, enumerable: false, configurable: true }), Object.defineProperty(BuilderContent.prototype, "data", { get: function() {
    var e = (this.props.inline || !Builder.isBrowser || this.firstLoad) && this.options.initialContent && this.options.initialContent[0] || this.state.data;
    return getContentWithInfo(e);
  }, enumerable: false, configurable: true }), BuilderContent.prototype.componentDidMount = function() {
    var e, t;
    if (!this.props.inline || Builder.isEditing) this.subscribeToContent();
    else if (this.props.inline && (null === (t = null === (e = this.options) || void 0 === e ? void 0 : e.initialContent) || void 0 === t ? void 0 : t.length)) {
      var n = this.options.initialContent[0];
      (null == n ? void 0 : n.id) && this.builder.trackImpression(n.id, this.renderedVariantId, void 0, { content: n });
    }
    Builder.isEditing && addEventListener("message", this.onWindowMessage);
  }, BuilderContent.prototype.subscribeToContent = function() {
    var e = this;
    "_inline" !== this.name && this.subscriptions.add(builder.queueGetContent(this.name, this.options).subscribe(function(t) {
      var n = t && t[0];
      if (e.setState({ data: n, loading: false }), n && e.firstLoad && (e.firstLoad = false, builder.autoTrack && !Builder.isEditing)) {
        var i = false;
        if ("function" == typeof IntersectionObserver && e.ref) try {
          (e.intersectionObserver = new IntersectionObserver(function(t2, i2) {
            t2.forEach(function(t3) {
              t3.intersectionRatio > 0 && !e.trackedImpression && (e.builder.trackImpression(n.id, e.renderedVariantId, void 0, { content: e.data }), e.data, e.trackedImpression = true, e.ref && i2.unobserve(e.ref));
            });
          })).observe(e.ref), i = true;
        } catch (e2) {
          console.warn("Could not bind intersection observer");
        }
        i || (e.trackedImpression = true, e.builder.trackImpression(n.id, e.renderedVariantId, void 0, { content: n }));
      }
      e.props.contentLoaded && e.props.contentLoaded(n && n.data, n);
    }, function(t) {
      e.props.contentError && (e.props.contentError(t), e.setState({ loading: false }));
    }));
  }, BuilderContent.prototype.componentWillUnmount = function() {
    Builder.isEditing && removeEventListener("message", this.onWindowMessage), this.subscriptions.unsubscribe(), this.intersectionObserver && this.ref && this.intersectionObserver.unobserve(this.ref);
  }, BuilderContent.prototype.render = function() {
    var e = this;
    if (this.props.dataOnly) return null;
    var t = this.state.loading, n = this.data, i = this.props.dataOnly ? NoWrap : "div";
    return import_react3.default.createElement(VariantsProvider, { initialContent: n }, function(r, o) {
      return import_react3.default.createElement(import_react3.default.Fragment, null, r.map(function(a, s) {
        var l = s === r.length - 1 ? import_react3.default.Fragment : "template";
        return import_react3.default.createElement(import_react3.default.Fragment, { key: String((null == a ? void 0 : a.id) + s) }, "template" !== l && (null == o ? void 0 : o()), import_react3.default.createElement(l, __assign2({ key: String((null == a ? void 0 : a.id) + s) }, "template" === l && { "data-template-variant-id": null == a ? void 0 : a.id }), import_react3.default.createElement(i, __assign2({}, 0 === s && !e.props.dataOnly && { ref: function(t2) {
          return e.ref = t2;
        } }, { className: "builder-content", onClick: e.onClick, "builder-content-id": null == a ? void 0 : a.id, "builder-model": e.name }), e.props.children(null == a ? void 0 : a.data, !e.props.inline && t, n))));
      }));
    });
  }, BuilderContent;
}(import_react3.default.Component);
var getContentWithInfo = function(e) {
  var t;
  if (e) {
    var n = builder.getCookie("builder.tests.".concat(e.id)), i = n === e.id ? e : null === (t = e.variations) || void 0 === t ? void 0 : t[n], r = (null == i ? void 0 : i.name) || ((null == i ? void 0 : i.id) === e.id ? "Default variation" : "");
    return __assign2(__assign2({}, e), { variationId: n, testVariationId: n, testVariationName: r });
  }
  return null;
};
function unwrapExports(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function createCommonjsModule(e, t) {
  return e(t = { exports: {} }, t.exports), t.exports;
}
var onChange_1 = createCommonjsModule(function(e, t) {
  Object.defineProperty(t, "__esModule", { value: true });
  var n = Symbol("target"), i = Symbol("unsubscribe"), r = function(e2, t2) {
    return t2 && t2.toString && (e2 && (e2 += "."), e2 += t2.toString()), e2;
  }, o = function(e2) {
    return Array.isArray(e2) ? e2.slice() : Object.assign({}, e2);
  }, a = function(e2, t2, a2) {
    if ("undefined" == typeof Proxy) return e2;
    void 0 === a2 && (a2 = {});
    var s, l, u = Symbol("ProxyTarget"), d = false, c = false, p = false, f = a2.equals || Object.is, m = /* @__PURE__ */ new WeakMap(), h = /* @__PURE__ */ new WeakMap(), g = /* @__PURE__ */ new WeakMap(), v = function(e3, n2, i2, a3) {
      if (!p) if (d) {
        if (d && l && void 0 !== i2 && void 0 !== a3 && "length" !== n2) {
          var u2 = l;
          e3 !== s && function(e4, t3) {
            for (var n3; e4; ) -1 === (n3 = e4.indexOf(".")) && (n3 = e4.length), t3(e4.slice(0, n3)), e4 = e4.slice(n3 + 1);
          }(e3 = e3.replace(s, "").slice(1), function(e4) {
            u2[e4] = o(u2[e4]), u2 = u2[e4];
          }), u2[n2] = i2;
        }
        c = true;
      } else t2(r(e3, n2), a3, i2);
    }, b = function(e3, t3) {
      var n2 = m ? m.get(e3) : void 0;
      n2 && n2.delete(t3);
    }, y = function(e3, t3) {
      if (p) return e3;
      h.set(e3, t3);
      var n2 = g.get(e3);
      return void 0 === n2 && (n2 = new Proxy(e3, x), g.set(e3, n2)), n2;
    }, _ = function(e3) {
      return p || true === a2.ignoreSymbols && "symbol" == typeof e3;
    }, x = { get: function(e3, t3, o2) {
      if (t3 === u || t3 === n) return e3;
      if (t3 === i && "" === h.get(e3)) return function(e4) {
        return p = true, m = null, h = null, g = null, e4;
      }(e3);
      var s2 = Reflect.get(e3, t3, o2);
      if (/* @__PURE__ */ function(e4) {
        return null === e4 || "object" != typeof e4 && "function" != typeof e4;
      }(s2) || function(e4) {
        return e4 instanceof RegExp || e4 instanceof Number;
      }(s2) || "constructor" === t3 || true === a2.isShallow) return s2;
      var l2 = function(e4, t4) {
        var n2 = m ? m.get(e4) : void 0;
        if (n2) return n2;
        n2 = /* @__PURE__ */ new Map(), m.set(e4, n2);
        var i2 = n2.get(t4);
        return i2 || (i2 = Reflect.getOwnPropertyDescriptor(e4, t4), n2.set(t4, i2)), i2;
      }(e3, t3);
      if (l2 && !l2.configurable) {
        if (l2.set && !l2.get) return;
        if (false === l2.writable) return s2;
      }
      return y(s2, r(h.get(e3), t3));
    }, set: function(e3, t3, n2, i2) {
      n2 && void 0 !== n2[u] && (n2 = n2[u]);
      var r2 = _(t3), o2 = r2 ? null : Reflect.get(e3, t3, i2), a3 = Reflect.set(e3[u] || e3, t3, n2);
      return r2 || f(o2, n2) || v(h.get(e3), t3, o2, n2), a3;
    }, defineProperty: function(e3, t3, n2) {
      var i2 = Reflect.defineProperty(e3, t3, n2);
      return _(t3) || (b(e3, t3), v(h.get(e3), t3, void 0, n2.value)), i2;
    }, deleteProperty: function(e3, t3) {
      if (!Reflect.has(e3, t3)) return true;
      var n2 = _(t3), i2 = n2 ? null : Reflect.get(e3, t3), r2 = Reflect.deleteProperty(e3, t3);
      return n2 || (b(e3, t3), v(h.get(e3), t3, i2)), r2;
    }, apply: function(e3, t3, n2) {
      var i2 = t3 instanceof Date;
      if (i2 && (t3 = t3[u]), !d) {
        d = true, i2 && (l = t3.valueOf()), (Array.isArray(t3) || "[object Object]" === toString.call(t3)) && (l = o(t3[u])), s = (s = h.get(e3)).slice(0, Math.max(s.lastIndexOf("."), 0));
        var r2 = Reflect.apply(e3, t3, n2);
        return d = false, (c || i2 && !f(l, t3.valueOf())) && (v(s, "", l, t3[u] || t3), l = null, c = false), r2;
      }
      return Reflect.apply(e3, t3, n2);
    } }, S = y(e2, "");
    return t2 = t2.bind(S), S;
  };
  a.target = function(e2) {
    return e2[n] || e2;
  }, a.unsubscribe = function(e2) {
    return e2[i] || e2;
  }, e.exports = a, t.default = a;
});
var onChange = unwrapExports(onChange_1);
var nextTick2 = Builder.nextTick;
function debounceNextTick(e, t, n) {
  return void 0 === t && "function" == typeof e ? debounceNextTickImpl(e) : { configurable: true, enumerable: n.enumerable, get: function() {
    return Object.defineProperty(this, t, { configurable: true, enumerable: n.enumerable, value: debounceNextTickImpl(n.value) }), this[t];
  } };
}
function debounceNextTickImpl(e) {
  var t = null, n = null;
  return function() {
    var e2 = t;
    if (t = [].slice.call(arguments), n = this, null !== e2) return;
    nextTick2(i);
  };
  function i() {
    e.apply(n, t), t = null, n = null;
  }
}
function throttle2(e, t, n) {
  var i, r, o;
  void 0 === n && (n = {});
  var a = null, s = 0, l = function() {
    s = false === n.leading ? 0 : Date.now(), a = null, o = e.apply(i, r), a || (i = r = null);
  };
  return function() {
    var u = Date.now();
    s || false !== n.leading || (s = u);
    var d = t - (u - s);
    return i = this, r = arguments, d <= 0 || d > t ? (a && (clearTimeout(a), a = null), s = u, o = e.apply(i, r), a || (i = r = null)) : a || false === n.trailing || (a = setTimeout(l, d)), o;
  };
}
var BuilderMetaContext = import_react3.default.createContext({ emailMode: false, ampMode: false, isServer: false });
function pick(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  var i = {};
  return t.forEach(function(t2) {
    i[t2] = e[t2];
  }), i;
}
function omit2(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  var i = __assign2({}, e);
  return t.forEach(function(e2) {
    delete i[e2];
  }), i;
}
var wrapComponent = function(e) {
  return function(t) {
    var n, i = t.builderTag || "div", r = ["children"].concat((null === (n = e.inputs) || void 0 === n ? void 0 : n.map(function(e2) {
      return e2.name;
    })) || []), o = omit2.apply(void 0, __spreadArray(__spreadArray([t], r, false), ["attributes"])), a = t;
    return e.noWrap ? import_react3.default.createElement(e.class, __assign2({ attributes: o }, a)) : import_react3.default.createElement(i, __assign2({}, o), import_react3.default.createElement(e.class, __assign2({}, a)));
  };
};
var size$1 = function(e) {
  return Object.keys(e).length;
};
function debounce(e, t, n) {
  var i;
  return void 0 === n && (n = false), function() {
    var r = this, o = arguments;
    clearTimeout(i), i = setTimeout(function() {
      i = null, n || e.apply(r, o);
    }, t), n && !i && e.apply(r, o);
  };
}
var fontsLoaded = /* @__PURE__ */ new Set();
var fetch$1 = Builder.isBrowser ? window.fetch : require_browser();
var sizeMap = { desktop: "large", tablet: "medium", mobile: "small" };
var fetchCache = {};
var tryEval = function(e, t, n) {
  void 0 === t && (t = {});
  var i = e;
  if ("string" == typeof i && i.trim()) {
    var r = !(i.includes(";") || i.includes(" return ")), o = function() {
    };
    try {
      Builder.isBrowser && (o = new Function("state", "var rootState = state;\n        if (typeof Proxy !== 'undefined') {\n          rootState = new Proxy(rootState, {\n            set: function () {\n              return false;\n            },\n            get: function (target, key) {\n              if (key === 'state') {\n                return state;\n              }\n              return target[key]\n            }\n          });\n        }\n        with (rootState) {\n          ".concat(r ? "return (".concat(e, ");") : e, ";\n        }")));
    } catch (e2) {
      Builder.isBrowser && console.warn("Could not compile javascript", e2);
    }
    try {
      return Builder.isBrowser ? o(t || {}) : new (0, safeDynamicRequire("vm2").VM)({ sandbox: __assign2(__assign2({}, t), { state: t }) }).run(i.replace(/(^|;)return /, "$1"));
    } catch (t2) {
      n && n.push(t2), Builder.isBrowser ? console.warn("Builder custom code error:", t2.message, "in", e, t2.stack) : process.env.DEBUG && console.debug("Builder custom code error:", t2.message, "in", e, t2.stack);
    }
  }
};
function searchToObject$1(e) {
  var t = (e.search || "").substring(1).split("&"), n = {};
  for (var i in t) if (t[i] && "string" == typeof t[i]) {
    var r = t[i].split("=");
    n[decodeURIComponent(r[0])] = decodeURIComponent(r[1]);
  }
  return n;
}
var BuilderComponent2 = function(e) {
  function t(t2) {
    var n = e.call(this, t2) || this;
    if (n.subscriptions = new Subscription(), n.onStateChange = new BehaviorSubject(null), n.asServer = Builder.isServer, n.contentRef = null, n.styleRef = null, n.rootState = Builder.isServer ? {} : onChange({}, function() {
      return n.updateState();
    }), n.lastJsCode = "", n.lastHttpRequests = {}, n.httpSubscriptionPerKey = {}, n.firstLoad = true, n.ref = null, n.messageListener = function(e2) {
      var t3 = e2.data;
      switch (t3.type) {
        case "builder.updateSpacer":
          var i2 = t3.data;
          n.rootState._spacer, n.updateState(function(e3) {
            e3._spacer = i2;
          });
          break;
        case "builder.resetState":
          var r2 = t3.data, o = r2.state;
          if (r2.model === n.name) {
            for (var a in n.rootState) "function" != typeof n.rootState[a] && delete n.rootState[a];
            Object.assign(n.rootState, o), n.setState(__assign2(__assign2({}, n.state), { state: n.rootState, updates: (n.state && n.state.updates || 0) + 1 }));
          }
          break;
        case "builder.resetSymbolState":
          var s = t3.data.state, l = (o = s.state, s.model, s.id);
          if (n.props.builderBlock && n.props.builderBlock === l) {
            for (var a in n.rootState) delete n.rootState[a];
            Object.assign(n.rootState, o), n.setState(__assign2(__assign2({}, n.state), { state: n.rootState, updates: (n.state && n.state.updates || 0) + 1 }));
          }
      }
    }, n.resizeFn = function() {
      var e2 = n.deviceSizeState;
      e2 !== n.state.state.deviceSize && n.setState(__assign2(__assign2({}, n.state), { updates: (n.state && n.state.updates || 0) + 1, state: Object.assign(n.rootState, __assign2(__assign2({}, n.state.state), { deviceSize: e2 })) }));
    }, n.resizeListener = Builder.isEditing ? throttle2(n.resizeFn, 200) : debounce(n.resizeFn, 400), n.mounted = false, n.updateState = function(e2) {
      var t3 = n.rootState;
      e2 && e2(t3), n.mounted ? n.setState({ update: n.updateState, state: t3, updates: (n.state && n.state.updates || 0) + 1 }) : n.state = __assign2(__assign2({}, n.state), { update: n.updateState, state: t3, updates: (n.state && n.state.updates || 0) + 1 }), n.notifyStateChange();
    }, n.onContentLoaded = function(e2, t3) {
      if ("page" === n.name && Builder.isBrowser && e2) {
        var i2 = e2.title, r2 = e2.pageTitle, o = e2.description, a = e2.pageDescription;
        if ((i2 || r2) && (document.title = i2 || r2), o || a) {
          var s = document.querySelector('meta[name="description"]');
          s || ((s = document.createElement("meta")).setAttribute("name", "description"), document.head.appendChild(s)), s.setAttribute("content", o || a);
        }
      }
      if (Builder.isEditing && n.notifyStateChange(), n.props.contentLoaded && n.props.contentLoaded(e2, t3), e2 && e2.inputs && Array.isArray(e2.inputs) && e2.inputs.length && (e2.state || (e2.state = {}), e2.inputs.forEach(function(t4) {
        t4 && t4.name && void 0 !== t4.defaultValue && void 0 === e2.state[t4.name] && (e2.state[t4.name] = t4.defaultValue);
      })), e2 && e2.state) {
        var l = __assign2(__assign2({}, n.state), { updates: (n.state && n.state.updates || 0) + 1, state: Object.assign(n.rootState, __assign2(__assign2(__assign2(__assign2({}, n.state.state), { location: n.locationState, deviceSize: n.deviceSizeState, device: n.device }), e2.state), n.props.data)) });
        n.mounted ? n.setState(l) : n.state = l;
      }
      if (e2 && e2.jsCode && Builder.isBrowser && !n.options.codegen) {
        var u = false;
        if (Builder.isEditing && (n.lastJsCode === e2.jsCode ? u = true : n.lastJsCode = e2.jsCode), !u) {
          var d = n.state.state;
          try {
            new Function("data", "ref", "state", "update", "element", "Builder", "builder", "context", e2.jsCode)(e2, n, d, n.state.update, n.ref, Builder, builder, n.state.context);
          } catch (t4) {
            Builder.isBrowser ? console.warn("Builder custom code error:", t4.message, "in", e2.jsCode, t4.stack) : process.env.DEBUG && console.debug("Builder custom code error:", t4.message, "in", e2.jsCode, t4.stack);
          }
        }
      }
      if (e2 && e2.httpRequests && !n.props.noAsync && !(u = false)) {
        var c = function(t4) {
          var i3 = e2.httpRequests[t4];
          if (i3 && (!n.data[t4] || Builder.isEditing)) if (Builder.isBrowser) {
            var r3 = n.evalExpression(i3);
            if (Builder.isEditing && n.lastHttpRequests[t4] === r3) return "continue";
            n.lastHttpRequests[t4] = r3;
            var o2 = i3.match(/builder\.io\/api\/v2\/([^\/\?]+)/i);
            o2 && o2[1], n.handleRequest(t4, r3);
            var a2 = n.httpSubscriptionPerKey[t4];
            a2 && a2.unsubscribe();
            var s2 = n.httpSubscriptionPerKey[t4] = n.onStateChange.subscribe(function() {
              var e3 = n.evalExpression(i3);
              e3 !== r3 && (n.handleRequest(t4, e3), n.lastHttpRequests[t4] = e3);
            });
            n.subscriptions.add(s2);
          } else n.handleRequest(t4, n.evalExpression(i3));
        };
        for (var p in e2.httpRequests) c(p);
      }
    }, n.state = { context: __assign2(__assign2({}, t2.context), { apiKey: builder.apiKey || n.props.apiKey }), state: Object.assign(n.rootState, __assign2(__assign2(__assign2(__assign2({}, n.inlinedContent && n.inlinedContent.data && n.inlinedContent.data.state), { isBrowser: Builder.isBrowser, isServer: !Builder.isBrowser, _hydrate: t2.hydrate, location: n.locationState, deviceSize: n.deviceSizeState, device: n.device }), n.getHtmlData()), t2.data)), updates: 0, key: 0, update: n.updateState }, Builder.isBrowser) {
      var i = n.props.apiKey;
      if (i && i !== n.builder.apiKey && (n.builder.apiKey = i), n.inlinedContent) {
        var r = n.inlinedContent.content || n.inlinedContent;
        n.onContentLoaded(null == r ? void 0 : r.data, getContentWithInfo(r));
      }
    }
    return n;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "options", { get: function() {
    return __assign2(__assign2({}, t.defaults), this.props);
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "name", { get: function() {
    return this.props.model || this.props.modelName || this.props.name;
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "element", { get: function() {
    return this.ref;
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "inlinedContent", { get: function() {
    if (!this.isPreviewing || this.props.inlineContent) return this.props.content;
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "builder", { get: function() {
    return this.props.builder || builder;
  }, enumerable: false, configurable: true }), t.prototype.getHtmlData = function() {
    var e2 = this.inlinedContent && this.inlinedContent.id || this.props.entry, t2 = e2 && Builder.isBrowser && document.querySelector('script[data-builder-json="'.concat(e2, '"],script[data-builder-state="').concat(e2, '"]'));
    if (t2) try {
      return JSON.parse(t2.innerText);
    } catch (e3) {
      console.warn("Could not parse Builder.io HTML data transfer", e3, t2.innerText);
    }
    return {};
  }, Object.defineProperty(t.prototype, "device", { get: function() {
    return this.builder.getUserAttributes().device || "desktop";
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "locationState", { get: function() {
    return __assign2(__assign2({}, pick(this.location, "pathname", "hostname", "search", "host")), { path: this.location.pathname && this.location.pathname.split("/").slice(1) || "", query: searchToObject$1(this.location) });
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "deviceSizeState", { get: function() {
    return Builder.isBrowser ? sizes.getSizeForWidth(window.innerWidth) : sizeMap[this.device] || "large";
  }, enumerable: false, configurable: true }), t.renderInto = function(e2, n, i, r) {
    if (void 0 === n && (n = {}), void 0 === i && (i = true), void 0 === r && (r = false), console.debug("BuilderPage.renderInto", e2, n, i, this), e2) {
      var o = null;
      if ("string" == typeof e2 ? o = document.querySelector(e2) : e2 instanceof Element && (o = e2), o) {
        var a = o.classList.contains("builder-hydrated");
        if (!a || r) {
          o.classList.add("builder-hydrated");
          var s = i && o.innerHTML.includes("builder-block");
          if (!o.classList.contains("builder-component")) {
            var l = o.querySelector(".builder-api-styles") || (o.previousElementSibling && o.previousElementSibling.matches(".builder-api-styles") ? o.previousElementSibling : null), u = "";
            if (l) l.innerHTML.replace(/\/\*start:([^\*]+?)\*\/([\s\S]*?)\/\*end:([^\*]+?)\*\//g, function(e3, t2, n2) {
              var i2 = null;
              try {
                i2 = document.querySelector('[data-emotion-css="'.concat(t2, '"]'));
              } catch (e4) {
                console.warn(e4);
              }
              return i2 ? i2.innerHTML = n2 : Builder.isEditing || (u += e3), e3;
            }), Builder.nextTick(function() {
              l.innerHTML = u;
            });
            var d = o.querySelector(".builder-component");
            d ? o = d : s = false;
          }
          location.search.includes("builder.debug=true") && console.debug("hydrate", s, o);
          var c = o;
          if (!a) {
            var p = document.createElement("div");
            o.insertAdjacentElement("beforebegin", p), p.appendChild(o), c = p;
          }
          if ((Builder.isEditing || Builder.isBrowser && location.search.includes("builder.preview=")) && (s = false), s && o) {
            var f = import_react_dom.default.render(import_react3.default.createElement(t, __assign2({}, n)), c, c.builderRootRef);
            return c.builderRootRef = f, f;
          }
          var m = import_react_dom.default.render(import_react3.default.createElement(t, __assign2({}, n)), c, c.builderRootRef);
          return c.builderRootRef = m, m;
        }
        console.debug("Tried to hydrate multiple times");
      }
    }
  }, t.prototype.componentDidMount = function() {
    var e2, t2 = this;
    this.mounted = true, this.asServer && (this.asServer = false, this.updateState(function(e3) {
      e3.isBrowser = true, e3.isServer = false;
    })), Builder.isIframe && (null === (e2 = window.parent) || void 0 === e2 || e2.postMessage({ type: "builder.sdkInjected", data: { modelName: this.name } }, "*")), Builder.isBrowser && (window.addEventListener("resize", this.resizeListener), Builder.isEditing && window.addEventListener("message", this.messageListener), (Builder.isEditing || Builder.isPreviewing) && Builder.nextTick(function() {
      t2.firstLoad = false, t2.reload();
    }), setTimeout(function() {
      window.dispatchEvent(new CustomEvent("builder:component:load", { detail: { ref: t2 } }));
    }));
  }, Object.defineProperty(t.prototype, "isPreviewing", { get: function() {
    return (Builder.isServer || Builder.isBrowser && Builder.isPreviewing && !this.firstLoad) && builder.previewingModel === this.name;
  }, enumerable: false, configurable: true }), t.prototype.notifyStateChange = function() {
    if (!Builder.isServer && this && this.state) {
      var e2 = this.state.state;
      this.props.onStateChange && this.props.onStateChange(e2), Builder.isBrowser && window.dispatchEvent(new CustomEvent("builder:component:stateChange", { detail: { state: e2, ref: this } })), this.onStateChange.next(e2);
    }
  }, t.prototype.processStateFromApi = function(e2) {
    return e2;
  }, Object.defineProperty(t.prototype, "location", { get: function() {
    return this.props.location || (Builder.isBrowser ? location : {});
  }, enumerable: false, configurable: true }), t.prototype.getCssFromFont = function(e2, t2) {
    var n = e2.family + (e2.kind && !e2.kind.includes("#") ? ", " + e2.kind : ""), i = n.split(",")[0], r = e2.fileUrl ? e2.fileUrl : e2.files && e2.files.regular, o = "";
    if (r && n && i && (o += '\n@font-face {\n  font-family: "'.concat(n, '";\n  src: local("').concat(i, `"), url('`).concat(r, "') format('woff2');\n  font-display: fallback;\n  font-weight: 400;\n}\n        ").trim()), e2.files) for (var a in e2.files) {
      if (String(Number(a)) === a) {
        var s = e2.files[a];
        s && s !== r && (o += '\n@font-face {\n  font-family: "'.concat(n, `";
  src: url('`).concat(s, "') format('woff2');\n  font-display: fallback;\n  font-weight: ").concat(a, ";\n}\n          ").trim());
      }
    }
    return o;
  }, t.prototype.componentWillUnmount = function() {
    this.unsubscribe(), Builder.isBrowser && (window.removeEventListener("resize", this.resizeListener), window.removeEventListener("message", this.messageListener));
  }, t.prototype.getFontCss = function(e2) {
    var t2 = this;
    return this.builder.allowCustomFonts && (null == e2 ? void 0 : e2.customFonts) && e2.customFonts.length && e2.customFonts.map(function(n) {
      return t2.getCssFromFont(n, e2);
    }).join(" ") || "";
  }, t.prototype.ensureFontsLoaded = function(e2) {
    if (this.builder.allowCustomFonts && (null == e2 ? void 0 : e2.customFonts) && Array.isArray(e2.customFonts)) for (var t2 = 0, n = e2.customFonts; t2 < n.length; t2++) {
      var i = n[t2], r = i.fileUrl ? i.fileUrl : i.files && i.files.regular;
      if (!fontsLoaded.has(r)) {
        var o = this.getCssFromFont(i, e2);
        if (fontsLoaded.add(r), !o) continue;
        var a = document.createElement("style");
        a.className = "builder-custom-font", a.setAttribute("data-builder-custom-font", r), a.innerHTML = o, document.head.appendChild(a);
      }
    }
  }, t.prototype.getCss = function(e2) {
    var t2, n = null === (t2 = this.useContent) || void 0 === t2 ? void 0 : t2.id, i = (null == e2 ? void 0 : e2.cssCode) || "";
    return n && (i = i.replace(/&/g, ".builder-component-".concat(n))), i + this.getFontCss(e2);
  }, Object.defineProperty(t.prototype, "data", { get: function() {
    var e2, t2 = __assign2(__assign2(__assign2({}, this.inlinedContent && (null === (e2 = this.inlinedContent.data) || void 0 === e2 ? void 0 : e2.state)), this.props.data), this.state.state);
    return Object.assign(this.rootState, t2), t2;
  }, enumerable: false, configurable: true }), t.prototype.componentDidUpdate = function(e2) {
    var t2 = this;
    this.props.data && e2.data !== this.props.data && this.state.update(function(e3) {
      Object.assign(e3, t2.props.data);
    }), Builder.isEditing && this.inlinedContent && e2.content !== this.inlinedContent && this.onContentLoaded(this.inlinedContent.data, this.inlinedContent);
  }, t.prototype.checkStyles = function(e2) {
    if (this.styleRef) {
      var t2 = this.getCss(e2);
      this.styleRef.innerHTML !== t2 && (this.styleRef.innerHTML = t2);
    }
  }, t.prototype.reload = function() {
    this.setState({ key: this.state.key + 1 });
  }, Object.defineProperty(t.prototype, "content", { get: function() {
    var e2 = this.inlinedContent;
    return e2 && e2.content && (e2 = __assign2(__assign2({}, e2), { data: e2.content })), e2;
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "useContent", { get: function() {
    return this.content || this.state.context.builderContent;
  }, enumerable: false, configurable: true }), t.prototype.render = function() {
    var e2, t2 = this, n = this.content, i = Builder.isBrowser && this.props.data && size$1(this.props.data) && (0, import_hash_sum2.default)(this.props.data), r = Builder.isEditing ? this.name : this.props.entry;
    r && !Builder.isEditing && i && i.length < 300 && (r += ":" + i);
    var o = this.props.dataOnly ? import_react3.default.Fragment : "div", a = null === (e2 = this.useContent) || void 0 === e2 ? void 0 : e2.id;
    return import_react3.default.createElement(o, { onClick: function(e3) {
      !Builder.isEditing || t2.props.isChild || t2.props.stopClickPropagationWhenEditing || e3.stopPropagation();
    }, className: "builder-component ".concat(a ? "builder-component-".concat(a) : ""), "data-name": this.name, "data-source": "Rendered by Builder.io", key: this.state.key, ref: function(e3) {
      return t2.ref = e3;
    } }, import_react3.default.createElement(BuilderMetaContext.Consumer, null, function(e3) {
      return import_react3.default.createElement(BuilderMetaContext.Provider, { value: "boolean" == typeof t2.props.ampMode ? __assign2(__assign2({}, e3), { ampMode: t2.props.ampMode }) : e3 }, import_react3.default.createElement(BuilderAsyncRequestsContext.Consumer, null, function(e4) {
        var i2;
        return t2._asyncRequests = e4 && e4.requests, t2._errors = e4 && e4.errors, t2._logs = e4 && e4.logs, import_react3.default.createElement(BuilderContent2, { isStatic: t2.props.isStatic || Builder.isStatic, key: (null === (i2 = t2.inlinedContent) || void 0 === i2 ? void 0 : i2.id) || ("content" in t2.props && !t2.isPreviewing ? "null-content-prop" : "no-content-prop"), builder: t2.builder, ref: function(e5) {
          return t2.contentRef = e5;
        }, contentLoaded: function(e5, n2) {
          return t2.onContentLoaded(e5, n2);
        }, options: __assign2(__assign2(__assign2(__assign2(__assign2({ key: r, entry: t2.props.entry }, n && { initialContent: [n] }), !n && "content" in t2.props && !t2.isPreviewing && { initialContent: [] }), t2.props.url && { url: t2.props.url }), t2.props.options), t2.options.codegen && { format: "react" }), inline: t2.props.inlineContent || !t2.isPreviewing && "content" in t2.props, contentError: t2.props.contentError, modelName: t2.name || "page" }, function(e5, n2, i3) {
          var r2;
          if (t2.props.dataOnly) return null;
          i3 && i3.id && (t2.state.context.builderContent = i3), Builder.isBrowser && Builder.nextTick(function() {
            t2.checkStyles(e5);
          });
          var o2 = t2.options.codegen;
          if (o2 && !t2.Component && (null == e5 ? void 0 : e5.blocksJs)) {
            var a2 = Array.from(new Set(Builder.components.map(function(e6) {
              return e6.name;
            }))), s = Builder.components.slice().reverse(), l = a2.map(function(e6) {
              return s.find(function(t3) {
                return t3.class && t3.name === e6;
              });
            }), u = a2.map(function(e6) {
              return (e6 || "").replace(/[^\w]+/gi, "");
            }), d = l.map(function(e6) {
              return wrapComponent(e6);
            });
            t2.Component = new (Function.bind.apply(Function, __spreadArray(__spreadArray([void 0, "jsx", "_css", "Builder", "builder", "React", "useBuilderState"], u, false), [e5.blocksJs])))().apply(void 0, __spreadArray([jsx, css_browser_esm_default, Builder, builder, import_react3.default, function(e6) {
              var t3 = import_react3.default.useState(0)[1];
              return import_react3.default.useState(function() {
                return onChange(e6, function() {
                  t3(function(e7) {
                    return e7 + 1;
                  });
                });
              })[0];
            }], d));
          }
          return e5 ? import_react3.default.createElement("div", { "data-builder-component": t2.name, "data-builder-content-id": i3.id, "data-builder-variation-id": i3.testVariationId || i3.variationId || i3.id }, !o2 && t2.getCss(e5) && import_react3.default.createElement("style", { ref: function(e6) {
            return t2.styleRef = e6;
          }, className: "builder-custom-styles", dangerouslySetInnerHTML: { __html: t2.getCss(e5) } }), import_react3.default.createElement(BuilderStoreContext.Provider, { value: __assign2(__assign2({}, t2.state), { rootState: t2.rootState, state: t2.data, content: i3, renderLink: t2.props.renderLink }) }, o2 && t2.Component ? import_react3.default.createElement(t2.Component, { data: t2.data, context: t2.state.context }) : import_react3.default.createElement(BuilderBlocks, { key: String(!!(null === (r2 = null == e5 ? void 0 : e5.blocks) || void 0 === r2 ? void 0 : r2.length)), emailMode: t2.props.emailMode, fieldName: "blocks", blocks: e5.blocks }))) : n2 ? import_react3.default.createElement("div", { "data-builder-component": t2.name, className: "builder-loading" }, t2.props.children) : import_react3.default.createElement("div", { "data-builder-component": t2.name, className: "builder-no-content" });
        });
      }));
    }));
  }, t.prototype.evalExpression = function(e2) {
    var t2 = this, n = this.data;
    return e2.replace(/{{([^}]+)}}/g, function(e3, i) {
      return tryEval(i, n, t2._errors);
    });
  }, t.prototype.handleRequest = function(e2, t2) {
    return __awaiter(this, void 0, void 0, function() {
      var n, i, r, o, a = this;
      return __generator(this, function(s) {
        return Builder.isIframe && fetchCache[t2] ? (this.updateState(function(n2) {
          n2[e2] = fetchCache[t2];
        }), [2, fetchCache[t2]]) : (n = function() {
          return __awaiter(a, void 0, void 0, function() {
            var n2, i2, r2;
            return __generator(this, function(o2) {
              switch (o2.label) {
                case 0:
                  n2 = Date.now(), Builder.isBrowser || console.time("Fetch " + t2), o2.label = 1;
                case 1:
                  return o2.trys.push([1, 4, 5, 6]), [4, fetch$1(t2)];
                case 2:
                  return [4, o2.sent().json()];
                case 3:
                  return i2 = o2.sent(), [3, 6];
                case 4:
                  return r2 = o2.sent(), this._errors && this._errors.push(r2), this._logs && this._logs.push("Fetch to ".concat(t2, " errored in ").concat(Date.now() - n2, "ms")), [2];
                case 5:
                  return Builder.isBrowser || (console.timeEnd("Fetch " + t2), this._logs && this._logs.push("Fetched ".concat(t2, " in ").concat(Date.now() - n2, "ms"))), [7];
                case 6:
                  return i2 && (Builder.isIframe && (fetchCache[t2] = i2), this.updateState(function(t3) {
                    t3[e2] = i2;
                  })), [2, i2];
              }
            });
          });
        }, (i = this._asyncRequests && this._asyncRequests.find(function(e3) {
          return isRequestInfo(e3) && e3.url === t2;
        })) ? ((r = i.promise).then(function(t3) {
          t3 && a.updateState(function(n2) {
            n2[e2] = t3;
          });
        }), [2, r]) : (o = n(), Builder.nextTick(function() {
          a._asyncRequests && a._asyncRequests.push(o);
        }), [2, o]));
      });
    });
  }, t.prototype.unsubscribe = function() {
    this.subscriptions && (this.subscriptions.unsubscribe(), this.subscriptions = new Subscription());
  }, t.prototype.handleBuilderRequest = function(e2, t2) {
    var n = this, i = tryEval(t2, this.data, this._errors);
    this.subscriptions && this.unsubscribe(), i && this.subscriptions.add(this.builder.queueGetContent(i.model, i).subscribe(function(t3) {
      t3 && n.updateState(function(n2) {
        n2[e2] = t3;
      });
    }));
  }, t.defaults = { codegen: Boolean(Builder.isBrowser && location.href.includes("builder.codegen=true")) }, __decorate([debounceNextTick, __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], t.prototype, "notifyStateChange", null), t;
}(import_react3.default.Component);
function BuilderBlock(e) {
  return e.type = "react", Builder.Component(e);
}
function updateMetadata(e, t) {
  var n = Builder.components.find(function(t2) {
    return "string" == typeof e ? t2.name === e : t2.class === t2;
  }) || null, i = t(n);
  n && i ? Builder.registerComponent(i.class || n.class, i) : n && !i || !n && i && Builder.registerComponent(i.class, i);
}
function withBuilder(e, t) {
  return BuilderBlock(t)(e), e;
}
var withChildren = function(e) {
  var t = import_react3.default.forwardRef(function(t2, n) {
    var i = t2.children || t2.builderBlock && t2.builderBlock.children && t2.builderBlock.children.map(function(e2) {
      return import_react3.default.createElement(BuilderBlock$1, { key: e2.id, block: e2 });
    });
    return import_react3.default.createElement(e, __assign2({}, t2, { ref: n }), i);
  });
  return t.builderOptions = { canHaveChildren: true }, t;
};
var noWrap = function(e) {
  var t = import_react3.default.forwardRef(function(t2, n) {
    var i = __assign2(__assign2({}, t2), t2.attributes);
    return import_react3.default.createElement(e, __assign2({}, i, { ref: n }));
  });
  return t.builderOptions = { noWrap: true }, t;
};
var iconUrl = "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-text_fields-24px%20(1).svg?alt=media&token=12177b73-0ee3-42ca-98c6-0dd003de1929";
var TextComponent = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.textRef = null, t2;
  }
  return __extends(t, e), t.prototype.componentDidUpdate = function(e2) {
    this.allowTextEdit && (!this.textRef || "true" === this.textRef.contentEditable && this.textRef === document.activeElement || this.props.text !== e2.text && (this.textRef.innerHTML = this.props.text));
  }, t.prototype.componentDidMount = function() {
    this.textRef && (this.textRef.innerHTML = this.props.text);
  }, Object.defineProperty(t.prototype, "allowTextEdit", { get: function() {
    return Builder.isBrowser && Builder.isEditing && location.search.includes("builder.allowTextEdit=true") && !(this.props.builderBlock && this.props.builderBlock.bindings && (this.props.builderBlock.bindings["component.options.text"] || this.props.builderBlock.bindings["options.text"] || this.props.builderBlock.bindings.text));
  }, enumerable: false, configurable: true }), t.prototype.render = function() {
    var e2 = this, t2 = this.allowTextEdit, n = { outline: "none", "& p:first-of-type, & .builder-paragraph:first-of-type": { margin: 0 }, "& > p, & .builder-paragraph": { color: "inherit", lineHeight: "inherit", letterSpacing: "inherit", fontWeight: "inherit", fontSize: "inherit", textAlign: "inherit", fontFamily: "inherit" } };
    return jsx(BuilderStoreContext.Consumer, null, function(i) {
      var r;
      return (null === (r = i.content.meta) || void 0 === r ? void 0 : r.rtlMode) && (n.direction = "rtl"), jsx(import_react3.default.Fragment, null, jsx("span", __assign2({ ref: function(t3) {
        e2.textRef = t3;
      }, contentEditable: t2 || void 0, onInput: function(n2) {
        var i2;
        t2 && (null === (i2 = window.parent) || void 0 === i2 || i2.postMessage({ type: "builder.textEdited", data: { id: e2.props.builderBlock && e2.props.builderBlock.id, value: n2.currentTarget.innerHTML } }, "*"));
      }, onKeyDown: function(n2) {
        t2 && e2.textRef && 27 === n2.which && document.activeElement === e2.textRef && e2.textRef.blur();
      }, onFocus: function(n2) {
        var i2;
        t2 && (null === (i2 = window.parent) || void 0 === i2 || i2.postMessage({ type: "builder.textFocused", data: { id: e2.props.builderBlock && e2.props.builderBlock.id } }, "*"));
      }, onBlur: function(n2) {
        var i2;
        t2 && (null === (i2 = window.parent) || void 0 === i2 || i2.postMessage({ type: "builder.textBlurred", data: { id: e2.props.builderBlock && e2.props.builderBlock.id } }, "*"));
      }, css: n, className: "builder-text" }, !t2 && { dangerouslySetInnerHTML: { __html: e2.props.text || e2.props.content || "" } })));
    });
  }, t;
}(import_react3.default.Component);
var Text = withBuilder(TextComponent, { name: "Text", static: true, image: iconUrl, inputs: [{ name: "text", type: "html", required: true, autoFocus: true, bubble: true, defaultValue: "Enter some text..." }], defaultStyles: { lineHeight: "normal", height: "auto", textAlign: "center" } });
function Slot(e) {
  var t = e.name, n = (0, import_react3.useContext)(BuilderStoreContext), i = !n.context.symbolId;
  return jsx("div", __assign2({ css: { pointerEvents: "auto" } }, i && { "builder-slot": t }), jsx(BuilderBlocks, { child: true, parentElementId: n.context.symbolId, dataPath: "symbol.data.".concat(t), blocks: n.state[t] || [] }));
}
Builder.registerComponent(Slot, { name: "Slot", description: "Allow child blocks to be inserted into this content when used as a Symbol", docsLink: "https://www.builder.io/c/docs/symbols-with-blocks", image: "https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F3aad6de36eae43b59b52c85190fdef56", inputs: [{ name: "name", type: "string", required: true, defaultValue: "children" }] });
var FragmentComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    return this.props.builderBlock && this.props.builderBlock.children && this.props.builderBlock.children.map(function(e2, t2) {
      return import_react3.default.createElement(BuilderBlock$1, { block: e2, key: e2.id, index: t2 });
    });
  }, t;
}(import_react3.default.Component);
var Fragment4 = withBuilder(FragmentComponent, { name: "Core:Fragment", canHaveChildren: true, noWrap: true, static: true, hideFromInsertMenu: true });
var DEFAULT_ASPECT_RATIO$2 = 0.7004048582995948;
var defaultBlocks = [{ "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { display: "flex", flexDirection: "column", alignItems: "stretch", flexShrink: "0", position: "relative", marginTop: "30px", textAlign: "center", lineHeight: "normal", height: "auto", minHeight: "20px", minWidth: "20px", overflow: "hidden" } }, component: { name: "Image", options: { image: "https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d", backgroundPosition: "center", backgroundSize: "cover", aspectRatio: DEFAULT_ASPECT_RATIO$2 } } }, { "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { display: "flex", flexDirection: "column", alignItems: "stretch", flexShrink: "0", position: "relative", marginTop: "30px", textAlign: "center", lineHeight: "normal", height: "auto" } }, component: { name: "Text", options: { text: "<p>Enter some text...</p>" } } }];
var ColumnsComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "columns", { get: function() {
    return this.props.columns || [];
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "gutterSize", { get: function() {
    return "number" == typeof this.props.space ? this.props.space || 0 : 20;
  }, enumerable: false, configurable: true }), t.prototype.getWidth = function(e2) {
    return this.columns[e2] && this.columns[e2].width || 100 / this.columns.length;
  }, t.prototype.getColumnWidth = function(e2) {
    var t2 = this.columns, n = this.gutterSize * (t2.length - 1) / t2.length;
    return "calc(".concat(this.getWidth(e2), "% - ").concat(n, "px)");
  }, t.prototype.render = function() {
    var e2, t2 = this, n = this.columns, i = this.gutterSize;
    return jsx(import_react3.default.Fragment, null, jsx("div", { className: "builder-columns", css: __assign2({ display: "flex" }, "never" !== this.props.stackColumnsAt && (e2 = {}, e2["@media (max-width: ".concat("tablet" !== this.props.stackColumnsAt ? 639 : 999, "px)")] = { flexDirection: this.props.reverseColumnsWhenStacked ? "column-reverse" : "column", alignItems: "stretch" }, e2)) }, n.map(function(e3, n2) {
      var r, o, a = e3.link ? Link : "div";
      return jsx(import_react3.default.Fragment, { key: n2 }, jsx(a, __assign2({ className: "builder-column" }, e3.link ? { href: e3.link } : null, { css: __assign2((r = { display: "flex", flexDirection: "column", alignItems: "stretch", lineHeight: "normal" }, r["& > .builder-blocks"] = { flexGrow: 1 }, r.width = t2.getColumnWidth(n2), r.marginLeft = 0 === n2 ? 0 : i, r), "never" !== t2.props.stackColumnsAt && (o = {}, o["@media (max-width: ".concat("tablet" !== t2.props.stackColumnsAt ? 639 : 999, "px)")] = { width: "100%", marginLeft: 0 }, o)) }), jsx(BuilderBlocks, { key: n2, child: true, parentElementId: t2.props.builderBlock && t2.props.builderBlock.id, blocks: e3.blocks, dataPath: "component.options.columns.".concat(n2, ".blocks") })));
    })));
  }, t;
}(import_react3.default.Component);
var Columns = withBuilder(ColumnsComponent, { name: "Columns", static: true, inputs: [{ name: "columns", type: "array", broadcast: true, subFields: [{ name: "blocks", type: "array", hideFromUI: true, defaultValue: defaultBlocks }, { name: "width", type: "number", hideFromUI: true, helperText: "Width %, e.g. set to 50 to fill half of the space" }, { name: "link", type: "url", helperText: "Optionally set a url that clicking this column will link to" }], defaultValue: [{ blocks: defaultBlocks }, { blocks: defaultBlocks }], onChange: function(e) {
  function t() {
    n.forEach(function(e2) {
      e2.delete("width");
    });
  }
  var n = e.get("columns");
  Array.isArray(n) && (!n.find(function(e2) {
    return e2.get("width");
  }) || (n.find(function(e2) {
    return !e2.get("width");
  }) || 100 !== n.reduce(function(e2, t2) {
    return e2 + t2.get("width");
  }, 0)) && t());
} }, { name: "space", type: "number", defaultValue: 20, helperText: "Size of gap between columns", advanced: true }, { name: "stackColumnsAt", type: "string", defaultValue: "tablet", helperText: "Convert horizontal columns to vertical at what device size", enum: ["tablet", "mobile", "never"], advanced: true }, { name: "reverseColumnsWhenStacked", type: "boolean", defaultValue: false, helperText: "When stacking columns for mobile devices, reverse the ordering", advanced: true }] });
var EmbedComponent = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.elementRef = null, t2.scriptsInserted = /* @__PURE__ */ new Set(), t2.scriptsRun = /* @__PURE__ */ new Set(), t2;
  }
  return __extends(t, e), t.prototype.componentDidUpdate = function(e2) {
    this.props.content !== e2.content && this.findAndRunScripts();
  }, t.prototype.componentDidMount = function() {
    this.findAndRunScripts();
  }, t.prototype.findAndRunScripts = function() {
    if (this.elementRef && "undefined" != typeof window) for (var e2 = this.elementRef.getElementsByTagName("script"), t2 = 0; t2 < e2.length; t2++) {
      var n = e2[t2];
      if (n.src) {
        if (this.scriptsInserted.has(n.src)) continue;
        this.scriptsInserted.add(n.src);
        var i = document.createElement("script");
        i.async = true, i.src = n.src, document.head.appendChild(i);
      } else {
        if (this.scriptsRun.has(n.innerText)) continue;
        this.scriptsRun.add(n.innerText);
        try {
          new Function(n.innerText)();
        } catch (e3) {
          console.warn("Builder custom code component error:", e3);
        }
      }
    }
  }, Object.defineProperty(t.prototype, "content", { get: function() {
    return Builder.isServer ? (this.props.content || "").replace(/<script[\s\S]*?<\/script>/g, "") : this.props.content;
  }, enumerable: false, configurable: true }), t.prototype.render = function() {
    var e2 = this;
    return import_react3.default.createElement("div", { ref: function(t2) {
      return e2.elementRef = t2;
    }, className: "builder-embed", dangerouslySetInnerHTML: { __html: this.content } });
  }, t;
}(import_react3.default.Component);
var Embed = withBuilder(EmbedComponent, { name: "Embed", static: true, inputs: [{ name: "url", type: "url", required: true, defaultValue: "", helperText: "e.g. enter a youtube url, google map, etc", onChange: function(e) {
  var t = e.get("url");
  if (t) {
    e.set("content", "Loading...");
    return fetch("https://iframe.ly/api/iframely?url=".concat(t, "&api_key=").concat("ae0e60e78201a3f2b0de4b")).then(function(e2) {
      return e2.json();
    }).then(function(n) {
      e.get("url") === t && (n.html ? e.set("content", n.html) : e.set("content", "Invalid url, please try another"));
    }).catch(function(t2) {
      e.set("content", "There was an error embedding this URL, please try again or another URL");
    });
  }
  e.delete("content");
} }, { name: "content", type: "html", defaultValue: '<div style="padding: 20px; text-align: center">(Choose an embed URL)<div>', hideFromUI: true }] });
var globalReplaceNodes = {};
var isShopify$1 = Builder.isBrowser && "Shopify" in window;
if (Builder.isBrowser && globalReplaceNodes) {
  customCodeQuerySelector_1 = ".builder-custom-code";
  try {
    allCustomCodeElements_1 = Array.from(document.querySelectorAll(customCodeQuerySelector_1)), builderTemplates = document.querySelectorAll("template[data-template-variant-id]");
    builderTemplates.length && Array.from(builderTemplates).forEach(function(e) {
      var t = e.content.querySelectorAll(customCodeQuerySelector_1);
      t.length && (allCustomCodeElements_1 = allCustomCodeElements_1.concat(Array.from(t)));
    }), allCustomCodeElements_1.forEach(function(e) {
      var t = e.parentElement, n = t && t.getAttribute("builder-id");
      n && (globalReplaceNodes[n] = globalReplaceNodes[n] || [], globalReplaceNodes[n].push(isShopify$1 ? e : e.cloneNode(true)));
    });
  } catch (e) {
    console.error("Builder replace nodes error:", e);
  }
}
var customCodeQuerySelector_1;
var allCustomCodeElements_1;
var builderTemplates;
var CustomCodeComponent = function(e) {
  function t(t2) {
    var n, i = this;
    if ((i = e.call(this, t2) || this).elementRef = null, i.originalRef = null, i.scriptsInserted = /* @__PURE__ */ new Set(), i.scriptsRun = /* @__PURE__ */ new Set(), i.firstLoad = true, i.replaceNodes = false, i.state = { hydrated: false }, Builder.isBrowser) {
      var r = null === (n = i.props.builderBlock) || void 0 === n ? void 0 : n.id;
      if (i.replaceNodes = Boolean(Builder.isBrowser && (t2.replaceNodes || isShopify$1) && r && (null == globalReplaceNodes ? void 0 : globalReplaceNodes[r])), i.firstLoad && i.props.builderBlock) {
        if (r && (null == globalReplaceNodes ? void 0 : globalReplaceNodes[r])) {
          var o = globalReplaceNodes[r].shift() || null;
          i.originalRef = o, 0 === globalReplaceNodes[r].length && delete globalReplaceNodes[r];
        } else if (i.replaceNodes) {
          var a = document.querySelectorAll(".".concat(i.props.builderBlock.id, " .builder-custom-code"));
          if (1 === a.length) {
            var s = a[0];
            i.originalRef = s, i.originalRef.remove();
          }
        }
      }
    }
    return i;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "noReactRender", { get: function() {
    var e2;
    return Boolean(isShopify$1 && (null === (e2 = this.props.code) || void 0 === e2 ? void 0 : e2.match(/{[{%]/g)));
  }, enumerable: false, configurable: true }), Object.defineProperty(t.prototype, "isHydrating", { get: function() {
    return !isShopify$1 && this.originalRef;
  }, enumerable: false, configurable: true }), t.prototype.componentDidUpdate = function(e2) {
    this.props.code !== e2.code && this.findAndRunScripts();
  }, t.prototype.componentDidMount = function() {
    var e2 = this;
    this.firstLoad = false, this.replaceNodes || (this.isHydrating ? (this.setState({ hydrated: true }), Builder.nextTick(function() {
      return e2.findAndRunScripts();
    })) : this.findAndRunScripts()), Builder.isBrowser && this.replaceNodes && this.originalRef && this.elementRef && this.elementRef.appendChild(this.originalRef);
  }, t.prototype.findAndRunScripts = function() {
    if (this.elementRef && "undefined" != typeof window) for (var e2 = this.elementRef.getElementsByTagName("script"), t2 = 0; t2 < e2.length; t2++) {
      var n = e2[t2];
      if (n.src) {
        if (this.scriptsInserted.has(n.src)) continue;
        this.scriptsInserted.add(n.src);
        var i = document.createElement("script");
        i.async = true, i.src = n.src, document.head.appendChild(i);
      } else if (!n.type || ["text/javascript", "application/javascript", "application/ecmascript"].includes(n.type)) {
        if (this.scriptsRun.has(n.innerText)) continue;
        try {
          this.scriptsRun.add(n.innerText), new Function(n.innerText)();
        } catch (e3) {
          console.warn("Builder custom code component error:", e3);
        }
      }
    }
  }, Object.defineProperty(t.prototype, "code", { get: function() {
    return (Builder.isServer || this.isHydrating && this.firstLoad) && this.props.scriptsClientOnly ? (this.props.code || "").replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, "") : this.props.code;
  }, enumerable: false, configurable: true }), t.prototype.render = function() {
    var e2 = this;
    return import_react3.default.createElement("div", __assign2({ ref: function(t2) {
      return e2.elementRef = t2;
    }, className: "builder-custom-code" }, !this.replaceNodes && !this.noReactRender && { dangerouslySetInnerHTML: { __html: this.code } }));
  }, t;
}(import_react3.default.Component);
var CustomCode = withBuilder(CustomCodeComponent, { name: "Custom Code", static: true, requiredPermissions: ["editCode"], inputs: [{ name: "code", type: "html", required: true, defaultValue: "<p>Hello there, I am custom HTML code!</p>", code: true }, __assign2({ name: "replaceNodes", type: "boolean", helperText: "Preserve server rendered dom nodes", advanced: true }, isShopify$1 && { defaultValue: true }), __assign2({ name: "scriptsClientOnly", type: "boolean", helperText: "Only print and run scripts on the client. Important when scripts influence DOM that could be replaced when client loads", advanced: true }, !isShopify$1 && { defaultValue: true })] });
function removeProtocol(e) {
  return e.replace(/http(s)?:/, "");
}
function isElementInViewport(e) {
  var t = e.getBoundingClientRect();
  return t.top >= 0 && t.left >= 0 && t.bottom <= (window.innerHeight || document.documentElement.clientHeight) && t.right <= (window.innerWidth || document.documentElement.clientWidth);
}
function getShopifyImageUrl(e, t) {
  if (!e || !(null == e ? void 0 : e.match(/cdn\.shopify\.com/)) || !t) return e;
  if ("master" === t) return removeProtocol(e);
  var n = e.match(/(_\d+x(\d+)?)?(\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?)/i);
  if (n) {
    var i = e.split(n[0]), r = n[3], o = t.match("x") ? t : "".concat(t, "x");
    return removeProtocol("".concat(i[0], "_").concat(o).concat(r));
  }
  return null;
}
var DEFAULT_ASPECT_RATIO$1 = 0.7041;
function updateQueryParam(e, t, n) {
  void 0 === e && (e = "");
  var i = new RegExp("([?&])" + t + "=.*?(&|$)", "i"), r = -1 !== e.indexOf("?") ? "&" : "?";
  return e.match(i) ? e.replace(i, "$1" + t + "=" + encodeURIComponent(n) + "$2") : e + r + t + "=" + encodeURIComponent(n);
}
function getSrcSet(e) {
  if (!e) return e;
  var t = [100, 200, 400, 800, 1200, 1600, 2e3];
  if (e.match(/builder\.io/)) {
    var n = e, i = Number(e.split("?width=")[1]);
    return isNaN(i) || (n = "".concat(n, " ").concat(i, "w")), t.filter(function(e2) {
      return e2 !== i;
    }).map(function(t2) {
      return "".concat(updateQueryParam(e, "width", t2), " ").concat(t2, "w");
    }).concat([n]).join(", ");
  }
  return e.match(/cdn\.shopify\.com/) ? t.map(function(t2) {
    return [getShopifyImageUrl(e, "".concat(t2, "x").concat(t2)), t2];
  }).filter(function(e2) {
    return !!e2[0];
  }).map(function(e2) {
    var t2 = e2[0], n2 = e2[1];
    return "".concat(t2, " ").concat(n2, "w");
  }).concat([e]).join(", ") : e;
}
var getSizes = function(e, t) {
  var n, i, r, o, a, s, l, u, d = "";
  if (e) {
    var c = e.split(","), p = c.length;
    d = c.map(function(e2, t2) {
      return p === t2 + 1 ? e2.replace(/\([\s\S]*?\)/g, "").trim() : e2;
    }).join(", ");
  } else if (t && t.responsiveStyles) {
    var f = [], m = false, h = /^\d+/;
    if (null === (r = null === (i = null === (n = t.responsiveStyles) || void 0 === n ? void 0 : n.small) || void 0 === i ? void 0 : i.width) || void 0 === r ? void 0 : r.match(h)) {
      m = true;
      var g = "".concat("(max-width: 639px)", " ").concat(t.responsiveStyles.small.width.replace("%", "vw"));
      f.push(g);
    }
    if (null === (s = null === (a = null === (o = t.responsiveStyles) || void 0 === o ? void 0 : o.medium) || void 0 === a ? void 0 : a.width) || void 0 === s ? void 0 : s.match(h)) {
      m = true;
      g = "".concat("(max-width: 999px)", " ").concat(t.responsiveStyles.medium.width.replace("%", "vw"));
      f.push(g);
    }
    if (null === (u = null === (l = t.responsiveStyles) || void 0 === l ? void 0 : l.large) || void 0 === u ? void 0 : u.width) {
      var v = t.responsiveStyles.large.width.replace("%", "vw");
      f.push(v);
    } else m && f.push("100vw");
    f.length && (d = f.join(", "));
  }
  return d;
};
var ImageComponent = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.state = { imageLoaded: !t2.useLazyLoading, load: !t2.useLazyLoading }, t2.pictureRef = null, t2.scrollListener = null, t2.intersectionObserver = null, t2;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "useLazyLoading", { get: function() {
    return (!Builder.isBrowser || !location.search.includes("builder.lazyLoadImages=false")) && (!(!Builder.isBrowser || !location.href.includes("builder.lazyLoadImages=true")) || this.props.lazy);
  }, enumerable: false, configurable: true }), t.prototype.componentWillUnmount = function() {
    Builder.isBrowser && (this.scrollListener && (window.removeEventListener("scroll", this.scrollListener), this.scrollListener = null), this.intersectionObserver && this.pictureRef && this.intersectionObserver.unobserve(this.pictureRef));
  }, t.prototype.componentDidMount = function() {
    var e2 = this;
    if (this.props.lazy && Builder.isBrowser) if (this.pictureRef && isElementInViewport(this.pictureRef)) this.setState({ load: true });
    else if ("function" == typeof IntersectionObserver && this.pictureRef) {
      (this.intersectionObserver = new IntersectionObserver(function(t3, n) {
        t3.forEach(function(t4) {
          t4.intersectionRatio > 0 && (e2.setState({ load: true }), e2.pictureRef && n.unobserve(e2.pictureRef));
        });
      })).observe(this.pictureRef);
    } else {
      var t2 = throttle2(function(n) {
        if (e2.pictureRef) {
          var i = e2.pictureRef.getBoundingClientRect(), r = window.innerHeight / 2;
          i.top < window.innerHeight + r && (e2.setState(__assign2(__assign2({}, e2.state), { load: true })), window.removeEventListener("scroll", t2), e2.scrollListener = null);
        }
      }, 400, { leading: false, trailing: true });
      this.scrollListener = t2, window.addEventListener("scroll", t2, { capture: true, passive: true }), t2();
    }
  }, Object.defineProperty(t.prototype, "image", { get: function() {
    return this.props.image || this.props.src;
  }, enumerable: false, configurable: true }), t.prototype.getSrcSet = function() {
    var e2 = this.image;
    if (e2 && (e2.match(/builder\.io/) || e2.match(/cdn\.shopify\.com/))) return getSrcSet(e2);
  }, t.prototype.render = function() {
    var e2, t2 = this, n = this.props, i = n.aspectRatio, r = n.lazy, o = this.props.builderBlock && this.props.builderBlock.children, a = this.props.srcset, s = getSizes(this.props.sizes, this.props.builderBlock), l = this.image;
    a && l && l.includes("builder.io/api/v1/image") ? a.includes(l.split("?")[0]) || (console.debug("Removed given srcset"), a = this.getSrcSet()) : l && !a && (a = this.getSrcSet());
    var u = null === (e2 = this.props.builderBlock) || void 0 === e2 ? void 0 : e2.id.startsWith("builder-pixel-"), d = this.props.fitContent;
    return jsx(BuilderMetaContext.Consumer, null, function(e3) {
      var n2, l2 = e3.ampMode, c = l2 ? "amp-img" : "img", p = (!r || t2.state.load || l2) && jsx(c, __assign2({}, l2 ? { layout: "responsive", height: t2.props.height || (i ? Math.round(1e3 * i) : void 0), width: t2.props.width || (i ? Math.round(1e3 / i) : void 0) } : null, { alt: t2.props.altText, key: Builder.isEditing && "string" == typeof t2.image && t2.image.split("?")[0] || void 0, role: t2.props.altText ? void 0 : "presentation", css: __assign2(__assign2({ opacity: l2 ? 1 : t2.useLazyLoading && !t2.state.imageLoaded ? 0 : 1, transition: "opacity 0.2s ease-in-out", objectFit: t2.props.backgroundSize || "cover", objectPosition: t2.props.backgroundPosition || "center" }, i && !l2 && { position: "absolute", height: "100%", width: "100%", left: 0, top: 0 }), l2 && (n2 = {}, n2["& img"] = { objectFit: t2.props.backgroundSize, objectPosition: t2.props.backgroundPosition }, n2)), loading: u ? "eager" : "lazy", className: "builder-image" + (t2.props.className ? " " + t2.props.className : ""), src: t2.image }, !l2 && { onLoad: function() {
        return t2.setState({ imageLoaded: true });
      } }, { srcSet: a, sizes: !l2 && s ? s : void 0 }));
      return jsx(import_react3.default.Fragment, null, l2 ? p : jsx("picture", { ref: function(e4) {
        return t2.pictureRef = e4;
      } }, a && a.match(/builder\.io/) && !t2.props.noWebp && jsx("source", { srcSet: a.replace(/\?/g, "?format=webp&"), type: "image/webp" }), p), !i || l2 || d && o && o.length ? null : jsx("div", { className: "builder-image-sizer", css: { width: "100%", paddingTop: 100 * i + "%", pointerEvents: "none", fontSize: 0 } }, " "), o && o.length ? d ? o.map(function(e4, t3) {
        return jsx(BuilderBlock$1, { key: e4.id, block: e4 });
      }) : jsx("div", { css: { display: "flex", flexDirection: "column", alignItems: "stretch", position: "absolute", top: 0, left: 0, width: "100%", height: "100%" } }, o.map(function(e4, t3) {
        return jsx(BuilderBlock$1, { key: e4.id, block: e4 });
      })) : null);
    });
  }, t;
}(import_react3.default.Component);
var Image = withBuilder(ImageComponent, { name: "Image", static: true, image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4", defaultStyles: { position: "relative", minHeight: "20px", minWidth: "20px", overflow: "hidden" }, canHaveChildren: true, inputs: [{ name: "image", type: "file", bubble: true, allowedFileTypes: ["jpeg", "jpg", "png", "svg"], required: true, defaultValue: "https://cdn.builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d", onChange: function(e) {
  e.delete("srcset"), e.delete("noWebp");
  var t, n, i = e.get("image"), r = e.get("aspectRatio");
  if (fetch(i).then(function(e2) {
    return e2.blob();
  }).then(function(t2) {
    t2.type.includes("svg") && e.set("noWebp", true);
  }), i && (!r || 0.7041 === r)) return (t = i, void 0 === n && (n = 6e4), new Promise(function(e2, i2) {
    var r2 = document.createElement("img"), o = false;
    r2.onload = function() {
      o = true, e2(r2);
    }, r2.addEventListener("error", function(e3) {
      console.warn("Image load failed", e3.error), i2(e3.error);
    }), r2.src = t, setTimeout(function() {
      o || i2(new Error("Image load timed out"));
    }, n);
  })).then(function(t2) {
    var n2, r2 = e.get("aspectRatio");
    e.get("image") !== i || r2 && 0.7041 !== r2 || t2.width && t2.height && (e.set("aspectRatio", (n2 = t2.height / t2.width, Math.round(1e3 * n2) / 1e3)), e.set("height", t2.height), e.set("width", t2.width));
  });
} }, { name: "backgroundSize", type: "text", defaultValue: "cover", enum: [{ label: "contain", value: "contain", helperText: "The image should never get cropped" }, { label: "cover", value: "cover", helperText: "The image should fill its box, cropping when needed" }] }, { name: "backgroundPosition", type: "text", defaultValue: "center", enum: ["center", "top", "left", "right", "bottom", "top left", "top right", "bottom left", "bottom right"] }, { name: "altText", type: "string", helperText: "Text to display when the user has images off" }, { name: "height", type: "number", hideFromUI: true }, { name: "width", type: "number", hideFromUI: true }, { name: "sizes", type: "string", hideFromUI: true }, { name: "srcset", type: "string", hideFromUI: true }, { name: "lazy", type: "boolean", defaultValue: true, hideFromUI: true }, { name: "fitContent", type: "boolean", helperText: "When child blocks are provided, fit to them instead of using the image's aspect ratio", defaultValue: true }, { name: "aspectRatio", type: "number", helperText: "This is the ratio of height/width, e.g. set to 1.5 for a 300px wide and 200px tall photo. Set to 0 to not force the image to maintain it's aspect ratio", advanced: true, defaultValue: DEFAULT_ASPECT_RATIO$1 }] });
var DEFAULT_ASPECT_RATIO = 0.7004048582995948;
var VideoComponent = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.video = null, t2.containerRef = null, t2.scrollListener = null, t2.state = { load: !t2.lazyLoad }, t2;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "lazyLoad", { get: function() {
    return false !== this.props.lazyLoad;
  }, enumerable: false, configurable: true }), t.prototype.updateVideo = function() {
    var e2 = this, t2 = this.video;
    if (t2) {
      ["muted", "playsInline", "autoPlay"].forEach(function(n) {
        var i = n.toLowerCase();
        e2.props[n] ? t2.setAttribute(i, i) : t2.removeAttribute(i);
      });
    }
  }, t.prototype.componentDidUpdate = function() {
    this.updateVideo();
  }, t.prototype.componentDidMount = function() {
    var e2 = this;
    if (this.updateVideo(), this.lazyLoad && Builder.isBrowser) {
      var t2 = throttle2(function(n) {
        if (e2.containerRef) {
          var i = e2.containerRef.getBoundingClientRect(), r = window.innerHeight / 2;
          i.top < window.innerHeight + r && (e2.setState(function(e3) {
            return __assign2(__assign2({}, e3), { load: true });
          }), window.removeEventListener("scroll", t2), e2.scrollListener = null);
        }
      }, 400, { leading: false, trailing: true });
      this.scrollListener = t2, window.addEventListener("scroll", t2, { capture: true, passive: true }), t2();
    }
  }, t.prototype.componentWillUnmount = function() {
    Builder.isBrowser && this.scrollListener && (window.removeEventListener("scroll", this.scrollListener), this.scrollListener = null);
  }, t.prototype.render = function() {
    var e2 = this, t2 = this.props, n = t2.aspectRatio, i = t2.children;
    return jsx("div", { ref: function(t3) {
      return e2.containerRef = t3;
    }, css: { position: "relative" } }, jsx("video", { key: this.props.video || "no-src", poster: this.props.posterImage, ref: function(t3) {
      return e2.video = t3;
    }, autoPlay: this.props.autoPlay, muted: this.props.muted, controls: this.props.controls, loop: this.props.loop, className: "builder-video", css: __assign2({ width: "100%", height: "100%", objectFit: this.props.fit, objectPosition: this.props.position, zIndex: 2, borderRadius: 1 }, n ? { position: "absolute" } : null) }, (!this.lazyLoad || this.state.load) && jsx("source", { type: "video/mp4", src: this.props.video })), !n || this.props.fitContent && i ? null : jsx("div", { css: { width: "100%", paddingTop: 100 * n + "%", pointerEvents: "none", fontSize: 0 } }), i && this.props.fitContent ? jsx("div", { css: { display: "flex", flexDirection: "column", alignItems: "stretch" } }, i) : i ? jsx("div", { css: { pointerEvents: "none", display: "flex", flexDirection: "column", alignItems: "stretch", position: "absolute", top: 0, left: 0, width: "100%", height: "100%" } }, i) : null);
  }, t;
}(import_react3.default.Component);
var Video = Builder.registerComponent(withChildren(VideoComponent), { name: "Video", canHaveChildren: true, defaultStyles: { minHeight: "20px", minWidth: "20px" }, image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-videocam-24px%20(1).svg?alt=media&token=49a84e4a-b20e-4977-a650-047f986874bb", inputs: [{ name: "video", type: "file", allowedFileTypes: ["mp4"], bubble: true, defaultValue: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/assets%2FKQlEmWDxA0coC3PK6UvkrjwkIGI2%2F28cb070609f546cdbe5efa20e931aa4b?alt=media&token=912e9551-7a7c-4dfb-86b6-3da1537d1a7f", required: true }, { name: "posterImage", type: "file", allowedFileTypes: ["jpeg", "png"], helperText: "Image to show before the video plays" }, { name: "autoPlay", type: "boolean", defaultValue: true }, { name: "controls", type: "boolean", defaultValue: false }, { name: "muted", type: "boolean", defaultValue: true }, { name: "loop", type: "boolean", defaultValue: true }, { name: "playsInline", type: "boolean", defaultValue: true }, { name: "fit", type: "text", defaultValue: "cover", enum: ["contain", "cover", "fill", "auto"] }, { name: "fitContent", type: "boolean", helperText: "When child blocks are provided, fit to them instead of using the aspect ratio", defaultValue: true, advanced: true }, { name: "position", type: "text", defaultValue: "center", enum: ["center", "top", "left", "right", "bottom", "top left", "top right", "bottom left", "bottom right"] }, { name: "height", type: "number", advanced: true }, { name: "width", type: "number", advanced: true }, { name: "aspectRatio", type: "number", advanced: true, defaultValue: DEFAULT_ASPECT_RATIO }, { name: "lazyLoad", type: "boolean", helperText: 'Load this video "lazily" - as in only when a user scrolls near the video. Recommended for optmized performance and bandwidth consumption', defaultValue: true, advanced: true }] });
var size2 = function(e) {
  return Object.keys(e).length;
};
var isShopify = Builder.isBrowser && "Shopify" in window;
var refs = {};
if (Builder.isBrowser) try {
  Array.from(document.querySelectorAll("[builder-static-symbol]")).forEach(function(e) {
    var t = e.getAttribute("builder-static-symbol");
    t && (refs[t] = e);
  });
} catch (e) {
  console.error("Builder replace nodes error:", e);
}
var SymbolComponent = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.ref = null, t2.staticRef = null, t2;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "placeholder", { get: function() {
    return jsx("div", { css: { padding: 10 } }, "Symbols let you reuse dynamic elements across your content. Please choose a model and entry for this symbol.");
  }, enumerable: false, configurable: true }), t.prototype.componentDidMount = function() {
    var e2, t2, n;
    this.useStatic && this.staticRef && refs[null === (e2 = this.props.builderBlock) || void 0 === e2 ? void 0 : e2.id] && (null === (t2 = this.staticRef.parentNode) || void 0 === t2 || t2.replaceChild(refs[null === (n = this.props.builderBlock) || void 0 === n ? void 0 : n.id], this.staticRef));
  }, Object.defineProperty(t.prototype, "useStatic", { get: function() {
    var e2;
    return Boolean(Builder.isBrowser && refs[null === (e2 = this.props.builderBlock) || void 0 === e2 ? void 0 : e2.id] && !(Builder.isEditing || Builder.isPreviewing));
  }, enumerable: false, configurable: true }), t.prototype.render = function() {
    var e2, t2 = this;
    if (this.useStatic) return jsx("div", { ref: function(e3) {
      return t2.staticRef = e3;
    } });
    var n = this.props.symbol, i = false;
    n || (i = true);
    var r = this.props.dataOnly ? NoWrap : this.props.builderBlock && this.props.builderBlock.tagName || "div", o = n || {}, a = o.model, s = o.entry, l = o.data, u = o.content, d = o.inline, c = (null == n ? void 0 : n.dynamic) || this.props.dynamic;
    a && (s || c) || (null === (e2 = null == u ? void 0 : u.data) || void 0 === e2 ? void 0 : e2.blocksJs) || d || (i = true);
    var p = c ? void 0 : [a, s].join(":"), f = Builder.isEditing ? null : l && size2(l) && (0, import_hash_sum2.default)(l);
    p && f && f.length < 300 && (p += ":" + f);
    var m = this.props.attributes || {};
    return jsx(BuilderStoreContext.Consumer, { key: (a || "no model") + ":" + (s || "no entry") }, function(e3) {
      var o2, d2, c2, f2, h, g, v, b, y;
      return jsx(r, __assign2({ "data-model": a }, m, { className: (m.class || m.className || "") + " builder-symbol" + ((null == n ? void 0 : n.inline) ? " builder-inline-symbol" : "") + ((null == n ? void 0 : n.dynamic) || t2.props.dynamic ? " builder-dynamic-symbol" : "") }), i ? t2.placeholder : jsx(BuilderComponent2, __assign2({ isChild: true, ref: function(e4) {
        return t2.ref = e4;
      }, context: __assign2(__assign2({}, e3.context), { symbolId: null === (o2 = t2.props.builderBlock) || void 0 === o2 ? void 0 : o2.id }), modelName: a, entry: s, data: __assign2(__assign2(__assign2({}, l), !!t2.props.inheritState && e3.state), null === (v = null === (g = null === (h = null === (f2 = null === (c2 = null === (d2 = t2.props.builderBlock) || void 0 === d2 ? void 0 : d2.component) || void 0 === c2 ? void 0 : c2.options) || void 0 === f2 ? void 0 : f2.symbol) || void 0 === h ? void 0 : h.content) || void 0 === g ? void 0 : g.data) || void 0 === v ? void 0 : v.state), renderLink: e3.renderLink, inlineContent: null == n ? void 0 : n.inline }, u && { content: u }, { options: { key: p, noEditorUpdates: true }, codegen: !!(null === (b = null == u ? void 0 : u.data) || void 0 === b ? void 0 : b.blocksJs), hydrate: null === (y = e3.state) || void 0 === y ? void 0 : y._hydrate, builderBlock: t2.props.builderBlock, dataOnly: t2.props.dataOnly }), t2.props.children));
    });
  }, t;
}(import_react3.default.Component);
var Symbol$1 = withBuilder(SymbolComponent, { name: "Symbol", noWrap: true, static: true, inputs: [{ name: "symbol", type: "uiSymbol" }, { name: "dataOnly", helperText: "Make this a data symbol that doesn't display any UI", type: "boolean", defaultValue: false, advanced: true, hideFromUI: true }, { name: "inheritState", helperText: "Inherit the parent component state and data", type: "boolean", defaultValue: isShopify, advanced: true }, { name: "renderToLiquid", helperText: "Render this symbols contents to liquid. Turn off to fetch with javascript and use custom targeting", type: "boolean", defaultValue: isShopify, advanced: true, hideFromUI: true }, { name: "useChildren", hideFromUI: true, type: "boolean" }] });
var ButtonComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    var e2 = this.props.link ? Link : "span";
    return import_react3.default.createElement(e2, __assign2({ role: "button", href: this.props.link, target: this.props.openLinkInNewTab ? "_blank" : void 0 }, this.props.attributes), this.props.text);
  }, t;
}(import_react3.default.Component);
var Button = withBuilder(ButtonComponent, { name: "Core:Button", image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F81a15681c3e74df09677dfc57a615b13", defaultStyles: { appearance: "none", paddingTop: "15px", paddingBottom: "15px", paddingLeft: "25px", paddingRight: "25px", backgroundColor: "#000000", color: "white", borderRadius: "4px", textAlign: "center", cursor: "pointer" }, inputs: [{ name: "text", type: "text", defaultValue: "Click me!", bubble: true }, { name: "link", type: "url", bubble: true }, { name: "openLinkInNewTab", type: "boolean", defaultValue: false, friendlyName: "Open link in new tab" }], static: true, noWrap: true });
var SectionComponent = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.ref = null, t2.unmountCallbacks = [], t2.state = { inView: false }, t2;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "renderContents", { get: function() {
    return true !== this.props.lazyLoad || this.state.inView;
  }, enumerable: false, configurable: true }), t.prototype.componentWillUnmount = function() {
    this.unmountCallbacks.forEach(function(e2) {
      return e2();
    });
  }, t.prototype.componentDidMount = function() {
    var e2 = this;
    if (this.props.lazyLoad) if ("undefined" != typeof IntersectionObserver && this.ref) {
      var t2 = new IntersectionObserver(function(t3, n) {
        t3.forEach(function(t4) {
          t4.intersectionRatio > 0 && (e2.setState({ inView: true }), e2.ref && n.unobserve(e2.ref));
        });
      });
      t2.observe(this.ref), this.unmountCallbacks.push(function() {
        e2.ref && t2.unobserve(e2.ref);
      });
    } else this.setState({ inView: true });
  }, t.prototype.render = function() {
    var e2 = this;
    return jsx("section", { ref: function(t2) {
      return e2.ref = t2;
    }, css: __assign2({ width: "100%", alignSelf: "stretch", flexGrow: 1, boxSizing: "border-box", maxWidth: this.props.maxWidth, display: "flex", flexDirection: "column", alignItems: "stretch", marginLeft: "auto", marginRight: "auto" }, this.renderContents ? null : this.props.lazyStyles) }, this.renderContents ? jsx(import_react3.default.Fragment, null, this.props.children, this.props.builderBlock && this.props.builderBlock.children && this.props.builderBlock.children.map(function(e3, t2) {
      return jsx(BuilderBlock$1, { key: e3.id, block: e3 });
    })) : null);
  }, t;
}(import_react3.default.Component);
var Section = withBuilder(SectionComponent, { name: "Core:Section", static: true, image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F682efef23ace49afac61748dd305c70a", inputs: [{ name: "maxWidth", type: "number", defaultValue: 1200 }, { name: "lazyLoad", type: "boolean", defaultValue: false, advanced: true, description: "Only render this section when in view" }], defaultStyles: { paddingLeft: "20px", paddingRight: "20px", paddingTop: "50px", paddingBottom: "50px", marginTop: "0px", width: "100vw", marginLeft: "calc(50% - 50vw)" }, canHaveChildren: true, defaultChildren: [{ "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { textAlign: "center" } }, component: { name: "Text", options: { text: "<p><b>I am a section! My content keeps from getting too wide, so that it's easy to read even on big screens.</b></p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur</p>" } } }] });
var StateProviderComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    var e2 = this;
    return import_react3.default.createElement(BuilderStoreContext.Consumer, null, function(t2) {
      return import_react3.default.createElement(BuilderStoreContext.Provider, { value: __assign2(__assign2({}, t2), { state: __assign2(__assign2({}, t2.state), e2.props.state), context: __assign2(__assign2({}, t2.context), e2.props.context) }) }, e2.props.builderBlock && e2.props.builderBlock.children && e2.props.builderBlock.children.map(function(e3, t3) {
        return import_react3.default.createElement(BuilderBlock$1, { block: e3, key: e3.id, index: t3, child: true });
      }), e2.props.children);
    });
  }, t;
}(import_react3.default.Component);
var StateProvider = withBuilder(StateProviderComponent, { name: "Builder:StateProvider", canHaveChildren: true, static: true, noWrap: true, hideFromInsertMenu: true });
var prefetched = /* @__PURE__ */ new Set();
function searchToObject(e) {
  var t = (e.search || "").substring(1).split("&"), n = {};
  for (var i in t) if (t[i] && "string" == typeof t[i]) {
    var r = t[i].split("=");
    n[decodeURIComponent(r[0])] = decodeURIComponent(r[1]);
  }
  return n;
}
var RouterComponent = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.builder = builder, t2.routed = false, t2.preloadQueue = 0, t2.onPopState = function(e2) {
      t2.updateLocationState();
    }, t2.onMouseOverOrTouchStart = function(e2) {
      if (!(t2.preloadQueue > 4) && false !== t2.props.preloadOnHover) {
        var n = t2.findHrefTarget(e2);
        if (n) {
          var i = n.getAttribute("href");
          if (i) {
            if (!t2.isRelative(i)) {
              var r = t2.convertToRelative(i);
              if (!r) return;
              i = r;
            }
            if (!i.startsWith("#") && !prefetched.has(i)) {
              prefetched.add(i);
              var o = t2.parseUrl(i);
              t2.preloadQueue++;
              var a = builder.getUserAttributes();
              a.urlPath = o.pathname, a.queryString = o.search;
              var s = builder.get(t2.model, { userAttributes: a, key: t2.model + ":" + o.pathname + o.search }).subscribe(function() {
                t2.preloadQueue--, s.unsubscribe();
              });
            }
          }
        }
      }
    }, t2.onClick = function(e2) {
      return __awaiter(t2, void 0, void 0, function() {
        var t3, n, i, r;
        return __generator(this, function(o) {
          if (false === this.props.handleRouting) return [2];
          if (0 !== e2.button || e2.ctrlKey || e2.defaultPrevented || e2.metaKey) return [2];
          if (!(t3 = this.findHrefTarget(e2))) return [2];
          if (t3.target && "_client" !== t3.target) return [2];
          if (!(n = t3.getAttribute("href"))) return [2];
          if (this.props.onRoute && (i = { url: n, anchorNode: t3, preventDefault: function() {
            this.defaultPrevented = true;
          }, defaultPrevented: false }, this.props.onRoute(i), i.defaultPrevented)) return [2];
          if (!this.isRelative(n)) {
            if (!(r = this.convertToRelative(n))) return [2];
            n = r;
          }
          return n.startsWith("#") || (e2.preventDefault(), this.route(n)), [2];
        });
      });
    }, t2.privateState = null, t2;
  }
  return __extends(t, e), t.prototype.route = function(e2) {
    var t2;
    return this.routed = true, "function" == typeof (null === (t2 = window.history) || void 0 === t2 ? void 0 : t2.pushState) ? (history.pushState(null, "", e2), this.updateLocationState(), true) : (location.href = e2, false);
  }, t.prototype.updateLocationState = function() {
    this.privateState && this.privateState.update(function(e2) {
      e2.location = __assign2(__assign2({}, e2.location), { pathname: location.pathname, search: location.search, path: location.pathname.split("/").slice(1), query: searchToObject(location) });
    });
  }, Object.defineProperty(t.prototype, "model", { get: function() {
    return this.props.model || "page";
  }, enumerable: false, configurable: true }), t.prototype.componentDidMount = function() {
    "undefined" != typeof document && (document.addEventListener("click", this.onClick), window.addEventListener("popstate", this.onPopState), document.addEventListener("mouseover", this.onMouseOverOrTouchStart), document.addEventListener("touchstart", this.onMouseOverOrTouchStart));
  }, t.prototype.componentWillUnmount = function() {
    "undefined" != typeof document && (document.removeEventListener("click", this.onClick), document.removeEventListener("mouseover", this.onMouseOverOrTouchStart), window.removeEventListener("popstate", this.onPopState), document.removeEventListener("touchstart", this.onMouseOverOrTouchStart));
  }, t.prototype.render = function() {
    var e2 = this, t2 = this.model;
    return jsx(BuilderStoreContext.Consumer, null, function(n) {
      e2.privateState = n;
      var i = n.state && n.state.location && n.state.location.pathname + n.state.location.search;
      return jsx("div", { className: "builder-router", "data-model": t2 }, jsx("style", null, "\n                @keyframes builderLoadingSpinner {\n                  0% {\n                    transform: rotate(0deg);\n                  }\n                  100% {\n                    transform: rotate(360deg);\n                  }\n                }\n                /* TODO: overridable tag */\n                .builder-page-loading {\n                  -webkit-animation: builderLoadingSpinner 1s infinite linear;\n                  animation: builderLoadingSpinner 1s infinite linear;\n                  -webkit-transform: translateZ(0);\n                  transform: translateZ(0);\n                  border-radius: 50%;\n                  width: 36px;\n                  height: 36px;\n                  margin: 6px auto;\n                  position: relative;\n                  border: 1px solid transparent;\n                  border-left: 1px solid #808284;\n                }\n              "), jsx(BuilderComponent2, { key: i, data: e2.props.data, content: e2.routed ? void 0 : e2.props.content, modelName: t2, options: { key: Builder.isEditing ? void 0 : e2.model + ":" + i } }, e2.props.children || jsx("div", { css: { display: "flex" } }, jsx("div", { css: { margin: "40vh auto" }, className: "builder-page-loading" }))));
    });
  }, t.prototype.findHrefTarget = function(e2) {
    for (var t2 = e2.target; t2; ) {
      if (t2 instanceof HTMLAnchorElement && t2.getAttribute("href")) return t2;
      if (t2 === e2.currentTarget) break;
      t2 = t2.parentElement;
    }
    return null;
  }, t.prototype.isRelative = function(e2) {
    return !e2.match(/^(\/\/|https?:\/\/)/i);
  }, t.prototype.parseUrl = function(e2) {
    var t2 = document.createElement("a");
    return t2.href = e2, t2;
  }, t.prototype.convertToRelative = function(e2) {
    var t2 = this.parseUrl(location.href), n = this.parseUrl(e2);
    if (t2.host === n.host) {
      var i = n.pathname + (n.search ? n.search : "");
      return i.startsWith("#") ? null : i || "/";
    }
    return null;
  }, t;
}(import_react3.default.Component);
var Router = withBuilder(RouterComponent, { name: "Core:Router", hideFromInsertMenu: true, inputs: [{ name: "model", type: "string", defaultValue: "page", advanced: true }, { name: "handleRouting", type: "boolean", defaultValue: true, advanced: true }, { name: "preloadOnHover", type: "boolean", defaultValue: true, advanced: true }, { name: "onRoute", type: "function", advanced: true }] });
function Mutation(e) {
  var t, n, i = import_react3.default.useRef(null);
  useWaitForSelector(e.selector, function(t2) {
    "afterEnd" !== e.type && (t2.innerHTML = ""), t2.appendChild(i.current.firstElementChild);
  });
  var r = null === (t = e.builderBlock) || void 0 === t ? void 0 : t.children;
  return jsx("span", { style: { display: "none" }, ref: i }, jsx(BuilderBlocks, { style: { display: "inline" }, child: true, parentElementId: null === (n = e.builderBlock) || void 0 === n ? void 0 : n.id, dataPath: "this.children", blocks: r }));
}
function useWaitForSelector(e, t) {
  import_react3.default.useLayoutEffect(function() {
    try {
      var n = document.querySelector(e);
      if (n) return void t(n);
    } catch (e2) {
      console.warn(e2);
    }
    var i = new MutationObserver(function() {
      try {
        var n2 = document.querySelector(e);
        n2 && (i.disconnect(), t(n2));
      } catch (e2) {
        console.warn(e2);
      }
    });
    return i.observe(document.body, { attributes: true, subtree: true, characterData: true }), function() {
      i.disconnect();
    };
  }, [e]);
}
Builder.registerComponent(Mutation, { name: "Builder:Mutation", canHaveChildren: true, noWrap: true, hideFromInsertMenu: true, inputs: [{ name: "type", type: "string", defaultValue: "replace", enum: [{ label: "Replace", value: "replace", helperText: "Replace the contents of this site region with content from Builder" }, { label: "Append", value: "afterEnd", helperText: "Append Builder content after the chosen site region" }] }, { name: "selector", type: "builder:domSelector" }] });
var get = function(e, t, n) {
  var i = String.prototype.split.call(t, /[,[\].]+?/).filter(Boolean).reduce(function(e2, t2) {
    return null != e2 ? e2[t2] : e2;
  }, e);
  return void 0 === i || i === e ? n : i;
};
var MULTIPART_CONTENT_TYPE = "multipart/form-data";
var JSON_CONTENT_TYPE = "application/json";
var ENCODED_CONTENT_TYPE = "application/x-www-form-urlencoded";
var FormComponent = function(e) {
  function t() {
    var t2 = null !== e && e.apply(this, arguments) || this;
    return t2.ref = null, t2.state = { state: "unsubmitted", responseData: null, formErrorMessage: "" }, t2;
  }
  return __extends(t, e), Object.defineProperty(t.prototype, "submissionState", { get: function() {
    return Builder.isEditing && this.props.previewState || this.state.state;
  }, enumerable: false, configurable: true }), t.prototype.render = function() {
    var e2 = this;
    return jsx(BuilderStoreContext.Consumer, null, function(t2) {
      return jsx(BuilderStoreContext.Provider, { value: __assign2(__assign2({}, t2), { state: __assign2(__assign2({}, t2.state), { formErrorMessage: e2.state.formErrorMessage }) }) }, jsx("form", __assign2({ validate: e2.props.validate, ref: function(t3) {
        return e2.ref = t3;
      }, action: !e2.props.sendWithJs && e2.props.action, method: e2.props.method, name: e2.props.name, onSubmit: function(t3) {
        var n, i = e2.props.sendWithJs || "email" === e2.props.sendSubmissionsTo;
        if ("zapier" === e2.props.sendSubmissionsTo) t3.preventDefault();
        else if (i) {
          if (!e2.props.action && "email" !== e2.props.sendSubmissionsTo) return void t3.preventDefault();
          t3.preventDefault();
          var r = t3.currentTarget, o = e2.props.customHeaders || {}, a = void 0, s = new FormData(r), l = Array.from(t3.currentTarget.querySelectorAll("input,select,textarea")).filter(function(e3) {
            return !!e3.name;
          }).map(function(e3) {
            var t4, n2 = e3.name;
            if (e3 instanceof HTMLInputElement) if ("radio" === e3.type) {
              if (e3.checked) return { key: n2, value: t4 = e3.name };
            } else if ("checkbox" === e3.type) t4 = e3.checked;
            else if ("number" === e3.type || "range" === e3.type) {
              var i2 = e3.valueAsNumber;
              isNaN(i2) || (t4 = i2);
            } else t4 = "file" === e3.type ? e3.files : e3.value;
            else t4 = e3.value;
            return { key: n2, value: t4 };
          }), u = e2.props.contentType;
          if ("email" === e2.props.sendSubmissionsTo && (u = MULTIPART_CONTENT_TYPE), Array.from(l).forEach(function(e3) {
            var t4 = e3.value;
            (t4 instanceof File || Array.isArray(t4) && t4[0] instanceof File || t4 instanceof FileList) && (u = MULTIPART_CONTENT_TYPE);
          }), u === MULTIPART_CONTENT_TYPE) a = s;
          else if (u === JSON_CONTENT_TYPE) {
            var d = {};
            Array.from(l).forEach(function(e3) {
              var t4 = e3.value, n2 = e3.key;
              set(d, n2, t4);
            }), a = JSON.stringify(d);
          } else {
            if (u !== ENCODED_CONTENT_TYPE) return void console.error("Unsupported content type: ", u);
            a = Array.from(l).map(function(e3) {
              var t4 = e3.value, n2 = e3.key;
              return encodeURIComponent(n2) + "=" + encodeURIComponent(t4);
            }).join("&");
          }
          u && u !== MULTIPART_CONTENT_TYPE && (i && (null === (n = e2.props.action) || void 0 === n ? void 0 : n.includes("zapier.com")) || (o["content-type"] = u));
          var c = new CustomEvent("presubmit", { detail: { body: a } });
          if (e2.ref && (e2.ref.dispatchEvent(c), c.defaultPrevented)) return;
          e2.setState(__assign2(__assign2({}, e2.state), { state: "sending" }));
          var p = "".concat("dev" === builder.env ? "http://localhost:5000" : "https://builder.io", "/api/v1/form-submit?apiKey=").concat(builder.apiKey, "&to=").concat(btoa(e2.props.sendSubmissionsToEmail || ""), "&name=").concat(encodeURIComponent(e2.props.name || ""));
          fetch("email" === e2.props.sendSubmissionsTo ? p : e2.props.action, { body: a, headers: o, method: e2.props.method || "post" }).then(function(t4) {
            return __awaiter(e2, void 0, void 0, function() {
              var e3, n2, i2, r2, o2;
              return __generator(this, function(a2) {
                switch (a2.label) {
                  case 0:
                    return (n2 = t4.headers.get("content-type")) && -1 !== n2.indexOf(JSON_CONTENT_TYPE) ? [4, t4.json()] : [3, 2];
                  case 1:
                    return e3 = a2.sent(), [3, 4];
                  case 2:
                    return [4, t4.text()];
                  case 3:
                    e3 = a2.sent(), a2.label = 4;
                  case 4:
                    if (!t4.ok && this.props.errorMessagePath && (i2 = get(e3, this.props.errorMessagePath)) && ("string" != typeof i2 && (i2 = JSON.stringify(i2)), this.setState(__assign2(__assign2({}, this.state), { formErrorMessage: i2 }))), this.setState(__assign2(__assign2({}, this.state), { responseData: e3, state: t4.ok ? "success" : "error" })), t4.ok) {
                      if (r2 = new CustomEvent("submit:success", { detail: { res: t4, body: e3 } }), this.ref) {
                        if (this.ref.dispatchEvent(r2), r2.defaultPrevented) return [2];
                        false !== this.props.resetFormOnSubmit && this.ref.reset();
                      }
                      this.props.successUrl && (this.ref ? (o2 = new CustomEvent("route", { detail: { url: this.props.successUrl } }), this.ref.dispatchEvent(o2), o2.defaultPrevented || (location.href = this.props.successUrl)) : location.href = this.props.successUrl);
                    }
                    return [2];
                }
              });
            });
          }, function(t4) {
            var n2 = new CustomEvent("submit:error", { detail: { error: t4 } });
            e2.ref && (e2.ref.dispatchEvent(n2), n2.defaultPrevented) || e2.setState(__assign2(__assign2({}, e2.state), { responseData: t4, state: "error" }));
          });
        }
      } }, e2.props.attributes), e2.props.builderBlock && e2.props.builderBlock.children && e2.props.builderBlock.children.map(function(e3, t3) {
        return jsx(BuilderBlock$1, { key: e3.id, block: e3 });
      }), "error" === e2.submissionState && jsx(BuilderBlocks, { dataPath: "errorMessage", blocks: e2.props.errorMessage }), "sending" === e2.submissionState && jsx(BuilderBlocks, { dataPath: "sendingMessage", blocks: e2.props.sendingMessage }), "error" === e2.submissionState && e2.state.responseData && jsx("pre", { className: "builder-form-error-text", css: { padding: 10, color: "red", textAlign: "center" } }, JSON.stringify(e2.state.responseData, null, 2)), "success" === e2.submissionState && jsx(BuilderBlocks, { dataPath: "successMessage", blocks: e2.props.successMessage })));
    });
  }, t;
}(import_react3.default.Component);
var Form = withBuilder(FormComponent, { name: "Form:Form", defaults: { responsiveStyles: { large: { marginTop: "15px", paddingBottom: "15px" } } }, image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fef36d2a846134910b64b88e6d18c5ca5", inputs: [{ name: "sendSubmissionsTo", type: "string", enum: [{ label: "Send to email", value: "email", helperText: "Send form submissions to the email address of your choosing" }, { label: "Custom", value: "custom", helperText: "Handle where the form requests go manually with a little code, e.g. to your own custom backend" }], defaultValue: "email" }, { name: "sendSubmissionsToEmail", type: "string", required: true, defaultValue: "your@email.com", showIf: 'options.get("sendSubmissionsTo") === "email"' }, { name: "sendWithJs", type: "boolean", helperText: "Set to false to use basic html form action", defaultValue: true, showIf: 'options.get("sendSubmissionsTo") === "custom"' }, { name: "name", type: "string", defaultValue: "My form" }, { name: "action", type: "string", helperText: "URL to send the form data to", showIf: 'options.get("sendSubmissionsTo") === "custom"' }, { name: "contentType", type: "string", defaultValue: JSON_CONTENT_TYPE, advanced: true, enum: [JSON_CONTENT_TYPE, MULTIPART_CONTENT_TYPE, ENCODED_CONTENT_TYPE], showIf: 'options.get("sendSubmissionsTo") === "custom" && options.get("sendWithJs") === true' }, { name: "method", type: "string", showIf: 'options.get("sendSubmissionsTo") === "custom"', defaultValue: "POST", advanced: true }, { name: "previewState", type: "string", enum: ["unsubmitted", "sending", "success", "error"], defaultValue: "unsubmitted", helperText: 'Choose a state to edit, e.g. choose "success" to show what users see on success and edit the message', showIf: 'options.get("sendSubmissionsTo") !== "zapier" && options.get("sendWithJs") === true' }, { name: "successUrl", type: "url", helperText: "Optional URL to redirect the user to on form submission success", showIf: 'options.get("sendSubmissionsTo") !== "zapier" && options.get("sendWithJs") === true' }, { name: "resetFormOnSubmit", type: "boolean", showIf: function(e) {
  return "custom" === e.get("sendSubmissionsTo") && true === e.get("sendWithJs");
}, advanced: true }, { name: "successMessage", type: "uiBlocks", hideFromUI: true, defaultValue: [{ "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { marginTop: "10px" } }, component: { name: "Text", options: { text: "<span>Thanks!</span>" } } }] }, { name: "validate", type: "boolean", defaultValue: true, advanced: true }, { name: "errorMessagePath", type: "text", advanced: true, helperText: 'Path to where to get the error message from in a JSON response to display to the user, e.g. "error.message" for a response like { "error": { "message": "this username is taken" }}' }, { name: "errorMessage", type: "uiBlocks", hideFromUI: true, defaultValue: [{ "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { marginTop: "10px" } }, bindings: { "component.options.text": "state.formErrorMessage || block.component.options.text" }, component: { name: "Text", options: { text: "<span>Form submission error :( Please check your answers and try again</span>" } } }] }, { name: "sendingMessage", type: "uiBlocks", hideFromUI: true, defaultValue: [{ "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { marginTop: "10px" } }, component: { name: "Text", options: { text: "<span>Sending...</span>" } } }] }, __assign2(__assign2({ name: "customHeaders", type: "map" }, { valueType: { type: "string" } }), { advanced: true, showIf: 'options.get("sendSubmissionsTo") === "custom" && options.get("sendWithJs") === true' })], noWrap: true, canHaveChildren: true, defaultChildren: [{ "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { marginTop: "10px" } }, component: { name: "Text", options: { text: "<span>Enter your name</span>" } } }, { "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { marginTop: "10px" } }, component: { name: "Form:Input", options: { name: "name", placeholder: "Jane Doe" } } }, { "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { marginTop: "10px" } }, component: { name: "Text", options: { text: "<span>Enter your email</span>" } } }, { "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { marginTop: "10px" } }, component: { name: "Form:Input", options: { name: "email", placeholder: "jane@doe.com" } } }, { "@type": "@builder.io/sdk:Element", responsiveStyles: { large: { marginTop: "10px" } }, component: { name: "Form:SubmitButton", options: { text: "Submit" } } }] });
var FormInputComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    return import_react3.default.createElement("input", __assign2({ key: Builder.isEditing && this.props.defaultValue ? this.props.defaultValue : "default-key", placeholder: this.props.placeholder, type: this.props.type, name: this.props.name, value: this.props.value, defaultValue: this.props.defaultValue, required: this.props.required }, this.props.attributes));
  }, t;
}(import_react3.default.Component);
var FormInput = withBuilder(FormInputComponent, { name: "Form:Input", image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fad6f37889d9e40bbbbc72cdb5875d6ca", inputs: [{ name: "type", type: "text", enum: ["text", "number", "email", "url", "checkbox", "radio", "range", "date", "datetime-local", "search", "tel", "time", "file", "month", "week", "password", "color", "hidden"], defaultValue: "text" }, { name: "name", type: "string", required: true, helperText: 'Every input in a form needs a unique name describing what it takes, e.g. "email"' }, { name: "placeholder", type: "string", defaultValue: "Hello there", helperText: "Text to display when there is no value" }, { name: "defaultValue", type: "string" }, { name: "value", type: "string", advanced: true }, { name: "required", type: "boolean", helperText: "Is this input required to be filled out to submit a form", defaultValue: false }], noWrap: true, static: true, defaultStyles: { paddingTop: "10px", paddingBottom: "10px", paddingLeft: "10px", paddingRight: "10px", borderRadius: "3px", borderWidth: "1px", borderStyle: "solid", borderColor: "#ccc" } });
var FormSubmitButtonComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    return import_react3.default.createElement("button", __assign2({ type: "submit" }, this.props.attributes), this.props.text);
  }, t;
}(import_react3.default.Component);
var FormSubmitButton = withBuilder(FormSubmitButtonComponent, { name: "Form:SubmitButton", image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fdf2820ffed1f4349a94c40b3221f5b98", defaultStyles: { appearance: "none", paddingTop: "15px", paddingBottom: "15px", paddingLeft: "25px", paddingRight: "25px", backgroundColor: "#3898EC", color: "white", borderRadius: "4px", cursor: "pointer" }, inputs: [{ name: "text", type: "text", defaultValue: "Click me" }], static: true, noWrap: true });
var LabelComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    return import_react3.default.createElement("label", __assign2({ htmlFor: this.props.for }, this.props.attributes), this.props.text && import_react3.default.createElement("span", { className: "builder-label-text", dangerouslySetInnerHTML: { __html: this.props.text } }), this.props.builderBlock && this.props.builderBlock.children && this.props.builderBlock.children.map(function(e2) {
      return import_react3.default.createElement(BuilderBlock$1, { key: e2.id, block: e2 });
    }));
  }, t;
}(import_react3.default.Component);
var Label = withBuilder(LabelComponent, { name: "Form:Label", image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F9322342f04b545fb9a8091cd801dfb5b", inputs: [{ name: "text", type: "html", richText: true, defaultValue: "Label" }, { name: "for", type: "text", helperText: "The name of the input this label is for", advanced: true }], noWrap: true, static: true, canHaveChildren: true });
var FormSelectComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    var e2 = this.props.options;
    return import_react3.default.createElement("select", __assign2({ value: this.props.value, key: Builder.isEditing && this.props.defaultValue ? this.props.defaultValue : "default-key", defaultValue: this.props.defaultValue, name: this.props.name }, this.props.attributes), e2 && e2.map(function(e3) {
      return import_react3.default.createElement("option", { value: e3.value }, e3.name || e3.value);
    }));
  }, t;
}(import_react3.default.Component);
var FormSelect = withBuilder(FormSelectComponent, { name: "Form:Select", image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F83acca093fb24aaf94dee136e9a4b045", defaultStyles: { alignSelf: "flex-start" }, inputs: [{ name: "options", type: "list", required: true, subFields: [{ name: "value", type: "text", required: true }, { name: "name", type: "text" }], defaultValue: [{ value: "option 1" }, { value: "option 2" }] }, { name: "name", type: "string", required: true, helperText: 'Every select in a form needs a unique name describing what it gets, e.g. "email"' }, { name: "defaultValue", type: "string" }, { name: "value", type: "string", advanced: true }, { name: "required", type: "boolean", defaultValue: false }], static: true, noWrap: true });
var TextAreaComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    return import_react3.default.createElement("textarea", __assign2({ placeholder: this.props.placeholder, name: this.props.name, value: this.props.value, defaultValue: this.props.defaultValue }, this.props.attributes));
  }, t;
}(import_react3.default.Component);
var TextArea = withBuilder(TextAreaComponent, { name: "Form:TextArea", image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Ff74a2f3de58c4c3e939204e5b6b8f6c3", inputs: [{ advanced: true, name: "value", type: "string" }, { name: "name", type: "string", required: true, helperText: 'Every input in a form needs a unique name describing what it gets, e.g. "email"' }, { name: "defaultValue", type: "string" }, { name: "placeholder", type: "string", defaultValue: "Hello there" }, { name: "required", type: "boolean", defaultValue: false }], defaultStyles: { paddingTop: "10px", paddingBottom: "10px", paddingLeft: "10px", paddingRight: "10px", borderRadius: "3px", borderWidth: "1px", borderStyle: "solid", borderColor: "#ccc" }, static: true, noWrap: true });
var ImgComponent = function(e) {
  function t() {
    return null !== e && e.apply(this, arguments) || this;
  }
  return __extends(t, e), t.prototype.render = function() {
    var e2 = this.props.attributes || {};
    return import_react3.default.createElement("img", __assign2({}, this.props.attributes, { src: this.props.image || e2.src }));
  }, t;
}(import_react3.default.Component);
var Img = withBuilder(ImgComponent, { name: "Raw:Img", hideFromInsertMenu: true, image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4", inputs: [{ name: "image", bubble: true, type: "file", allowedFileTypes: ["jpeg", "jpg", "png", "svg"], required: true }], noWrap: true, static: true });
var RawText = function(e) {
  var t = e.attributes || {};
  return React.createElement("span", { className: (null == t ? void 0 : t.class) || (null == t ? void 0 : t.className), dangerouslySetInnerHTML: { __html: e.text || "" } });
};
function isPreviewing() {
  var e = (0, import_react3.useState)(false), t = e[0], n = e[1];
  return (0, import_react3.useEffect)(function() {
    (Builder.isEditing || Builder.isPreviewing) && n(true);
  }, []), t;
}
Builder.registerComponent(RawText, { name: "Builder:RawText", hideFromInsertMenu: true, inputs: [{ name: "text", bubble: true, type: "longText", required: true }] }), Builder.isReact = true;
export {
  Builder,
  BuilderAsyncRequestsContext,
  BuilderBlock,
  BuilderBlock$1 as BuilderBlockComponent,
  BuilderBlocks,
  BuilderComponent2 as BuilderComponent,
  BuilderContent2 as BuilderContent,
  BuilderMetaContext,
  BuilderComponent2 as BuilderPage,
  BuilderStoreContext,
  Button,
  Columns,
  CustomCode,
  Slot as Dropzone,
  Embed,
  Form,
  FormInput,
  FormSelect,
  FormSubmitButton,
  Fragment4 as Fragment,
  Image,
  Img,
  Label,
  Mutation,
  RawText,
  BuilderComponent2 as RenderContent,
  Router,
  Section,
  StateProvider,
  Symbol$1 as Symbol,
  Text,
  TextArea,
  Video,
  builder,
  builder as default,
  getSrcSet,
  isPreviewing,
  noWrap,
  onChange,
  stringToFunction,
  updateMetadata,
  withBuilder,
  withChildren
};
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
//# sourceMappingURL=@builder__io_react.js.map
